// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FC_1u_64u_10u_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_stream_a_V_V_dout,
        in_stream_a_V_V_empty_n,
        in_stream_a_V_V_read,
        out_stream_V_V_din,
        out_stream_V_V_full_n,
        out_stream_V_V_write
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_pp0_stage0 = 21'd1024;
parameter    ap_ST_fsm_state13 = 21'd2048;
parameter    ap_ST_fsm_state14 = 21'd4096;
parameter    ap_ST_fsm_state15 = 21'd8192;
parameter    ap_ST_fsm_pp1_stage0 = 21'd16384;
parameter    ap_ST_fsm_state18 = 21'd32768;
parameter    ap_ST_fsm_pp2_stage0 = 21'd65536;
parameter    ap_ST_fsm_state26 = 21'd131072;
parameter    ap_ST_fsm_state27 = 21'd262144;
parameter    ap_ST_fsm_pp3_stage0 = 21'd524288;
parameter    ap_ST_fsm_state30 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] in_stream_a_V_V_dout;
input   in_stream_a_V_V_empty_n;
output   in_stream_a_V_V_read;
output  [31:0] out_stream_V_V_din;
input   out_stream_V_V_full_n;
output   out_stream_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_stream_a_V_V_read;
reg[31:0] out_stream_V_V_din;
reg out_stream_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] B_COL_3;
reg   [31:0] B_ROW_3;
reg   [31:0] OFMDim_current_3;
reg   [31:0] A_ROW_3;
wire   [1:0] A_V_1_0_address0;
reg    A_V_1_0_ce0;
wire  signed [15:0] A_V_1_0_q0;
reg   [1:0] A_V_1_0_address1;
reg    A_V_1_0_ce1;
reg    A_V_1_0_we1;
reg   [15:0] A_V_1_0_d1;
wire   [5:0] B_V_1_0_address0;
reg    B_V_1_0_ce0;
wire   [15:0] B_V_1_0_q0;
reg   [5:0] B_V_1_0_address1;
reg    B_V_1_0_ce1;
reg    B_V_1_0_we1;
reg   [15:0] B_V_1_0_d1;
wire   [1:0] A_V_1_1_address0;
reg    A_V_1_1_ce0;
wire  signed [15:0] A_V_1_1_q0;
reg   [1:0] A_V_1_1_address1;
reg    A_V_1_1_ce1;
reg    A_V_1_1_we1;
reg   [15:0] A_V_1_1_d1;
wire   [5:0] B_V_1_1_address0;
reg    B_V_1_1_ce0;
wire   [15:0] B_V_1_1_q0;
reg   [5:0] B_V_1_1_address1;
reg    B_V_1_1_ce1;
reg    B_V_1_1_we1;
reg   [15:0] B_V_1_1_d1;
wire   [1:0] A_V_1_2_address0;
reg    A_V_1_2_ce0;
wire  signed [15:0] A_V_1_2_q0;
reg   [1:0] A_V_1_2_address1;
reg    A_V_1_2_ce1;
reg    A_V_1_2_we1;
reg   [15:0] A_V_1_2_d1;
wire   [5:0] B_V_1_2_address0;
reg    B_V_1_2_ce0;
wire   [15:0] B_V_1_2_q0;
reg   [5:0] B_V_1_2_address1;
reg    B_V_1_2_ce1;
reg    B_V_1_2_we1;
reg   [15:0] B_V_1_2_d1;
wire   [1:0] A_V_1_3_address0;
reg    A_V_1_3_ce0;
wire  signed [15:0] A_V_1_3_q0;
reg   [1:0] A_V_1_3_address1;
reg    A_V_1_3_ce1;
reg    A_V_1_3_we1;
reg   [15:0] A_V_1_3_d1;
wire   [5:0] B_V_1_3_address0;
reg    B_V_1_3_ce0;
wire   [15:0] B_V_1_3_q0;
reg   [5:0] B_V_1_3_address1;
reg    B_V_1_3_ce1;
reg    B_V_1_3_we1;
reg   [15:0] B_V_1_3_d1;
wire   [1:0] A_V_1_4_address0;
reg    A_V_1_4_ce0;
wire   [15:0] A_V_1_4_q0;
reg   [1:0] A_V_1_4_address1;
reg    A_V_1_4_ce1;
reg    A_V_1_4_we1;
reg   [15:0] A_V_1_4_d1;
wire   [5:0] B_V_1_4_address0;
reg    B_V_1_4_ce0;
wire   [15:0] B_V_1_4_q0;
reg   [5:0] B_V_1_4_address1;
reg    B_V_1_4_ce1;
reg    B_V_1_4_we1;
reg   [15:0] B_V_1_4_d1;
wire   [1:0] A_V_1_5_address0;
reg    A_V_1_5_ce0;
wire  signed [15:0] A_V_1_5_q0;
reg   [1:0] A_V_1_5_address1;
reg    A_V_1_5_ce1;
reg    A_V_1_5_we1;
reg   [15:0] A_V_1_5_d1;
wire   [5:0] B_V_1_5_address0;
reg    B_V_1_5_ce0;
wire   [15:0] B_V_1_5_q0;
reg   [5:0] B_V_1_5_address1;
reg    B_V_1_5_ce1;
reg    B_V_1_5_we1;
reg   [15:0] B_V_1_5_d1;
wire   [1:0] A_V_1_6_address0;
reg    A_V_1_6_ce0;
wire   [15:0] A_V_1_6_q0;
reg   [1:0] A_V_1_6_address1;
reg    A_V_1_6_ce1;
reg    A_V_1_6_we1;
reg   [15:0] A_V_1_6_d1;
wire   [5:0] B_V_1_6_address0;
reg    B_V_1_6_ce0;
wire   [15:0] B_V_1_6_q0;
reg   [5:0] B_V_1_6_address1;
reg    B_V_1_6_ce1;
reg    B_V_1_6_we1;
reg   [15:0] B_V_1_6_d1;
wire   [1:0] A_V_1_7_address0;
reg    A_V_1_7_ce0;
wire  signed [15:0] A_V_1_7_q0;
reg   [1:0] A_V_1_7_address1;
reg    A_V_1_7_ce1;
reg    A_V_1_7_we1;
reg   [15:0] A_V_1_7_d1;
wire   [5:0] B_V_1_7_address0;
reg    B_V_1_7_ce0;
wire   [15:0] B_V_1_7_q0;
reg   [5:0] B_V_1_7_address1;
reg    B_V_1_7_ce1;
reg    B_V_1_7_we1;
reg   [15:0] B_V_1_7_d1;
wire   [1:0] A_V_1_8_address0;
reg    A_V_1_8_ce0;
wire  signed [15:0] A_V_1_8_q0;
reg   [1:0] A_V_1_8_address1;
reg    A_V_1_8_ce1;
reg    A_V_1_8_we1;
reg   [15:0] A_V_1_8_d1;
wire   [5:0] B_V_1_8_address0;
reg    B_V_1_8_ce0;
wire   [15:0] B_V_1_8_q0;
reg   [5:0] B_V_1_8_address1;
reg    B_V_1_8_ce1;
reg    B_V_1_8_we1;
reg   [15:0] B_V_1_8_d1;
wire   [1:0] A_V_1_9_address0;
reg    A_V_1_9_ce0;
wire  signed [15:0] A_V_1_9_q0;
reg   [1:0] A_V_1_9_address1;
reg    A_V_1_9_ce1;
reg    A_V_1_9_we1;
reg   [15:0] A_V_1_9_d1;
wire   [5:0] B_V_1_9_address0;
reg    B_V_1_9_ce0;
wire   [15:0] B_V_1_9_q0;
reg   [5:0] B_V_1_9_address1;
reg    B_V_1_9_ce1;
reg    B_V_1_9_we1;
reg   [15:0] B_V_1_9_d1;
wire   [1:0] A_V_1_10_address0;
reg    A_V_1_10_ce0;
wire  signed [15:0] A_V_1_10_q0;
reg   [1:0] A_V_1_10_address1;
reg    A_V_1_10_ce1;
reg    A_V_1_10_we1;
reg   [15:0] A_V_1_10_d1;
wire   [5:0] B_V_1_10_address0;
reg    B_V_1_10_ce0;
wire   [15:0] B_V_1_10_q0;
reg   [5:0] B_V_1_10_address1;
reg    B_V_1_10_ce1;
reg    B_V_1_10_we1;
reg   [15:0] B_V_1_10_d1;
wire   [1:0] A_V_1_11_address0;
reg    A_V_1_11_ce0;
wire  signed [15:0] A_V_1_11_q0;
reg   [1:0] A_V_1_11_address1;
reg    A_V_1_11_ce1;
reg    A_V_1_11_we1;
reg   [15:0] A_V_1_11_d1;
wire   [5:0] B_V_1_11_address0;
reg    B_V_1_11_ce0;
wire   [15:0] B_V_1_11_q0;
reg   [5:0] B_V_1_11_address1;
reg    B_V_1_11_ce1;
reg    B_V_1_11_we1;
reg   [15:0] B_V_1_11_d1;
wire   [1:0] A_V_1_12_address0;
reg    A_V_1_12_ce0;
wire   [15:0] A_V_1_12_q0;
reg   [1:0] A_V_1_12_address1;
reg    A_V_1_12_ce1;
reg    A_V_1_12_we1;
reg   [15:0] A_V_1_12_d1;
wire   [5:0] B_V_1_12_address0;
reg    B_V_1_12_ce0;
wire   [15:0] B_V_1_12_q0;
reg   [5:0] B_V_1_12_address1;
reg    B_V_1_12_ce1;
reg    B_V_1_12_we1;
reg   [15:0] B_V_1_12_d1;
wire   [1:0] A_V_1_13_address0;
reg    A_V_1_13_ce0;
wire  signed [15:0] A_V_1_13_q0;
reg   [1:0] A_V_1_13_address1;
reg    A_V_1_13_ce1;
reg    A_V_1_13_we1;
reg   [15:0] A_V_1_13_d1;
wire   [5:0] B_V_1_13_address0;
reg    B_V_1_13_ce0;
wire   [15:0] B_V_1_13_q0;
reg   [5:0] B_V_1_13_address1;
reg    B_V_1_13_ce1;
reg    B_V_1_13_we1;
reg   [15:0] B_V_1_13_d1;
wire   [1:0] A_V_1_14_address0;
reg    A_V_1_14_ce0;
wire   [15:0] A_V_1_14_q0;
reg   [1:0] A_V_1_14_address1;
reg    A_V_1_14_ce1;
reg    A_V_1_14_we1;
reg   [15:0] A_V_1_14_d1;
wire   [5:0] B_V_1_14_address0;
reg    B_V_1_14_ce0;
wire   [15:0] B_V_1_14_q0;
reg   [5:0] B_V_1_14_address1;
reg    B_V_1_14_ce1;
reg    B_V_1_14_we1;
reg   [15:0] B_V_1_14_d1;
wire   [1:0] A_V_1_15_address0;
reg    A_V_1_15_ce0;
wire  signed [15:0] A_V_1_15_q0;
reg   [1:0] A_V_1_15_address1;
reg    A_V_1_15_ce1;
reg    A_V_1_15_we1;
reg   [15:0] A_V_1_15_d1;
wire   [5:0] B_V_1_15_address0;
reg    B_V_1_15_ce0;
wire   [15:0] B_V_1_15_q0;
reg   [5:0] B_V_1_15_address1;
reg    B_V_1_15_ce1;
reg    B_V_1_15_we1;
reg   [15:0] B_V_1_15_d1;
reg    in_stream_a_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] and_ln82_reg_2836;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln108_reg_2393;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln149_reg_2353;
reg    out_stream_V_V_blk_n;
reg    ap_enable_reg_pp2_iter6;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln124_4_reg_2569;
reg   [0:0] icmp_ln124_4_reg_2569_pp2_iter5_reg;
reg   [31:0] i3_0_reg_1348;
reg   [6:0] j2_0_reg_1381;
reg   [33:0] indvar_flatten6_reg_1392;
reg   [31:0] ib_0_reg_1403;
reg   [31:0] p_0300_0_reg_1414;
reg   [2:0] ic_0_reg_1426;
reg   [9:0] indvar_flatten_reg_1437;
reg   [3:0] i_0_reg_1448;
reg   [6:0] j_0_reg_1459;
reg   [4:0] reg_1489;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state16_pp1_stage0_iter0;
reg    ap_block_state17_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln105_fu_1601_p2;
wire   [0:0] icmp_ln108_fu_1621_p2;
reg   [4:0] reg_1493;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state28_pp3_stage0_iter0;
reg    ap_block_state29_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln78_fu_2010_p2;
wire   [0:0] and_ln82_fu_2077_p2;
reg   [31:0] tmp_V_reg_2277;
reg    ap_block_state1;
reg   [31:0] tmp_V_308_reg_2283;
reg    ap_block_state2;
reg  signed [31:0] tmp_V_310_reg_2288;
reg    ap_block_state3;
reg  signed [31:0] tmp_V_312_reg_2296;
reg    ap_block_state4;
reg  signed [31:0] tmp_V_316_reg_2302;
reg    ap_block_state6;
reg   [31:0] tmp_V_318_reg_2310;
reg    ap_block_state7;
wire   [0:0] icmp_ln72_fu_1497_p2;
reg    ap_block_state8;
reg   [31:0] B_ROW_3_load_reg_2319;
wire   [0:0] icmp_ln95_fu_1510_p2;
wire  signed [31:0] KER_size_0_fu_1515_p2;
reg  signed [31:0] KER_size_0_reg_2328;
wire   [33:0] tmp_64_fu_1519_p3;
reg   [33:0] tmp_64_reg_2333;
wire  signed [31:0] mul_ln75_fu_1532_p2;
reg  signed [31:0] mul_ln75_reg_2338;
wire  signed [31:0] KER_size_1_fu_1541_p2;
reg  signed [31:0] KER_size_1_reg_2343;
wire    ap_CS_fsm_state9;
wire   [31:0] KER_bound_fu_1545_p2;
reg   [31:0] KER_bound_reg_2348;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln149_fu_1549_p2;
wire    ap_block_state11_pp0_stage0_iter0;
reg    ap_block_state12_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] i_fu_1554_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] num_imag_fu_1565_p2;
reg   [31:0] num_imag_reg_2365;
wire    ap_CS_fsm_state14;
wire   [31:0] A_COL_ITER_fu_1575_p2;
reg   [31:0] A_COL_ITER_reg_2370;
wire   [0:0] icmp_ln96_fu_1560_p2;
wire   [0:0] icmp_ln102_fu_1590_p2;
wire    ap_CS_fsm_state15;
wire   [30:0] add_ln102_fu_1595_p2;
reg   [30:0] add_ln102_reg_2379;
wire   [6:0] j_4_fu_1607_p2;
wire   [1:0] trunc_ln180_9_fu_1627_p1;
reg   [1:0] trunc_ln180_9_reg_2397;
wire   [1:0] trunc_ln180_8_fu_1631_p1;
reg   [1:0] trunc_ln180_8_reg_2402;
wire   [0:0] icmp_ln121_fu_1693_p2;
reg   [0:0] icmp_ln121_reg_2407;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state19_pp2_stage0_iter0;
wire    ap_block_state20_pp2_stage0_iter1;
wire    ap_block_state21_pp2_stage0_iter2;
wire    ap_block_state22_pp2_stage0_iter3;
wire    ap_block_state23_pp2_stage0_iter4;
wire    ap_block_state24_pp2_stage0_iter5;
reg    ap_block_state25_pp2_stage0_iter6;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln121_reg_2407_pp2_iter1_reg;
reg   [0:0] icmp_ln121_reg_2407_pp2_iter2_reg;
reg   [0:0] icmp_ln121_reg_2407_pp2_iter3_reg;
reg   [0:0] icmp_ln121_reg_2407_pp2_iter4_reg;
reg   [0:0] icmp_ln121_reg_2407_pp2_iter5_reg;
wire   [33:0] add_ln121_fu_1698_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln124_fu_1710_p2;
reg   [0:0] icmp_ln124_reg_2416;
reg   [0:0] icmp_ln124_reg_2416_pp2_iter1_reg;
reg   [0:0] icmp_ln124_reg_2416_pp2_iter2_reg;
reg   [0:0] icmp_ln124_reg_2416_pp2_iter3_reg;
reg   [0:0] icmp_ln124_reg_2416_pp2_iter4_reg;
wire   [2:0] select_ln127_7_fu_1716_p3;
reg   [2:0] select_ln127_7_reg_2421;
wire   [31:0] select_ln127_8_fu_1724_p3;
reg   [31:0] select_ln127_8_reg_2426;
wire  signed [63:0] sext_ln215_179_fu_1754_p1;
reg  signed [63:0] sext_ln215_179_reg_2431;
reg  signed [63:0] sext_ln215_179_reg_2431_pp2_iter1_reg;
wire   [2:0] ic_fu_1762_p2;
reg   [2:0] ic_reg_2467;
wire   [63:0] zext_ln215_fu_1768_p1;
reg   [63:0] zext_ln215_reg_2473;
reg  signed [15:0] B_V_1_1_load_reg_2549;
reg    ap_enable_reg_pp2_iter1;
reg  signed [15:0] B_V_1_3_load_reg_2554;
reg  signed [15:0] B_V_1_9_load_reg_2559;
reg  signed [15:0] B_V_1_11_load_reg_2564;
wire   [0:0] icmp_ln124_4_fu_1775_p2;
reg   [0:0] icmp_ln124_4_reg_2569_pp2_iter2_reg;
reg   [0:0] icmp_ln124_4_reg_2569_pp2_iter3_reg;
reg   [0:0] icmp_ln124_4_reg_2569_pp2_iter4_reg;
reg  signed [15:0] B_V_1_0_load_reg_2653;
reg    ap_enable_reg_pp2_iter2;
wire  signed [31:0] mul_ln1352_73_fu_2169_p2;
reg  signed [31:0] mul_ln1352_73_reg_2658;
reg  signed [15:0] B_V_1_2_load_reg_2663;
wire  signed [31:0] mul_ln1352_75_fu_2175_p2;
reg  signed [31:0] mul_ln1352_75_reg_2668;
reg  signed [15:0] B_V_1_5_load_reg_2673;
reg  signed [15:0] B_V_1_7_load_reg_2678;
reg  signed [15:0] B_V_1_8_load_reg_2683;
wire  signed [31:0] mul_ln1352_81_fu_2181_p2;
reg  signed [31:0] mul_ln1352_81_reg_2688;
reg  signed [15:0] B_V_1_10_load_reg_2693;
wire  signed [31:0] mul_ln1352_83_fu_2187_p2;
reg  signed [31:0] mul_ln1352_83_reg_2698;
reg  signed [15:0] B_V_1_13_load_reg_2703;
reg  signed [15:0] B_V_1_15_load_reg_2708;
reg  signed [15:0] A_V_1_4_load_reg_2713;
reg    ap_enable_reg_pp2_iter3;
reg  signed [15:0] B_V_1_4_load_reg_2718;
wire  signed [31:0] mul_ln1352_77_fu_2207_p2;
reg  signed [31:0] mul_ln1352_77_reg_2723;
reg  signed [15:0] A_V_1_6_load_reg_2728;
reg  signed [15:0] B_V_1_6_load_reg_2733;
wire  signed [31:0] mul_ln1352_79_fu_2213_p2;
reg  signed [31:0] mul_ln1352_79_reg_2738;
reg  signed [15:0] A_V_1_12_load_reg_2743;
reg  signed [15:0] B_V_1_12_load_reg_2748;
wire  signed [31:0] mul_ln1352_85_fu_2233_p2;
reg  signed [31:0] mul_ln1352_85_reg_2753;
reg  signed [15:0] A_V_1_14_load_reg_2758;
reg  signed [15:0] B_V_1_14_load_reg_2763;
wire  signed [31:0] mul_ln1352_87_fu_2239_p2;
reg  signed [31:0] mul_ln1352_87_reg_2768;
wire  signed [31:0] grp_fu_2193_p3;
reg  signed [31:0] add_ln700_reg_2773;
wire  signed [31:0] grp_fu_2200_p3;
reg  signed [31:0] add_ln700_73_reg_2778;
wire  signed [31:0] grp_fu_2219_p3;
reg  signed [31:0] add_ln700_79_reg_2783;
wire  signed [31:0] grp_fu_2226_p3;
reg  signed [31:0] add_ln700_80_reg_2788;
wire   [31:0] add_ln700_78_fu_1896_p2;
reg   [31:0] add_ln700_78_reg_2793;
wire   [31:0] add_ln700_85_fu_1910_p2;
reg   [31:0] add_ln700_85_reg_2798;
wire   [31:0] add_ln700_87_fu_1927_p2;
reg   [31:0] add_ln700_87_reg_2803;
reg    ap_enable_reg_pp2_iter5;
reg   [16:0] tmp_67_reg_2810;
wire   [31:0] mul_ln75_4_fu_1991_p2;
reg   [31:0] mul_ln75_4_reg_2815;
wire    ap_CS_fsm_state27;
reg   [0:0] icmp_ln78_reg_2820;
wire   [9:0] add_ln78_fu_2016_p2;
wire   [3:0] select_ln78_7_fu_2047_p3;
reg   [3:0] select_ln78_7_reg_2829;
wire   [1:0] trunc_ln180_7_fu_2083_p1;
reg   [1:0] trunc_ln180_7_reg_2840;
wire   [1:0] trunc_ln180_fu_2087_p1;
reg   [1:0] trunc_ln180_reg_2845;
wire   [6:0] j_fu_2091_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state16;
wire    ap_CS_fsm_state18;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state19;
reg    ap_enable_reg_pp2_iter4;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state28;
reg   [31:0] num_imag_0_reg_1359;
reg   [30:0] iter_0_reg_1370;
wire    ap_CS_fsm_state26;
reg   [31:0] ap_phi_mux_ib_0_phi_fu_1407_p4;
reg   [31:0] ap_phi_mux_p_0300_0_phi_fu_1418_p4;
reg   [2:0] ap_phi_mux_ic_0_phi_fu_1430_p4;
reg   [3:0] ap_phi_mux_i_0_phi_fu_1452_p4;
wire   [63:0] zext_ln180_12_fu_1635_p1;
wire   [63:0] zext_ln180_11_fu_1674_p1;
wire   [63:0] zext_ln180_13_fu_2103_p1;
wire   [63:0] zext_ln180_fu_2149_p1;
reg    ap_block_state5;
reg    ap_block_pp0_stage0_01001;
wire  signed [31:0] tmp_V_327_fu_1986_p1;
reg    ap_block_pp2_stage0_01001;
reg    ap_block_pp3_stage0_01001;
wire   [15:0] trunc_ln68_4_fu_1654_p1;
wire   [15:0] trunc_ln68_fu_2123_p1;
wire   [6:0] select_ln78_fu_2034_p3;
wire  signed [31:0] A_COL_ITER_fu_1575_p0;
wire  signed [31:0] A_COL_ITER_fu_1575_p1;
wire   [31:0] zext_ln102_fu_1586_p1;
wire   [31:0] zext_ln105_fu_1613_p1;
wire   [31:0] ib_fu_1704_p2;
wire   [4:0] trunc_ln124_fu_1732_p1;
wire   [6:0] sext_ln215_179_cast_fu_1736_p3;
wire   [6:0] zext_ln215_4_fu_1744_p1;
wire   [6:0] add_ln215_fu_1748_p2;
wire  signed [31:0] grp_fu_2245_p3;
wire  signed [31:0] grp_fu_2253_p3;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_74_fu_1888_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_77_fu_1892_p2;
wire  signed [31:0] grp_fu_2261_p3;
wire  signed [31:0] grp_fu_2269_p3;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_81_fu_1902_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_84_fu_1906_p2;
wire   [31:0] add_ln700_86_fu_1923_p2;
wire   [31:0] select_ln127_fu_1916_p3;
wire   [31:0] sub_ln1371_fu_1933_p2;
wire   [17:0] zext_ln1371_fu_1956_p1;
wire   [16:0] tmp_68_fu_1965_p4;
wire   [0:0] tmp_19_fu_1949_p3;
wire   [17:0] sub_ln1371_4_fu_1959_p2;
wire   [17:0] zext_ln1371_4_fu_1974_p1;
wire   [17:0] output_data_fu_1978_p3;
wire   [31:0] zext_ln78_fu_2001_p1;
wire   [0:0] icmp_ln79_fu_2028_p2;
wire   [3:0] i_9_fu_2022_p2;
wire   [31:0] zext_ln78_4_fu_2043_p1;
wire   [0:0] icmp_ln82_5_fu_2055_p2;
wire   [0:0] icmp_ln82_4_fu_2005_p2;
wire   [31:0] zext_ln79_fu_2068_p1;
wire   [0:0] icmp_ln82_fu_2072_p2;
wire   [0:0] select_ln78_8_fu_2060_p3;
wire   [5:0] tmp_66_fu_2097_p3;
wire   [5:0] tmp_65_fu_2143_p3;
wire    ap_CS_fsm_state13;
reg   [20:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_condition_2050;
reg    ap_condition_2053;
reg    ap_condition_2056;
reg    ap_condition_2059;
reg    ap_condition_2062;
reg    ap_condition_2065;
reg    ap_condition_2082;
reg    ap_condition_2085;
reg    ap_condition_2088;
reg    ap_condition_2091;
reg    ap_condition_2094;
reg    ap_condition_2097;
reg    ap_condition_2100;
reg    ap_condition_2103;
reg    ap_condition_2106;
reg    ap_condition_2109;
reg    ap_condition_2112;
reg    ap_condition_2115;
reg    ap_condition_2118;
reg    ap_condition_2121;
reg    ap_condition_2124;
reg    ap_condition_2127;
reg    ap_condition_2144;
reg    ap_condition_2147;
reg    ap_condition_2150;
reg    ap_condition_2153;
reg    ap_condition_2156;
reg    ap_condition_2159;
reg    ap_condition_2162;
reg    ap_condition_2165;
reg    ap_condition_2168;
reg    ap_condition_2171;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 21'd1;
#0 B_COL_3 = 32'd10;
#0 B_ROW_3 = 32'd64;
#0 OFMDim_current_3 = 32'd0;
#0 A_ROW_3 = 32'd64;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
end

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_0_address0),
    .ce0(A_V_1_0_ce0),
    .q0(A_V_1_0_q0),
    .address1(A_V_1_0_address1),
    .ce1(A_V_1_0_ce1),
    .we1(A_V_1_0_we1),
    .d1(A_V_1_0_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_0_address0),
    .ce0(B_V_1_0_ce0),
    .q0(B_V_1_0_q0),
    .address1(B_V_1_0_address1),
    .ce1(B_V_1_0_ce1),
    .we1(B_V_1_0_we1),
    .d1(B_V_1_0_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_1_address0),
    .ce0(A_V_1_1_ce0),
    .q0(A_V_1_1_q0),
    .address1(A_V_1_1_address1),
    .ce1(A_V_1_1_ce1),
    .we1(A_V_1_1_we1),
    .d1(A_V_1_1_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_1_address0),
    .ce0(B_V_1_1_ce0),
    .q0(B_V_1_1_q0),
    .address1(B_V_1_1_address1),
    .ce1(B_V_1_1_ce1),
    .we1(B_V_1_1_we1),
    .d1(B_V_1_1_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_2_address0),
    .ce0(A_V_1_2_ce0),
    .q0(A_V_1_2_q0),
    .address1(A_V_1_2_address1),
    .ce1(A_V_1_2_ce1),
    .we1(A_V_1_2_we1),
    .d1(A_V_1_2_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_2_address0),
    .ce0(B_V_1_2_ce0),
    .q0(B_V_1_2_q0),
    .address1(B_V_1_2_address1),
    .ce1(B_V_1_2_ce1),
    .we1(B_V_1_2_we1),
    .d1(B_V_1_2_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_3_address0),
    .ce0(A_V_1_3_ce0),
    .q0(A_V_1_3_q0),
    .address1(A_V_1_3_address1),
    .ce1(A_V_1_3_ce1),
    .we1(A_V_1_3_we1),
    .d1(A_V_1_3_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_3_address0),
    .ce0(B_V_1_3_ce0),
    .q0(B_V_1_3_q0),
    .address1(B_V_1_3_address1),
    .ce1(B_V_1_3_ce1),
    .we1(B_V_1_3_we1),
    .d1(B_V_1_3_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_4_address0),
    .ce0(A_V_1_4_ce0),
    .q0(A_V_1_4_q0),
    .address1(A_V_1_4_address1),
    .ce1(A_V_1_4_ce1),
    .we1(A_V_1_4_we1),
    .d1(A_V_1_4_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_4_address0),
    .ce0(B_V_1_4_ce0),
    .q0(B_V_1_4_q0),
    .address1(B_V_1_4_address1),
    .ce1(B_V_1_4_ce1),
    .we1(B_V_1_4_we1),
    .d1(B_V_1_4_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_5_address0),
    .ce0(A_V_1_5_ce0),
    .q0(A_V_1_5_q0),
    .address1(A_V_1_5_address1),
    .ce1(A_V_1_5_ce1),
    .we1(A_V_1_5_we1),
    .d1(A_V_1_5_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_5_address0),
    .ce0(B_V_1_5_ce0),
    .q0(B_V_1_5_q0),
    .address1(B_V_1_5_address1),
    .ce1(B_V_1_5_ce1),
    .we1(B_V_1_5_we1),
    .d1(B_V_1_5_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_6_address0),
    .ce0(A_V_1_6_ce0),
    .q0(A_V_1_6_q0),
    .address1(A_V_1_6_address1),
    .ce1(A_V_1_6_ce1),
    .we1(A_V_1_6_we1),
    .d1(A_V_1_6_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_6_address0),
    .ce0(B_V_1_6_ce0),
    .q0(B_V_1_6_q0),
    .address1(B_V_1_6_address1),
    .ce1(B_V_1_6_ce1),
    .we1(B_V_1_6_we1),
    .d1(B_V_1_6_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_7_address0),
    .ce0(A_V_1_7_ce0),
    .q0(A_V_1_7_q0),
    .address1(A_V_1_7_address1),
    .ce1(A_V_1_7_ce1),
    .we1(A_V_1_7_we1),
    .d1(A_V_1_7_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_7_address0),
    .ce0(B_V_1_7_ce0),
    .q0(B_V_1_7_q0),
    .address1(B_V_1_7_address1),
    .ce1(B_V_1_7_ce1),
    .we1(B_V_1_7_we1),
    .d1(B_V_1_7_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_8_address0),
    .ce0(A_V_1_8_ce0),
    .q0(A_V_1_8_q0),
    .address1(A_V_1_8_address1),
    .ce1(A_V_1_8_ce1),
    .we1(A_V_1_8_we1),
    .d1(A_V_1_8_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_8_address0),
    .ce0(B_V_1_8_ce0),
    .q0(B_V_1_8_q0),
    .address1(B_V_1_8_address1),
    .ce1(B_V_1_8_ce1),
    .we1(B_V_1_8_we1),
    .d1(B_V_1_8_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_9_address0),
    .ce0(A_V_1_9_ce0),
    .q0(A_V_1_9_q0),
    .address1(A_V_1_9_address1),
    .ce1(A_V_1_9_ce1),
    .we1(A_V_1_9_we1),
    .d1(A_V_1_9_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_9_address0),
    .ce0(B_V_1_9_ce0),
    .q0(B_V_1_9_q0),
    .address1(B_V_1_9_address1),
    .ce1(B_V_1_9_ce1),
    .we1(B_V_1_9_we1),
    .d1(B_V_1_9_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_10_address0),
    .ce0(A_V_1_10_ce0),
    .q0(A_V_1_10_q0),
    .address1(A_V_1_10_address1),
    .ce1(A_V_1_10_ce1),
    .we1(A_V_1_10_we1),
    .d1(A_V_1_10_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_10_address0),
    .ce0(B_V_1_10_ce0),
    .q0(B_V_1_10_q0),
    .address1(B_V_1_10_address1),
    .ce1(B_V_1_10_ce1),
    .we1(B_V_1_10_we1),
    .d1(B_V_1_10_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_11_address0),
    .ce0(A_V_1_11_ce0),
    .q0(A_V_1_11_q0),
    .address1(A_V_1_11_address1),
    .ce1(A_V_1_11_ce1),
    .we1(A_V_1_11_we1),
    .d1(A_V_1_11_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_11_address0),
    .ce0(B_V_1_11_ce0),
    .q0(B_V_1_11_q0),
    .address1(B_V_1_11_address1),
    .ce1(B_V_1_11_ce1),
    .we1(B_V_1_11_we1),
    .d1(B_V_1_11_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_12_address0),
    .ce0(A_V_1_12_ce0),
    .q0(A_V_1_12_q0),
    .address1(A_V_1_12_address1),
    .ce1(A_V_1_12_ce1),
    .we1(A_V_1_12_we1),
    .d1(A_V_1_12_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_12_address0),
    .ce0(B_V_1_12_ce0),
    .q0(B_V_1_12_q0),
    .address1(B_V_1_12_address1),
    .ce1(B_V_1_12_ce1),
    .we1(B_V_1_12_we1),
    .d1(B_V_1_12_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_13_address0),
    .ce0(A_V_1_13_ce0),
    .q0(A_V_1_13_q0),
    .address1(A_V_1_13_address1),
    .ce1(A_V_1_13_ce1),
    .we1(A_V_1_13_we1),
    .d1(A_V_1_13_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_13_address0),
    .ce0(B_V_1_13_ce0),
    .q0(B_V_1_13_q0),
    .address1(B_V_1_13_address1),
    .ce1(B_V_1_13_ce1),
    .we1(B_V_1_13_we1),
    .d1(B_V_1_13_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_14_address0),
    .ce0(A_V_1_14_ce0),
    .q0(A_V_1_14_q0),
    .address1(A_V_1_14_address1),
    .ce1(A_V_1_14_ce1),
    .we1(A_V_1_14_we1),
    .d1(A_V_1_14_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_14_address0),
    .ce0(B_V_1_14_ce0),
    .q0(B_V_1_14_q0),
    .address1(B_V_1_14_address1),
    .ce1(B_V_1_14_ce1),
    .we1(B_V_1_14_we1),
    .d1(B_V_1_14_d1)
);

FC_1u_64u_10u_s_AdQK #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
A_V_1_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_1_15_address0),
    .ce0(A_V_1_15_ce0),
    .q0(A_V_1_15_q0),
    .address1(A_V_1_15_address1),
    .ce1(A_V_1_15_ce1),
    .we1(A_V_1_15_we1),
    .d1(A_V_1_15_d1)
);

FC_1u_64u_10u_s_BdRK #(
    .DataWidth( 16 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
B_V_1_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_15_address0),
    .ce0(B_V_1_15_ce0),
    .q0(B_V_1_15_q0),
    .address1(B_V_1_15_address1),
    .ce1(B_V_1_15_ce1),
    .we1(B_V_1_15_we1),
    .d1(B_V_1_15_d1)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U190(
    .din0(tmp_V_316_reg_2302),
    .din1(tmp_V_310_reg_2288),
    .dout(KER_size_0_fu_1515_p2)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U191(
    .din0(tmp_V_310_reg_2288),
    .din1(KER_size_0_reg_2328),
    .dout(KER_size_1_fu_1541_p2)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U192(
    .din0(tmp_V_312_reg_2296),
    .din1(KER_size_1_reg_2343),
    .dout(KER_bound_fu_1545_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U193(
    .din0(A_V_1_1_q0),
    .din1(B_V_1_1_load_reg_2549),
    .dout(mul_ln1352_73_fu_2169_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U194(
    .din0(A_V_1_3_q0),
    .din1(B_V_1_3_load_reg_2554),
    .dout(mul_ln1352_75_fu_2175_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U195(
    .din0(A_V_1_9_q0),
    .din1(B_V_1_9_load_reg_2559),
    .dout(mul_ln1352_81_fu_2181_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U196(
    .din0(A_V_1_11_q0),
    .din1(B_V_1_11_load_reg_2564),
    .dout(mul_ln1352_83_fu_2187_p2)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U197(
    .din0(A_V_1_0_q0),
    .din1(B_V_1_0_load_reg_2653),
    .din2(mul_ln1352_73_reg_2658),
    .dout(grp_fu_2193_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U198(
    .din0(A_V_1_2_q0),
    .din1(B_V_1_2_load_reg_2663),
    .din2(mul_ln1352_75_reg_2668),
    .dout(grp_fu_2200_p3)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U199(
    .din0(A_V_1_5_q0),
    .din1(B_V_1_5_load_reg_2673),
    .dout(mul_ln1352_77_fu_2207_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U200(
    .din0(A_V_1_7_q0),
    .din1(B_V_1_7_load_reg_2678),
    .dout(mul_ln1352_79_fu_2213_p2)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U201(
    .din0(A_V_1_8_q0),
    .din1(B_V_1_8_load_reg_2683),
    .din2(mul_ln1352_81_reg_2688),
    .dout(grp_fu_2219_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U202(
    .din0(A_V_1_10_q0),
    .din1(B_V_1_10_load_reg_2693),
    .din2(mul_ln1352_83_reg_2698),
    .dout(grp_fu_2226_p3)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U203(
    .din0(A_V_1_13_q0),
    .din1(B_V_1_13_load_reg_2703),
    .dout(mul_ln1352_85_fu_2233_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U204(
    .din0(A_V_1_15_q0),
    .din1(B_V_1_15_load_reg_2708),
    .dout(mul_ln1352_87_fu_2239_p2)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U205(
    .din0(A_V_1_4_load_reg_2713),
    .din1(B_V_1_4_load_reg_2718),
    .din2(mul_ln1352_77_reg_2723),
    .dout(grp_fu_2245_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U206(
    .din0(A_V_1_6_load_reg_2728),
    .din1(B_V_1_6_load_reg_2733),
    .din2(mul_ln1352_79_reg_2738),
    .dout(grp_fu_2253_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U207(
    .din0(A_V_1_12_load_reg_2743),
    .din1(B_V_1_12_load_reg_2748),
    .din2(mul_ln1352_85_reg_2753),
    .dout(grp_fu_2261_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U208(
    .din0(A_V_1_14_load_reg_2758),
    .din1(B_V_1_14_load_reg_2763),
    .din2(mul_ln1352_87_reg_2768),
    .dout(grp_fu_2269_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state16) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln102_fu_1590_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state16))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state16);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln102_fu_1590_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state19)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp2_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state28) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state28))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state28);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_fu_1549_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i3_0_reg_1348 <= i_fu_1554_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i3_0_reg_1348 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_reg_2820 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_0_reg_1448 <= select_ln78_7_reg_2829;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        i_0_reg_1448 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ib_0_reg_1403 <= select_ln127_8_reg_2426;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        ib_0_reg_1403 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ic_0_reg_1426 <= ic_reg_2467;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        ic_0_reg_1426 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_fu_1693_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten6_reg_1392 <= add_ln121_fu_1698_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten6_reg_1392 <= 34'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2010_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten_reg_1437 <= add_ln78_fu_2016_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten_reg_1437 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        iter_0_reg_1370 <= add_ln102_reg_2379;
    end else if (((icmp_ln96_fu_1560_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        iter_0_reg_1370 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_1590_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        j2_0_reg_1381 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_1601_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j2_0_reg_1381 <= j_4_fu_1607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2010_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_0_reg_1459 <= j_fu_2091_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        j_0_reg_1459 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_1590_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        num_imag_0_reg_1359 <= num_imag_reg_2365;
    end else if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_1497_p2 == 1'd0) & (icmp_ln95_fu_1510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        num_imag_0_reg_1359 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        p_0300_0_reg_1414 <= add_ln700_87_reg_2803;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        p_0300_0_reg_1414 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_1560_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        A_COL_ITER_reg_2370 <= A_COL_ITER_fu_1575_p2;
        A_ROW_3 <= B_ROW_3_load_reg_2319;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        A_V_1_12_load_reg_2743 <= A_V_1_12_q0;
        A_V_1_14_load_reg_2758 <= A_V_1_14_q0;
        A_V_1_4_load_reg_2713 <= A_V_1_4_q0;
        A_V_1_6_load_reg_2728 <= A_V_1_6_q0;
        B_V_1_12_load_reg_2748 <= B_V_1_12_q0;
        B_V_1_14_load_reg_2763 <= B_V_1_14_q0;
        B_V_1_4_load_reg_2718 <= B_V_1_4_q0;
        B_V_1_6_load_reg_2733 <= B_V_1_6_q0;
        add_ln700_73_reg_2778 <= grp_fu_2200_p3;
        add_ln700_79_reg_2783 <= grp_fu_2219_p3;
        add_ln700_80_reg_2788 <= grp_fu_2226_p3;
        add_ln700_reg_2773 <= grp_fu_2193_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_1497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        B_COL_3 <= tmp_V_316_reg_2302;
        OFMDim_current_3 <= tmp_V_318_reg_2310;
        mul_ln75_reg_2338 <= mul_ln75_fu_1532_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        B_ROW_3 <= mul_ln75_4_fu_1991_p2;
        mul_ln75_4_reg_2815 <= mul_ln75_4_fu_1991_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        B_ROW_3_load_reg_2319 <= B_ROW_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_1_0_load_reg_2653 <= B_V_1_0_q0;
        B_V_1_10_load_reg_2693 <= B_V_1_10_q0;
        B_V_1_13_load_reg_2703 <= B_V_1_13_q0;
        B_V_1_15_load_reg_2708 <= B_V_1_15_q0;
        B_V_1_2_load_reg_2663 <= B_V_1_2_q0;
        B_V_1_5_load_reg_2673 <= B_V_1_5_q0;
        B_V_1_7_load_reg_2678 <= B_V_1_7_q0;
        B_V_1_8_load_reg_2683 <= B_V_1_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_11_load_reg_2564 <= B_V_1_11_q0;
        B_V_1_1_load_reg_2549 <= B_V_1_1_q0;
        B_V_1_3_load_reg_2554 <= B_V_1_3_q0;
        B_V_1_9_load_reg_2559 <= B_V_1_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        KER_bound_reg_2348 <= KER_bound_fu_1545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln95_fu_1510_p2 == 1'd0) & (icmp_ln72_fu_1497_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        KER_size_0_reg_2328 <= KER_size_0_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        KER_size_1_reg_2343 <= KER_size_1_fu_1541_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln102_reg_2379 <= add_ln102_fu_1595_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407_pp2_iter3_reg == 1'd0))) begin
        add_ln700_78_reg_2793 <= add_ln700_78_fu_1896_p2;
        add_ln700_85_reg_2798 <= add_ln700_85_fu_1910_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407_pp2_iter4_reg == 1'd0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        add_ln700_87_reg_2803 <= add_ln700_87_fu_1927_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2010_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        and_ln82_reg_2836 <= and_ln82_fu_2077_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_fu_1693_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ic_reg_2467 <= ic_fu_1762_p2;
        select_ln127_8_reg_2426 <= select_ln127_8_fu_1724_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_1601_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln108_reg_2393 <= icmp_ln108_fu_1621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln121_reg_2407 <= icmp_ln121_fu_1693_p2;
        icmp_ln121_reg_2407_pp2_iter1_reg <= icmp_ln121_reg_2407;
        icmp_ln124_reg_2416_pp2_iter1_reg <= icmp_ln124_reg_2416;
        sext_ln215_179_reg_2431_pp2_iter1_reg <= sext_ln215_179_reg_2431;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln121_reg_2407_pp2_iter2_reg <= icmp_ln121_reg_2407_pp2_iter1_reg;
        icmp_ln121_reg_2407_pp2_iter3_reg <= icmp_ln121_reg_2407_pp2_iter2_reg;
        icmp_ln121_reg_2407_pp2_iter4_reg <= icmp_ln121_reg_2407_pp2_iter3_reg;
        icmp_ln121_reg_2407_pp2_iter5_reg <= icmp_ln121_reg_2407_pp2_iter4_reg;
        icmp_ln124_4_reg_2569_pp2_iter2_reg <= icmp_ln124_4_reg_2569;
        icmp_ln124_4_reg_2569_pp2_iter3_reg <= icmp_ln124_4_reg_2569_pp2_iter2_reg;
        icmp_ln124_4_reg_2569_pp2_iter4_reg <= icmp_ln124_4_reg_2569_pp2_iter3_reg;
        icmp_ln124_4_reg_2569_pp2_iter5_reg <= icmp_ln124_4_reg_2569_pp2_iter4_reg;
        icmp_ln124_reg_2416_pp2_iter2_reg <= icmp_ln124_reg_2416_pp2_iter1_reg;
        icmp_ln124_reg_2416_pp2_iter3_reg <= icmp_ln124_reg_2416_pp2_iter2_reg;
        icmp_ln124_reg_2416_pp2_iter4_reg <= icmp_ln124_reg_2416_pp2_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln124_4_reg_2569 <= icmp_ln124_4_fu_1775_p2;
        zext_ln215_reg_2473[2 : 0] <= zext_ln215_fu_1768_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_fu_1693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln124_reg_2416 <= icmp_ln124_fu_1710_p2;
        select_ln127_7_reg_2421 <= select_ln127_7_fu_1716_p3;
        sext_ln215_179_reg_2431 <= sext_ln215_179_fu_1754_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln149_reg_2353 <= icmp_ln149_fu_1549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln78_reg_2820 <= icmp_ln78_fu_2010_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407_pp2_iter1_reg == 1'd0))) begin
        mul_ln1352_73_reg_2658 <= mul_ln1352_73_fu_2169_p2;
        mul_ln1352_75_reg_2668 <= mul_ln1352_75_fu_2175_p2;
        mul_ln1352_81_reg_2688 <= mul_ln1352_81_fu_2181_p2;
        mul_ln1352_83_reg_2698 <= mul_ln1352_83_fu_2187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_2407_pp2_iter2_reg == 1'd0))) begin
        mul_ln1352_77_reg_2723 <= mul_ln1352_77_fu_2207_p2;
        mul_ln1352_79_reg_2738 <= mul_ln1352_79_fu_2213_p2;
        mul_ln1352_85_reg_2753 <= mul_ln1352_85_fu_2233_p2;
        mul_ln1352_87_reg_2768 <= mul_ln1352_87_fu_2239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        num_imag_reg_2365 <= num_imag_fu_1565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_1601_p2 == 1'd0) & (icmp_ln108_fu_1621_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_fu_1621_p2 == 1'd0) & (icmp_ln105_fu_1601_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        reg_1489 <= {{j2_0_reg_1381[6:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2010_p2 == 1'd0) & (1'd1 == and_ln82_fu_2077_p2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'd0 == and_ln82_fu_2077_p2) & (icmp_ln78_fu_2010_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        reg_1493 <= {{select_ln78_fu_2034_p3[6:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2010_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln78_7_reg_2829 <= select_ln78_7_fu_2047_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_1497_p2 == 1'd0) & (icmp_ln95_fu_1510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_64_reg_2333[33 : 2] <= tmp_64_fu_1519_p3[33 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln124_4_reg_2569_pp2_iter4_reg == 1'd1))) begin
        tmp_67_reg_2810 <= {{sub_ln1371_fu_1933_p2[31:15]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_308_reg_2283 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_310_reg_2288 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_312_reg_2296 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_316_reg_2302 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_V_318_reg_2310 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_V_reg_2277 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'd0 == and_ln82_fu_2077_p2) & (icmp_ln78_fu_2010_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        trunc_ln180_7_reg_2840 <= trunc_ln180_7_fu_2083_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_1601_p2 == 1'd0) & (icmp_ln108_fu_1621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln180_8_reg_2402 <= trunc_ln180_8_fu_1631_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_fu_1621_p2 == 1'd0) & (icmp_ln105_fu_1601_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln180_9_reg_2397 <= trunc_ln180_9_fu_1627_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2010_p2 == 1'd0) & (1'd1 == and_ln82_fu_2077_p2) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        trunc_ln180_reg_2845 <= trunc_ln180_fu_2087_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2050)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_0_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_0_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_0_address1 = 'bx;
        end
    end else begin
        A_V_1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_0_ce0 = 1'b1;
    end else begin
        A_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd0) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd0) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_0_ce1 = 1'b1;
    end else begin
        A_V_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2050)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_0_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_0_d1 = 16'd0;
        end else begin
            A_V_1_0_d1 = 'bx;
        end
    end else begin
        A_V_1_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd0) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd0) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_0_we1 = 1'b1;
    end else begin
        A_V_1_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2053)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_10_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_10_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_10_address1 = 'bx;
        end
    end else begin
        A_V_1_10_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_10_ce0 = 1'b1;
    end else begin
        A_V_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd10) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd10) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_10_ce1 = 1'b1;
    end else begin
        A_V_1_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2053)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_10_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_10_d1 = 16'd0;
        end else begin
            A_V_1_10_d1 = 'bx;
        end
    end else begin
        A_V_1_10_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd10) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd10) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_10_we1 = 1'b1;
    end else begin
        A_V_1_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2056)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_11_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_11_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_11_address1 = 'bx;
        end
    end else begin
        A_V_1_11_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_1_11_ce0 = 1'b1;
    end else begin
        A_V_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd11) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd11) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_11_ce1 = 1'b1;
    end else begin
        A_V_1_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2056)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_11_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_11_d1 = 16'd0;
        end else begin
            A_V_1_11_d1 = 'bx;
        end
    end else begin
        A_V_1_11_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd11) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd11) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_11_we1 = 1'b1;
    end else begin
        A_V_1_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2059)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_12_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_12_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_12_address1 = 'bx;
        end
    end else begin
        A_V_1_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_12_ce0 = 1'b1;
    end else begin
        A_V_1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd12) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd12) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_12_ce1 = 1'b1;
    end else begin
        A_V_1_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2059)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_12_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_12_d1 = 16'd0;
        end else begin
            A_V_1_12_d1 = 'bx;
        end
    end else begin
        A_V_1_12_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd12) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd12) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_12_we1 = 1'b1;
    end else begin
        A_V_1_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2062)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_13_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_13_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_13_address1 = 'bx;
        end
    end else begin
        A_V_1_13_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_13_ce0 = 1'b1;
    end else begin
        A_V_1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd13) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd13) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_13_ce1 = 1'b1;
    end else begin
        A_V_1_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2062)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_13_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_13_d1 = 16'd0;
        end else begin
            A_V_1_13_d1 = 'bx;
        end
    end else begin
        A_V_1_13_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd13) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd13) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_13_we1 = 1'b1;
    end else begin
        A_V_1_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2065)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_14_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_14_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_14_address1 = 'bx;
        end
    end else begin
        A_V_1_14_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_14_ce0 = 1'b1;
    end else begin
        A_V_1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd14) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd14) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_14_ce1 = 1'b1;
    end else begin
        A_V_1_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2065)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_14_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_14_d1 = 16'd0;
        end else begin
            A_V_1_14_d1 = 'bx;
        end
    end else begin
        A_V_1_14_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd14) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd14) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_14_we1 = 1'b1;
    end else begin
        A_V_1_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2082)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_15_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_15_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_15_address1 = 'bx;
        end
    end else begin
        A_V_1_15_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_15_ce0 = 1'b1;
    end else begin
        A_V_1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(reg_1489 == 5'd0) & ~(reg_1489 == 5'd1) & ~(reg_1489 == 5'd2) & ~(reg_1489 == 5'd3) & ~(reg_1489 == 5'd4) & ~(reg_1489 == 5'd5) & ~(reg_1489 == 5'd6) & ~(reg_1489 == 5'd7) & ~(reg_1489 == 5'd8) & ~(reg_1489 == 5'd9) & ~(reg_1489 == 5'd10) & ~(reg_1489 == 5'd11) & ~(reg_1489 == 5'd12) & ~(reg_1489 == 5'd13) & ~(reg_1489 == 5'd14) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(reg_1489 == 5'd0) & ~(reg_1489 == 5'd1) & ~(reg_1489 == 5'd2) & ~(reg_1489 == 5'd3) & ~(reg_1489 == 5'd4) & ~(reg_1489 == 5'd5) & ~(reg_1489 == 5'd6) & ~(reg_1489 == 5'd7) & ~(reg_1489 == 5'd8) & ~(reg_1489 == 5'd9) & ~(reg_1489 == 5'd10) & ~(reg_1489 == 5'd11) & ~(reg_1489 == 5'd12) & ~(reg_1489 == 5'd13) & ~(reg_1489 == 5'd14) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_15_ce1 = 1'b1;
    end else begin
        A_V_1_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2082)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_15_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_15_d1 = 16'd0;
        end else begin
            A_V_1_15_d1 = 'bx;
        end
    end else begin
        A_V_1_15_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(reg_1489 == 5'd0) & ~(reg_1489 == 5'd1) & ~(reg_1489 == 5'd2) & ~(reg_1489 == 5'd3) & ~(reg_1489 == 5'd4) & ~(reg_1489 == 5'd5) & ~(reg_1489 == 5'd6) & ~(reg_1489 == 5'd7) & ~(reg_1489 == 5'd8) & ~(reg_1489 == 5'd9) & ~(reg_1489 == 5'd10) & ~(reg_1489 == 5'd11) & ~(reg_1489 == 5'd12) & ~(reg_1489 == 5'd13) & ~(reg_1489 == 5'd14) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(reg_1489 == 5'd0) & ~(reg_1489 == 5'd1) & ~(reg_1489 == 5'd2) & ~(reg_1489 == 5'd3) & ~(reg_1489 == 5'd4) & ~(reg_1489 == 5'd5) & ~(reg_1489 == 5'd6) & ~(reg_1489 == 5'd7) & ~(reg_1489 == 5'd8) & ~(reg_1489 == 5'd9) & ~(reg_1489 == 5'd10) & ~(reg_1489 == 5'd11) & ~(reg_1489 == 5'd12) & ~(reg_1489 == 5'd13) & ~(reg_1489 == 5'd14) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_15_we1 = 1'b1;
    end else begin
        A_V_1_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2085)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_1_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_1_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_1_address1 = 'bx;
        end
    end else begin
        A_V_1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_1_1_ce0 = 1'b1;
    end else begin
        A_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd1) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd1) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_1_ce1 = 1'b1;
    end else begin
        A_V_1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2085)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_1_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_1_d1 = 16'd0;
        end else begin
            A_V_1_1_d1 = 'bx;
        end
    end else begin
        A_V_1_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd1) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd1) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_1_we1 = 1'b1;
    end else begin
        A_V_1_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2088)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_2_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_2_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_2_address1 = 'bx;
        end
    end else begin
        A_V_1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_2_ce0 = 1'b1;
    end else begin
        A_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd2) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd2) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_2_ce1 = 1'b1;
    end else begin
        A_V_1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2088)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_2_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_2_d1 = 16'd0;
        end else begin
            A_V_1_2_d1 = 'bx;
        end
    end else begin
        A_V_1_2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd2) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd2) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_2_we1 = 1'b1;
    end else begin
        A_V_1_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2091)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_3_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_3_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_3_address1 = 'bx;
        end
    end else begin
        A_V_1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_1_3_ce0 = 1'b1;
    end else begin
        A_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd3) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd3) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_3_ce1 = 1'b1;
    end else begin
        A_V_1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2091)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_3_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_3_d1 = 16'd0;
        end else begin
            A_V_1_3_d1 = 'bx;
        end
    end else begin
        A_V_1_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd3) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd3) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_3_we1 = 1'b1;
    end else begin
        A_V_1_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2094)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_4_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_4_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_4_address1 = 'bx;
        end
    end else begin
        A_V_1_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_4_ce0 = 1'b1;
    end else begin
        A_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd4) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd4) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_4_ce1 = 1'b1;
    end else begin
        A_V_1_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2094)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_4_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_4_d1 = 16'd0;
        end else begin
            A_V_1_4_d1 = 'bx;
        end
    end else begin
        A_V_1_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd4) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd4) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_4_we1 = 1'b1;
    end else begin
        A_V_1_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2097)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_5_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_5_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_5_address1 = 'bx;
        end
    end else begin
        A_V_1_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_5_ce0 = 1'b1;
    end else begin
        A_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd5) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd5) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_5_ce1 = 1'b1;
    end else begin
        A_V_1_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2097)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_5_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_5_d1 = 16'd0;
        end else begin
            A_V_1_5_d1 = 'bx;
        end
    end else begin
        A_V_1_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd5) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd5) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_5_we1 = 1'b1;
    end else begin
        A_V_1_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2100)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_6_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_6_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_6_address1 = 'bx;
        end
    end else begin
        A_V_1_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_6_ce0 = 1'b1;
    end else begin
        A_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd6) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd6) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_6_ce1 = 1'b1;
    end else begin
        A_V_1_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2100)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_6_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_6_d1 = 16'd0;
        end else begin
            A_V_1_6_d1 = 'bx;
        end
    end else begin
        A_V_1_6_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd6) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd6) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_6_we1 = 1'b1;
    end else begin
        A_V_1_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2103)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_7_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_7_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_7_address1 = 'bx;
        end
    end else begin
        A_V_1_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_7_ce0 = 1'b1;
    end else begin
        A_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd7) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd7) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_7_ce1 = 1'b1;
    end else begin
        A_V_1_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2103)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_7_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_7_d1 = 16'd0;
        end else begin
            A_V_1_7_d1 = 'bx;
        end
    end else begin
        A_V_1_7_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd7) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd7) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_7_we1 = 1'b1;
    end else begin
        A_V_1_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2106)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_8_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_8_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_8_address1 = 'bx;
        end
    end else begin
        A_V_1_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_1_8_ce0 = 1'b1;
    end else begin
        A_V_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd8) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd8) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_8_ce1 = 1'b1;
    end else begin
        A_V_1_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2106)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_8_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_8_d1 = 16'd0;
        end else begin
            A_V_1_8_d1 = 'bx;
        end
    end else begin
        A_V_1_8_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd8) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd8) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_8_we1 = 1'b1;
    end else begin
        A_V_1_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2109)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_9_address1 = zext_ln180_11_fu_1674_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_9_address1 = zext_ln180_12_fu_1635_p1;
        end else begin
            A_V_1_9_address1 = 'bx;
        end
    end else begin
        A_V_1_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_1_9_ce0 = 1'b1;
    end else begin
        A_V_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd9) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd9) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_9_ce1 = 1'b1;
    end else begin
        A_V_1_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2109)) begin
        if ((icmp_ln108_reg_2393 == 1'd1)) begin
            A_V_1_9_d1 = trunc_ln68_4_fu_1654_p1;
        end else if ((icmp_ln108_reg_2393 == 1'd0)) begin
            A_V_1_9_d1 = 16'd0;
        end else begin
            A_V_1_9_d1 = 'bx;
        end
    end else begin
        A_V_1_9_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd9) & (icmp_ln108_reg_2393 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_1489 == 5'd9) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_1_9_we1 = 1'b1;
    end else begin
        A_V_1_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2112)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_0_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_0_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_0_address1 = 'bx;
        end
    end else begin
        B_V_1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_0_ce0 = 1'b1;
    end else begin
        B_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd0) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd0) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_0_ce1 = 1'b1;
    end else begin
        B_V_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2112)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_0_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_0_d1 = 16'd0;
        end else begin
            B_V_1_0_d1 = 'bx;
        end
    end else begin
        B_V_1_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd0) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd0) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_0_we1 = 1'b1;
    end else begin
        B_V_1_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2115)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_10_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_10_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_10_address1 = 'bx;
        end
    end else begin
        B_V_1_10_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_10_ce0 = 1'b1;
    end else begin
        B_V_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd10) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd10) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_10_ce1 = 1'b1;
    end else begin
        B_V_1_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2115)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_10_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_10_d1 = 16'd0;
        end else begin
            B_V_1_10_d1 = 'bx;
        end
    end else begin
        B_V_1_10_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd10) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd10) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_10_we1 = 1'b1;
    end else begin
        B_V_1_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2118)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_11_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_11_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_11_address1 = 'bx;
        end
    end else begin
        B_V_1_11_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_11_ce0 = 1'b1;
    end else begin
        B_V_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd11) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd11) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_11_ce1 = 1'b1;
    end else begin
        B_V_1_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2118)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_11_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_11_d1 = 16'd0;
        end else begin
            B_V_1_11_d1 = 'bx;
        end
    end else begin
        B_V_1_11_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd11) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd11) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_11_we1 = 1'b1;
    end else begin
        B_V_1_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2121)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_12_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_12_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_12_address1 = 'bx;
        end
    end else begin
        B_V_1_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_1_12_ce0 = 1'b1;
    end else begin
        B_V_1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd12) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd12) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_12_ce1 = 1'b1;
    end else begin
        B_V_1_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2121)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_12_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_12_d1 = 16'd0;
        end else begin
            B_V_1_12_d1 = 'bx;
        end
    end else begin
        B_V_1_12_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd12) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd12) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_12_we1 = 1'b1;
    end else begin
        B_V_1_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2124)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_13_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_13_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_13_address1 = 'bx;
        end
    end else begin
        B_V_1_13_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_13_ce0 = 1'b1;
    end else begin
        B_V_1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd13) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd13) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_13_ce1 = 1'b1;
    end else begin
        B_V_1_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2124)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_13_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_13_d1 = 16'd0;
        end else begin
            B_V_1_13_d1 = 'bx;
        end
    end else begin
        B_V_1_13_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd13) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd13) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_13_we1 = 1'b1;
    end else begin
        B_V_1_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2127)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_14_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_14_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_14_address1 = 'bx;
        end
    end else begin
        B_V_1_14_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_1_14_ce0 = 1'b1;
    end else begin
        B_V_1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd14) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd14) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_14_ce1 = 1'b1;
    end else begin
        B_V_1_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2127)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_14_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_14_d1 = 16'd0;
        end else begin
            B_V_1_14_d1 = 'bx;
        end
    end else begin
        B_V_1_14_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd14) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd14) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_14_we1 = 1'b1;
    end else begin
        B_V_1_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2144)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_15_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_15_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_15_address1 = 'bx;
        end
    end else begin
        B_V_1_15_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_15_ce0 = 1'b1;
    end else begin
        B_V_1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(reg_1493 == 5'd14) & ~(reg_1493 == 5'd12) & ~(reg_1493 == 5'd6) & ~(reg_1493 == 5'd4) & ~(reg_1493 == 5'd13) & ~(reg_1493 == 5'd10) & ~(reg_1493 == 5'd8) & ~(reg_1493 == 5'd7) & ~(reg_1493 == 5'd5) & ~(reg_1493 == 5'd2) & ~(reg_1493 == 5'd0) & ~(reg_1493 == 5'd11) & ~(reg_1493 == 5'd9) & ~(reg_1493 == 5'd3) & ~(reg_1493 == 5'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~(reg_1493 == 5'd14) & ~(reg_1493 == 5'd12) & ~(reg_1493 == 5'd6) & ~(reg_1493 == 5'd4) & ~(reg_1493 == 5'd13) & ~(reg_1493 == 5'd10) & ~(reg_1493 == 5'd8) & ~(reg_1493 == 5'd7) & ~(reg_1493 == 5'd5) & ~(reg_1493 == 5'd2) & ~(reg_1493 == 5'd0) & ~(reg_1493 == 5'd11) & ~(reg_1493 == 5'd9) & ~(reg_1493 == 5'd3) & ~(reg_1493 == 5'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_15_ce1 = 1'b1;
    end else begin
        B_V_1_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2144)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_15_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_15_d1 = 16'd0;
        end else begin
            B_V_1_15_d1 = 'bx;
        end
    end else begin
        B_V_1_15_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(reg_1493 == 5'd14) & ~(reg_1493 == 5'd12) & ~(reg_1493 == 5'd6) & ~(reg_1493 == 5'd4) & ~(reg_1493 == 5'd13) & ~(reg_1493 == 5'd10) & ~(reg_1493 == 5'd8) & ~(reg_1493 == 5'd7) & ~(reg_1493 == 5'd5) & ~(reg_1493 == 5'd2) & ~(reg_1493 == 5'd0) & ~(reg_1493 == 5'd11) & ~(reg_1493 == 5'd9) & ~(reg_1493 == 5'd3) & ~(reg_1493 == 5'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~(reg_1493 == 5'd14) & ~(reg_1493 == 5'd12) & ~(reg_1493 == 5'd6) & ~(reg_1493 == 5'd4) & ~(reg_1493 == 5'd13) & ~(reg_1493 == 5'd10) & ~(reg_1493 == 5'd8) & ~(reg_1493 == 5'd7) & ~(reg_1493 == 5'd5) & ~(reg_1493 == 5'd2) & ~(reg_1493 == 5'd0) & ~(reg_1493 == 5'd11) & ~(reg_1493 == 5'd9) & ~(reg_1493 == 5'd3) & ~(reg_1493 == 5'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_15_we1 = 1'b1;
    end else begin
        B_V_1_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2147)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_1_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_1_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_1_address1 = 'bx;
        end
    end else begin
        B_V_1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_1_ce0 = 1'b1;
    end else begin
        B_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd1) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd1) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_1_ce1 = 1'b1;
    end else begin
        B_V_1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2147)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_1_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_1_d1 = 16'd0;
        end else begin
            B_V_1_1_d1 = 'bx;
        end
    end else begin
        B_V_1_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd1) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd1) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_1_we1 = 1'b1;
    end else begin
        B_V_1_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2150)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_2_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_2_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_2_address1 = 'bx;
        end
    end else begin
        B_V_1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_2_ce0 = 1'b1;
    end else begin
        B_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd2) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd2) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_2_ce1 = 1'b1;
    end else begin
        B_V_1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2150)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_2_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_2_d1 = 16'd0;
        end else begin
            B_V_1_2_d1 = 'bx;
        end
    end else begin
        B_V_1_2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd2) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd2) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_2_we1 = 1'b1;
    end else begin
        B_V_1_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2153)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_3_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_3_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_3_address1 = 'bx;
        end
    end else begin
        B_V_1_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_3_ce0 = 1'b1;
    end else begin
        B_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd3) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd3) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_3_ce1 = 1'b1;
    end else begin
        B_V_1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2153)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_3_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_3_d1 = 16'd0;
        end else begin
            B_V_1_3_d1 = 'bx;
        end
    end else begin
        B_V_1_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd3) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd3) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_3_we1 = 1'b1;
    end else begin
        B_V_1_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2156)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_4_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_4_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_4_address1 = 'bx;
        end
    end else begin
        B_V_1_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_1_4_ce0 = 1'b1;
    end else begin
        B_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd4) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd4) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_4_ce1 = 1'b1;
    end else begin
        B_V_1_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2156)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_4_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_4_d1 = 16'd0;
        end else begin
            B_V_1_4_d1 = 'bx;
        end
    end else begin
        B_V_1_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd4) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd4) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_4_we1 = 1'b1;
    end else begin
        B_V_1_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2159)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_5_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_5_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_5_address1 = 'bx;
        end
    end else begin
        B_V_1_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_5_ce0 = 1'b1;
    end else begin
        B_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd5) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd5) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_5_ce1 = 1'b1;
    end else begin
        B_V_1_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2159)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_5_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_5_d1 = 16'd0;
        end else begin
            B_V_1_5_d1 = 'bx;
        end
    end else begin
        B_V_1_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd5) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd5) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_5_we1 = 1'b1;
    end else begin
        B_V_1_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2162)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_6_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_6_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_6_address1 = 'bx;
        end
    end else begin
        B_V_1_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_1_6_ce0 = 1'b1;
    end else begin
        B_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd6) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd6) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_6_ce1 = 1'b1;
    end else begin
        B_V_1_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2162)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_6_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_6_d1 = 16'd0;
        end else begin
            B_V_1_6_d1 = 'bx;
        end
    end else begin
        B_V_1_6_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd6) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd6) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_6_we1 = 1'b1;
    end else begin
        B_V_1_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2165)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_7_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_7_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_7_address1 = 'bx;
        end
    end else begin
        B_V_1_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_7_ce0 = 1'b1;
    end else begin
        B_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd7) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd7) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_7_ce1 = 1'b1;
    end else begin
        B_V_1_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2165)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_7_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_7_d1 = 16'd0;
        end else begin
            B_V_1_7_d1 = 'bx;
        end
    end else begin
        B_V_1_7_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd7) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd7) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_7_we1 = 1'b1;
    end else begin
        B_V_1_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2168)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_8_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_8_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_8_address1 = 'bx;
        end
    end else begin
        B_V_1_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_8_ce0 = 1'b1;
    end else begin
        B_V_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd8) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd8) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_8_ce1 = 1'b1;
    end else begin
        B_V_1_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2168)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_8_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_8_d1 = 16'd0;
        end else begin
            B_V_1_8_d1 = 'bx;
        end
    end else begin
        B_V_1_8_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd8) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd8) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_8_we1 = 1'b1;
    end else begin
        B_V_1_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2171)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_9_address1 = zext_ln180_fu_2149_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_9_address1 = zext_ln180_13_fu_2103_p1;
        end else begin
            B_V_1_9_address1 = 'bx;
        end
    end else begin
        B_V_1_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_1_9_ce0 = 1'b1;
    end else begin
        B_V_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd9) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd9) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_9_ce1 = 1'b1;
    end else begin
        B_V_1_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2171)) begin
        if ((1'd1 == and_ln82_reg_2836)) begin
            B_V_1_9_d1 = trunc_ln68_fu_2123_p1;
        end else if ((1'd0 == and_ln82_reg_2836)) begin
            B_V_1_9_d1 = 16'd0;
        end else begin
            B_V_1_9_d1 = 'bx;
        end
    end else begin
        B_V_1_9_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd9) & (1'd0 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_1493 == 5'd9) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_1_9_we1 = 1'b1;
    end else begin
        B_V_1_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln149_fu_1549_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln105_fu_1601_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln121_fu_1693_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln78_fu_2010_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2820 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_i_0_phi_fu_1452_p4 = select_ln78_7_reg_2829;
    end else begin
        ap_phi_mux_i_0_phi_fu_1452_p4 = i_0_reg_1448;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln121_reg_2407 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_ib_0_phi_fu_1407_p4 = select_ln127_8_reg_2426;
    end else begin
        ap_phi_mux_ib_0_phi_fu_1407_p4 = ib_0_reg_1403;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln121_reg_2407 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_ic_0_phi_fu_1430_p4 = ic_reg_2467;
    end else begin
        ap_phi_mux_ic_0_phi_fu_1430_p4 = ic_0_reg_1426;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln121_reg_2407_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        ap_phi_mux_p_0300_0_phi_fu_1418_p4 = add_ln700_87_reg_2803;
    end else begin
        ap_phi_mux_p_0300_0_phi_fu_1418_p4 = p_0300_0_reg_1414;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln149_reg_2353 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'd1 == and_ln82_reg_2836) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_stream_a_V_V_blk_n = in_stream_a_V_V_empty_n;
    end else begin
        in_stream_a_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_reg_2353 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_reg_2393 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        in_stream_a_V_V_read = 1'b1;
    end else begin
        in_stream_a_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp2_stage0) & (icmp_ln124_4_reg_2569_pp2_iter5_reg == 1'd1) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((icmp_ln149_reg_2353 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln82_reg_2836) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_stream_V_V_blk_n = out_stream_V_V_full_n;
    end else begin
        out_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln124_4_reg_2569_pp2_iter5_reg == 1'd1) & (ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0_01001))) begin
        out_stream_V_V_din = tmp_V_327_fu_1986_p1;
    end else if ((((icmp_ln149_reg_2353 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_stream_V_V_din = in_stream_a_V_V_dout;
    end else begin
        out_stream_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln124_4_reg_2569_pp2_iter5_reg == 1'd1) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_reg_2353 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'd1 == and_ln82_reg_2836) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_stream_V_V_write = 1'b1;
    end else begin
        out_stream_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_1497_p2 == 1'd0) & (icmp_ln95_fu_1510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln95_fu_1510_p2 == 1'd0) & (icmp_ln72_fu_1497_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_1497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln149_fu_1549_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln149_fu_1549_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln96_fu_1560_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln102_fu_1590_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln105_fu_1601_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln105_fu_1601_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln121_fu_1693_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln121_fu_1693_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln78_fu_2010_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln78_fu_2010_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_COL_ITER_fu_1575_p0 = OFMDim_current_3;

assign A_COL_ITER_fu_1575_p1 = OFMDim_current_3;

assign A_COL_ITER_fu_1575_p2 = ($signed(A_COL_ITER_fu_1575_p0) * $signed(A_COL_ITER_fu_1575_p1));

assign A_V_1_0_address0 = zext_ln215_reg_2473;

assign A_V_1_10_address0 = zext_ln215_reg_2473;

assign A_V_1_11_address0 = zext_ln215_fu_1768_p1;

assign A_V_1_12_address0 = zext_ln215_reg_2473;

assign A_V_1_13_address0 = zext_ln215_reg_2473;

assign A_V_1_14_address0 = zext_ln215_reg_2473;

assign A_V_1_15_address0 = zext_ln215_reg_2473;

assign A_V_1_1_address0 = zext_ln215_fu_1768_p1;

assign A_V_1_2_address0 = zext_ln215_reg_2473;

assign A_V_1_3_address0 = zext_ln215_fu_1768_p1;

assign A_V_1_4_address0 = zext_ln215_reg_2473;

assign A_V_1_5_address0 = zext_ln215_reg_2473;

assign A_V_1_6_address0 = zext_ln215_reg_2473;

assign A_V_1_7_address0 = zext_ln215_reg_2473;

assign A_V_1_8_address0 = zext_ln215_reg_2473;

assign A_V_1_9_address0 = zext_ln215_fu_1768_p1;

assign B_V_1_0_address0 = sext_ln215_179_reg_2431;

assign B_V_1_10_address0 = sext_ln215_179_reg_2431;

assign B_V_1_11_address0 = sext_ln215_179_fu_1754_p1;

assign B_V_1_12_address0 = sext_ln215_179_reg_2431_pp2_iter1_reg;

assign B_V_1_13_address0 = sext_ln215_179_reg_2431;

assign B_V_1_14_address0 = sext_ln215_179_reg_2431_pp2_iter1_reg;

assign B_V_1_15_address0 = sext_ln215_179_reg_2431;

assign B_V_1_1_address0 = sext_ln215_179_fu_1754_p1;

assign B_V_1_2_address0 = sext_ln215_179_reg_2431;

assign B_V_1_3_address0 = sext_ln215_179_fu_1754_p1;

assign B_V_1_4_address0 = sext_ln215_179_reg_2431_pp2_iter1_reg;

assign B_V_1_5_address0 = sext_ln215_179_reg_2431;

assign B_V_1_6_address0 = sext_ln215_179_reg_2431_pp2_iter1_reg;

assign B_V_1_7_address0 = sext_ln215_179_reg_2431;

assign B_V_1_8_address0 = sext_ln215_179_reg_2431;

assign B_V_1_9_address0 = sext_ln215_179_fu_1754_p1;

assign add_ln102_fu_1595_p2 = (iter_0_reg_1370 + 31'd1);

assign add_ln121_fu_1698_p2 = (indvar_flatten6_reg_1392 + 34'd1);

assign add_ln215_fu_1748_p2 = (sext_ln215_179_cast_fu_1736_p3 + zext_ln215_4_fu_1744_p1);

assign add_ln700_74_fu_1888_p2 = ($signed(add_ln700_reg_2773) + $signed(add_ln700_73_reg_2778));

assign add_ln700_77_fu_1892_p2 = ($signed(grp_fu_2245_p3) + $signed(grp_fu_2253_p3));

assign add_ln700_78_fu_1896_p2 = (add_ln700_74_fu_1888_p2 + add_ln700_77_fu_1892_p2);

assign add_ln700_81_fu_1902_p2 = ($signed(add_ln700_79_reg_2783) + $signed(add_ln700_80_reg_2788));

assign add_ln700_84_fu_1906_p2 = ($signed(grp_fu_2261_p3) + $signed(grp_fu_2269_p3));

assign add_ln700_85_fu_1910_p2 = (add_ln700_81_fu_1902_p2 + add_ln700_84_fu_1906_p2);

assign add_ln700_86_fu_1923_p2 = (add_ln700_78_reg_2793 + add_ln700_85_reg_2798);

assign add_ln700_87_fu_1927_p2 = (add_ln700_86_fu_1923_p2 + select_ln127_fu_1916_p3);

assign add_ln78_fu_2016_p2 = (indvar_flatten_reg_1437 + 10'd1);

assign and_ln82_fu_2077_p2 = (select_ln78_8_fu_2060_p3 & icmp_ln82_fu_2072_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln149_reg_2353 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_2353 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln149_reg_2353 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_2353 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln149_reg_2353 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_2353 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln108_reg_2393 == 1'd1) & (in_stream_a_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln108_reg_2393 == 1'd1) & (in_stream_a_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((icmp_ln124_4_reg_2569_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((icmp_ln124_4_reg_2569_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((icmp_ln124_4_reg_2569_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'd1 == and_ln82_reg_2836) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_2836) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'd1 == and_ln82_reg_2836) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_2836) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'd1 == and_ln82_reg_2836) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_2836) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter1 = (((icmp_ln149_reg_2353 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_2353 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0)));
end

assign ap_block_state16_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp1_stage0_iter1 = ((icmp_ln108_reg_2393 == 1'd1) & (in_stream_a_V_V_empty_n == 1'b0));
end

assign ap_block_state19_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

assign ap_block_state20_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_pp2_stage0_iter6 = ((icmp_ln124_4_reg_2569_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0));
end

assign ap_block_state28_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp3_stage0_iter1 = (((1'd1 == and_ln82_reg_2836) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_2836) & (in_stream_a_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_2050 = ((reg_1489 == 5'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2053 = ((reg_1489 == 5'd10) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2056 = ((reg_1489 == 5'd11) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2059 = ((reg_1489 == 5'd12) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2062 = ((reg_1489 == 5'd13) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2065 = ((reg_1489 == 5'd14) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2082 = (~(reg_1489 == 5'd0) & ~(reg_1489 == 5'd1) & ~(reg_1489 == 5'd2) & ~(reg_1489 == 5'd3) & ~(reg_1489 == 5'd4) & ~(reg_1489 == 5'd5) & ~(reg_1489 == 5'd6) & ~(reg_1489 == 5'd7) & ~(reg_1489 == 5'd8) & ~(reg_1489 == 5'd9) & ~(reg_1489 == 5'd10) & ~(reg_1489 == 5'd11) & ~(reg_1489 == 5'd12) & ~(reg_1489 == 5'd13) & ~(reg_1489 == 5'd14) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2085 = ((reg_1489 == 5'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2088 = ((reg_1489 == 5'd2) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2091 = ((reg_1489 == 5'd3) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2094 = ((reg_1489 == 5'd4) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2097 = ((reg_1489 == 5'd5) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2100 = ((reg_1489 == 5'd6) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2103 = ((reg_1489 == 5'd7) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2106 = ((reg_1489 == 5'd8) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2109 = ((reg_1489 == 5'd9) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2112 = ((reg_1493 == 5'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2115 = ((reg_1493 == 5'd10) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2118 = ((reg_1493 == 5'd11) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2121 = ((reg_1493 == 5'd12) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2124 = ((reg_1493 == 5'd13) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2127 = ((reg_1493 == 5'd14) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2144 = (~(reg_1493 == 5'd14) & ~(reg_1493 == 5'd12) & ~(reg_1493 == 5'd6) & ~(reg_1493 == 5'd4) & ~(reg_1493 == 5'd13) & ~(reg_1493 == 5'd10) & ~(reg_1493 == 5'd8) & ~(reg_1493 == 5'd7) & ~(reg_1493 == 5'd5) & ~(reg_1493 == 5'd2) & ~(reg_1493 == 5'd0) & ~(reg_1493 == 5'd11) & ~(reg_1493 == 5'd9) & ~(reg_1493 == 5'd3) & ~(reg_1493 == 5'd1) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2147 = ((reg_1493 == 5'd1) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2150 = ((reg_1493 == 5'd2) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2153 = ((reg_1493 == 5'd3) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2156 = ((reg_1493 == 5'd4) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2159 = ((reg_1493 == 5'd5) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2162 = ((reg_1493 == 5'd6) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2165 = ((reg_1493 == 5'd7) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2168 = ((reg_1493 == 5'd8) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2171 = ((reg_1493 == 5'd9) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign i_9_fu_2022_p2 = (ap_phi_mux_i_0_phi_fu_1452_p4 + 4'd1);

assign i_fu_1554_p2 = (i3_0_reg_1348 + 32'd1);

assign ib_fu_1704_p2 = (32'd1 + ap_phi_mux_ib_0_phi_fu_1407_p4);

assign ic_fu_1762_p2 = (3'd1 + select_ln127_7_fu_1716_p3);

assign icmp_ln102_fu_1590_p2 = (($signed(zext_ln102_fu_1586_p1) < $signed(A_COL_ITER_reg_2370)) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_1601_p2 = ((j2_0_reg_1381 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_1621_p2 = ((zext_ln105_fu_1613_p1 < A_ROW_3) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_1693_p2 = ((indvar_flatten6_reg_1392 == tmp_64_reg_2333) ? 1'b1 : 1'b0);

assign icmp_ln124_4_fu_1775_p2 = ((ic_reg_2467 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_1710_p2 = ((ap_phi_mux_ic_0_phi_fu_1430_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_1549_p2 = ((i3_0_reg_1348 == KER_bound_reg_2348) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_1497_p2 = ((tmp_V_reg_2277 == 32'd5) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_2010_p2 = ((indvar_flatten_reg_1437 == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_2028_p2 = ((j_0_reg_1459 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln82_4_fu_2005_p2 = ((zext_ln78_fu_2001_p1 < tmp_V_316_reg_2302) ? 1'b1 : 1'b0);

assign icmp_ln82_5_fu_2055_p2 = ((zext_ln78_4_fu_2043_p1 < tmp_V_316_reg_2302) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_2072_p2 = ((zext_ln79_fu_2068_p1 < mul_ln75_4_reg_2815) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_1510_p2 = ((tmp_V_reg_2277 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_1560_p2 = ((num_imag_0_reg_1359 == tmp_V_308_reg_2283) ? 1'b1 : 1'b0);

assign j_4_fu_1607_p2 = (j2_0_reg_1381 + 7'd1);

assign j_fu_2091_p2 = (select_ln78_fu_2034_p3 + 7'd1);

assign mul_ln75_4_fu_1991_p2 = ($signed(mul_ln75_reg_2338) * $signed(tmp_V_310_reg_2288));

assign mul_ln75_fu_1532_p2 = ($signed(tmp_V_310_reg_2288) * $signed(tmp_V_312_reg_2296));

assign num_imag_fu_1565_p2 = (num_imag_0_reg_1359 + 32'd1);

assign output_data_fu_1978_p3 = ((tmp_19_fu_1949_p3[0:0] === 1'b1) ? sub_ln1371_4_fu_1959_p2 : zext_ln1371_4_fu_1974_p1);

assign select_ln127_7_fu_1716_p3 = ((icmp_ln124_fu_1710_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_ic_0_phi_fu_1430_p4);

assign select_ln127_8_fu_1724_p3 = ((icmp_ln124_fu_1710_p2[0:0] === 1'b1) ? ib_fu_1704_p2 : ap_phi_mux_ib_0_phi_fu_1407_p4);

assign select_ln127_fu_1916_p3 = ((icmp_ln124_reg_2416_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_p_0300_0_phi_fu_1418_p4);

assign select_ln78_7_fu_2047_p3 = ((icmp_ln79_fu_2028_p2[0:0] === 1'b1) ? i_9_fu_2022_p2 : ap_phi_mux_i_0_phi_fu_1452_p4);

assign select_ln78_8_fu_2060_p3 = ((icmp_ln79_fu_2028_p2[0:0] === 1'b1) ? icmp_ln82_5_fu_2055_p2 : icmp_ln82_4_fu_2005_p2);

assign select_ln78_fu_2034_p3 = ((icmp_ln79_fu_2028_p2[0:0] === 1'b1) ? 7'd0 : j_0_reg_1459);

assign sext_ln215_179_cast_fu_1736_p3 = {{trunc_ln124_fu_1732_p1}, {2'd0}};

assign sext_ln215_179_fu_1754_p1 = $signed(add_ln215_fu_1748_p2);

assign start_out = real_start;

assign sub_ln1371_4_fu_1959_p2 = (18'd0 - zext_ln1371_fu_1956_p1);

assign sub_ln1371_fu_1933_p2 = (32'd0 - add_ln700_87_fu_1927_p2);

assign tmp_19_fu_1949_p3 = add_ln700_87_reg_2803[32'd31];

assign tmp_64_fu_1519_p3 = {{B_COL_3}, {2'd0}};

assign tmp_65_fu_2143_p3 = {{select_ln78_7_reg_2829}, {trunc_ln180_reg_2845}};

assign tmp_66_fu_2097_p3 = {{select_ln78_7_reg_2829}, {trunc_ln180_7_reg_2840}};

assign tmp_68_fu_1965_p4 = {{add_ln700_87_reg_2803[31:15]}};

assign tmp_V_327_fu_1986_p1 = $signed(output_data_fu_1978_p3);

assign trunc_ln124_fu_1732_p1 = select_ln127_8_fu_1724_p3[4:0];

assign trunc_ln180_7_fu_2083_p1 = select_ln78_fu_2034_p3[1:0];

assign trunc_ln180_8_fu_1631_p1 = j2_0_reg_1381[1:0];

assign trunc_ln180_9_fu_1627_p1 = j2_0_reg_1381[1:0];

assign trunc_ln180_fu_2087_p1 = select_ln78_fu_2034_p3[1:0];

assign trunc_ln68_4_fu_1654_p1 = in_stream_a_V_V_dout[15:0];

assign trunc_ln68_fu_2123_p1 = in_stream_a_V_V_dout[15:0];

assign zext_ln102_fu_1586_p1 = iter_0_reg_1370;

assign zext_ln105_fu_1613_p1 = j2_0_reg_1381;

assign zext_ln1371_4_fu_1974_p1 = tmp_68_fu_1965_p4;

assign zext_ln1371_fu_1956_p1 = tmp_67_reg_2810;

assign zext_ln180_11_fu_1674_p1 = trunc_ln180_8_reg_2402;

assign zext_ln180_12_fu_1635_p1 = trunc_ln180_9_reg_2397;

assign zext_ln180_13_fu_2103_p1 = tmp_66_fu_2097_p3;

assign zext_ln180_fu_2149_p1 = tmp_65_fu_2143_p3;

assign zext_ln215_4_fu_1744_p1 = select_ln127_7_fu_1716_p3;

assign zext_ln215_fu_1768_p1 = select_ln127_7_reg_2421;

assign zext_ln78_4_fu_2043_p1 = i_9_fu_2022_p2;

assign zext_ln78_fu_2001_p1 = ap_phi_mux_i_0_phi_fu_1452_p4;

assign zext_ln79_fu_2068_p1 = select_ln78_fu_2034_p3;

always @ (posedge ap_clk) begin
    tmp_64_reg_2333[1:0] <= 2'b00;
    zext_ln215_reg_2473[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //FC_1u_64u_10u_s
