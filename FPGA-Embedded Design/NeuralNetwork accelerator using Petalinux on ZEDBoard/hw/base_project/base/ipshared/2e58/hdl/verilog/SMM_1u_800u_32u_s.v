// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SMM_1u_800u_32u_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_stream_a_V_V_dout,
        in_stream_a_V_V_empty_n,
        in_stream_a_V_V_read,
        out_stream_V_V_din,
        out_stream_V_V_full_n,
        out_stream_V_V_write
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_pp0_stage0 = 21'd1024;
parameter    ap_ST_fsm_state13 = 21'd2048;
parameter    ap_ST_fsm_state14 = 21'd4096;
parameter    ap_ST_fsm_state15 = 21'd8192;
parameter    ap_ST_fsm_pp1_stage0 = 21'd16384;
parameter    ap_ST_fsm_state18 = 21'd32768;
parameter    ap_ST_fsm_pp2_stage0 = 21'd65536;
parameter    ap_ST_fsm_state26 = 21'd131072;
parameter    ap_ST_fsm_state27 = 21'd262144;
parameter    ap_ST_fsm_pp3_stage0 = 21'd524288;
parameter    ap_ST_fsm_state30 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] in_stream_a_V_V_dout;
input   in_stream_a_V_V_empty_n;
output   in_stream_a_V_V_read;
output  [31:0] out_stream_V_V_din;
input   out_stream_V_V_full_n;
output   out_stream_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_stream_a_V_V_read;
reg[31:0] out_stream_V_V_din;
reg out_stream_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] B_COL_1;
reg   [31:0] B_ROW_1;
reg   [31:0] OFMDim_current_1;
reg   [31:0] A_ROW_1;
wire   [4:0] A_V_3_0_address0;
reg    A_V_3_0_ce0;
wire  signed [15:0] A_V_3_0_q0;
reg   [4:0] A_V_3_0_address1;
reg    A_V_3_0_ce1;
reg    A_V_3_0_we1;
reg   [15:0] A_V_3_0_d1;
wire   [9:0] B_V_3_0_address0;
reg    B_V_3_0_ce0;
wire   [15:0] B_V_3_0_q0;
reg   [9:0] B_V_3_0_address1;
reg    B_V_3_0_ce1;
reg    B_V_3_0_we1;
reg   [15:0] B_V_3_0_d1;
wire   [4:0] A_V_3_1_address0;
reg    A_V_3_1_ce0;
wire   [15:0] A_V_3_1_q0;
reg   [4:0] A_V_3_1_address1;
reg    A_V_3_1_ce1;
reg    A_V_3_1_we1;
reg   [15:0] A_V_3_1_d1;
wire   [9:0] B_V_3_1_address0;
reg    B_V_3_1_ce0;
wire   [15:0] B_V_3_1_q0;
reg   [9:0] B_V_3_1_address1;
reg    B_V_3_1_ce1;
reg    B_V_3_1_we1;
reg   [15:0] B_V_3_1_d1;
wire   [4:0] A_V_3_2_address0;
reg    A_V_3_2_ce0;
wire  signed [15:0] A_V_3_2_q0;
reg   [4:0] A_V_3_2_address1;
reg    A_V_3_2_ce1;
reg    A_V_3_2_we1;
reg   [15:0] A_V_3_2_d1;
wire   [9:0] B_V_3_2_address0;
reg    B_V_3_2_ce0;
wire   [15:0] B_V_3_2_q0;
reg   [9:0] B_V_3_2_address1;
reg    B_V_3_2_ce1;
reg    B_V_3_2_we1;
reg   [15:0] B_V_3_2_d1;
wire   [4:0] A_V_3_3_address0;
reg    A_V_3_3_ce0;
wire  signed [15:0] A_V_3_3_q0;
reg   [4:0] A_V_3_3_address1;
reg    A_V_3_3_ce1;
reg    A_V_3_3_we1;
reg   [15:0] A_V_3_3_d1;
wire   [9:0] B_V_3_3_address0;
reg    B_V_3_3_ce0;
wire   [15:0] B_V_3_3_q0;
reg   [9:0] B_V_3_3_address1;
reg    B_V_3_3_ce1;
reg    B_V_3_3_we1;
reg   [15:0] B_V_3_3_d1;
wire   [4:0] A_V_3_4_address0;
reg    A_V_3_4_ce0;
wire   [15:0] A_V_3_4_q0;
reg   [4:0] A_V_3_4_address1;
reg    A_V_3_4_ce1;
reg    A_V_3_4_we1;
reg   [15:0] A_V_3_4_d1;
wire   [9:0] B_V_3_4_address0;
reg    B_V_3_4_ce0;
wire   [15:0] B_V_3_4_q0;
reg   [9:0] B_V_3_4_address1;
reg    B_V_3_4_ce1;
reg    B_V_3_4_we1;
reg   [15:0] B_V_3_4_d1;
wire   [4:0] A_V_3_5_address0;
reg    A_V_3_5_ce0;
wire  signed [15:0] A_V_3_5_q0;
reg   [4:0] A_V_3_5_address1;
reg    A_V_3_5_ce1;
reg    A_V_3_5_we1;
reg   [15:0] A_V_3_5_d1;
wire   [9:0] B_V_3_5_address0;
reg    B_V_3_5_ce0;
wire   [15:0] B_V_3_5_q0;
reg   [9:0] B_V_3_5_address1;
reg    B_V_3_5_ce1;
reg    B_V_3_5_we1;
reg   [15:0] B_V_3_5_d1;
wire   [4:0] A_V_3_6_address0;
reg    A_V_3_6_ce0;
wire   [15:0] A_V_3_6_q0;
reg   [4:0] A_V_3_6_address1;
reg    A_V_3_6_ce1;
reg    A_V_3_6_we1;
reg   [15:0] A_V_3_6_d1;
wire   [9:0] B_V_3_6_address0;
reg    B_V_3_6_ce0;
wire   [15:0] B_V_3_6_q0;
reg   [9:0] B_V_3_6_address1;
reg    B_V_3_6_ce1;
reg    B_V_3_6_we1;
reg   [15:0] B_V_3_6_d1;
wire   [4:0] A_V_3_7_address0;
reg    A_V_3_7_ce0;
wire  signed [15:0] A_V_3_7_q0;
reg   [4:0] A_V_3_7_address1;
reg    A_V_3_7_ce1;
reg    A_V_3_7_we1;
reg   [15:0] A_V_3_7_d1;
wire   [9:0] B_V_3_7_address0;
reg    B_V_3_7_ce0;
wire   [15:0] B_V_3_7_q0;
reg   [9:0] B_V_3_7_address1;
reg    B_V_3_7_ce1;
reg    B_V_3_7_we1;
reg   [15:0] B_V_3_7_d1;
wire   [4:0] A_V_3_8_address0;
reg    A_V_3_8_ce0;
wire  signed [15:0] A_V_3_8_q0;
reg   [4:0] A_V_3_8_address1;
reg    A_V_3_8_ce1;
reg    A_V_3_8_we1;
reg   [15:0] A_V_3_8_d1;
wire   [9:0] B_V_3_8_address0;
reg    B_V_3_8_ce0;
wire   [15:0] B_V_3_8_q0;
reg   [9:0] B_V_3_8_address1;
reg    B_V_3_8_ce1;
reg    B_V_3_8_we1;
reg   [15:0] B_V_3_8_d1;
wire   [4:0] A_V_3_9_address0;
reg    A_V_3_9_ce0;
wire   [15:0] A_V_3_9_q0;
reg   [4:0] A_V_3_9_address1;
reg    A_V_3_9_ce1;
reg    A_V_3_9_we1;
reg   [15:0] A_V_3_9_d1;
wire   [9:0] B_V_3_9_address0;
reg    B_V_3_9_ce0;
wire   [15:0] B_V_3_9_q0;
reg   [9:0] B_V_3_9_address1;
reg    B_V_3_9_ce1;
reg    B_V_3_9_we1;
reg   [15:0] B_V_3_9_d1;
wire   [4:0] A_V_3_10_address0;
reg    A_V_3_10_ce0;
wire  signed [15:0] A_V_3_10_q0;
reg   [4:0] A_V_3_10_address1;
reg    A_V_3_10_ce1;
reg    A_V_3_10_we1;
reg   [15:0] A_V_3_10_d1;
wire   [9:0] B_V_3_10_address0;
reg    B_V_3_10_ce0;
wire   [15:0] B_V_3_10_q0;
reg   [9:0] B_V_3_10_address1;
reg    B_V_3_10_ce1;
reg    B_V_3_10_we1;
reg   [15:0] B_V_3_10_d1;
wire   [4:0] A_V_3_11_address0;
reg    A_V_3_11_ce0;
wire  signed [15:0] A_V_3_11_q0;
reg   [4:0] A_V_3_11_address1;
reg    A_V_3_11_ce1;
reg    A_V_3_11_we1;
reg   [15:0] A_V_3_11_d1;
wire   [9:0] B_V_3_11_address0;
reg    B_V_3_11_ce0;
wire   [15:0] B_V_3_11_q0;
reg   [9:0] B_V_3_11_address1;
reg    B_V_3_11_ce1;
reg    B_V_3_11_we1;
reg   [15:0] B_V_3_11_d1;
wire   [4:0] A_V_3_12_address0;
reg    A_V_3_12_ce0;
wire  signed [15:0] A_V_3_12_q0;
reg   [4:0] A_V_3_12_address1;
reg    A_V_3_12_ce1;
reg    A_V_3_12_we1;
reg   [15:0] A_V_3_12_d1;
wire   [9:0] B_V_3_12_address0;
reg    B_V_3_12_ce0;
wire   [15:0] B_V_3_12_q0;
reg   [9:0] B_V_3_12_address1;
reg    B_V_3_12_ce1;
reg    B_V_3_12_we1;
reg   [15:0] B_V_3_12_d1;
wire   [4:0] A_V_3_13_address0;
reg    A_V_3_13_ce0;
wire   [15:0] A_V_3_13_q0;
reg   [4:0] A_V_3_13_address1;
reg    A_V_3_13_ce1;
reg    A_V_3_13_we1;
reg   [15:0] A_V_3_13_d1;
wire   [9:0] B_V_3_13_address0;
reg    B_V_3_13_ce0;
wire   [15:0] B_V_3_13_q0;
reg   [9:0] B_V_3_13_address1;
reg    B_V_3_13_ce1;
reg    B_V_3_13_we1;
reg   [15:0] B_V_3_13_d1;
wire   [4:0] A_V_3_14_address0;
reg    A_V_3_14_ce0;
wire  signed [15:0] A_V_3_14_q0;
reg   [4:0] A_V_3_14_address1;
reg    A_V_3_14_ce1;
reg    A_V_3_14_we1;
reg   [15:0] A_V_3_14_d1;
wire   [9:0] B_V_3_14_address0;
reg    B_V_3_14_ce0;
wire   [15:0] B_V_3_14_q0;
reg   [9:0] B_V_3_14_address1;
reg    B_V_3_14_ce1;
reg    B_V_3_14_we1;
reg   [15:0] B_V_3_14_d1;
wire   [4:0] A_V_3_15_address0;
reg    A_V_3_15_ce0;
wire  signed [15:0] A_V_3_15_q0;
reg   [4:0] A_V_3_15_address1;
reg    A_V_3_15_ce1;
reg    A_V_3_15_we1;
reg   [15:0] A_V_3_15_d1;
wire   [9:0] B_V_3_15_address0;
reg    B_V_3_15_ce0;
wire   [15:0] B_V_3_15_q0;
reg   [9:0] B_V_3_15_address1;
reg    B_V_3_15_ce1;
reg    B_V_3_15_we1;
reg   [15:0] B_V_3_15_d1;
wire   [4:0] A_V_3_16_address0;
reg    A_V_3_16_ce0;
wire   [15:0] A_V_3_16_q0;
reg   [4:0] A_V_3_16_address1;
reg    A_V_3_16_ce1;
reg    A_V_3_16_we1;
reg   [15:0] A_V_3_16_d1;
wire   [9:0] B_V_3_16_address0;
reg    B_V_3_16_ce0;
wire   [15:0] B_V_3_16_q0;
reg   [9:0] B_V_3_16_address1;
reg    B_V_3_16_ce1;
reg    B_V_3_16_we1;
reg   [15:0] B_V_3_16_d1;
wire   [4:0] A_V_3_17_address0;
reg    A_V_3_17_ce0;
wire  signed [15:0] A_V_3_17_q0;
reg   [4:0] A_V_3_17_address1;
reg    A_V_3_17_ce1;
reg    A_V_3_17_we1;
reg   [15:0] A_V_3_17_d1;
wire   [9:0] B_V_3_17_address0;
reg    B_V_3_17_ce0;
wire   [15:0] B_V_3_17_q0;
reg   [9:0] B_V_3_17_address1;
reg    B_V_3_17_ce1;
reg    B_V_3_17_we1;
reg   [15:0] B_V_3_17_d1;
wire   [4:0] A_V_3_18_address0;
reg    A_V_3_18_ce0;
wire   [15:0] A_V_3_18_q0;
reg   [4:0] A_V_3_18_address1;
reg    A_V_3_18_ce1;
reg    A_V_3_18_we1;
reg   [15:0] A_V_3_18_d1;
wire   [9:0] B_V_3_18_address0;
reg    B_V_3_18_ce0;
wire   [15:0] B_V_3_18_q0;
reg   [9:0] B_V_3_18_address1;
reg    B_V_3_18_ce1;
reg    B_V_3_18_we1;
reg   [15:0] B_V_3_18_d1;
wire   [4:0] A_V_3_19_address0;
reg    A_V_3_19_ce0;
wire  signed [15:0] A_V_3_19_q0;
reg   [4:0] A_V_3_19_address1;
reg    A_V_3_19_ce1;
reg    A_V_3_19_we1;
reg   [15:0] A_V_3_19_d1;
wire   [9:0] B_V_3_19_address0;
reg    B_V_3_19_ce0;
wire   [15:0] B_V_3_19_q0;
reg   [9:0] B_V_3_19_address1;
reg    B_V_3_19_ce1;
reg    B_V_3_19_we1;
reg   [15:0] B_V_3_19_d1;
wire   [4:0] A_V_3_20_address0;
reg    A_V_3_20_ce0;
wire  signed [15:0] A_V_3_20_q0;
reg   [4:0] A_V_3_20_address1;
reg    A_V_3_20_ce1;
reg    A_V_3_20_we1;
reg   [15:0] A_V_3_20_d1;
wire   [9:0] B_V_3_20_address0;
reg    B_V_3_20_ce0;
wire   [15:0] B_V_3_20_q0;
reg   [9:0] B_V_3_20_address1;
reg    B_V_3_20_ce1;
reg    B_V_3_20_we1;
reg   [15:0] B_V_3_20_d1;
wire   [4:0] A_V_3_21_address0;
reg    A_V_3_21_ce0;
wire  signed [15:0] A_V_3_21_q0;
reg   [4:0] A_V_3_21_address1;
reg    A_V_3_21_ce1;
reg    A_V_3_21_we1;
reg   [15:0] A_V_3_21_d1;
wire   [9:0] B_V_3_21_address0;
reg    B_V_3_21_ce0;
wire   [15:0] B_V_3_21_q0;
reg   [9:0] B_V_3_21_address1;
reg    B_V_3_21_ce1;
reg    B_V_3_21_we1;
reg   [15:0] B_V_3_21_d1;
wire   [4:0] A_V_3_22_address0;
reg    A_V_3_22_ce0;
wire  signed [15:0] A_V_3_22_q0;
reg   [4:0] A_V_3_22_address1;
reg    A_V_3_22_ce1;
reg    A_V_3_22_we1;
reg   [15:0] A_V_3_22_d1;
wire   [9:0] B_V_3_22_address0;
reg    B_V_3_22_ce0;
wire   [15:0] B_V_3_22_q0;
reg   [9:0] B_V_3_22_address1;
reg    B_V_3_22_ce1;
reg    B_V_3_22_we1;
reg   [15:0] B_V_3_22_d1;
wire   [4:0] A_V_3_23_address0;
reg    A_V_3_23_ce0;
wire  signed [15:0] A_V_3_23_q0;
reg   [4:0] A_V_3_23_address1;
reg    A_V_3_23_ce1;
reg    A_V_3_23_we1;
reg   [15:0] A_V_3_23_d1;
wire   [9:0] B_V_3_23_address0;
reg    B_V_3_23_ce0;
wire   [15:0] B_V_3_23_q0;
reg   [9:0] B_V_3_23_address1;
reg    B_V_3_23_ce1;
reg    B_V_3_23_we1;
reg   [15:0] B_V_3_23_d1;
wire   [4:0] A_V_3_24_address0;
reg    A_V_3_24_ce0;
wire  signed [15:0] A_V_3_24_q0;
reg   [4:0] A_V_3_24_address1;
reg    A_V_3_24_ce1;
reg    A_V_3_24_we1;
reg   [15:0] A_V_3_24_d1;
wire   [9:0] B_V_3_24_address0;
reg    B_V_3_24_ce0;
wire   [15:0] B_V_3_24_q0;
reg   [9:0] B_V_3_24_address1;
reg    B_V_3_24_ce1;
reg    B_V_3_24_we1;
reg   [15:0] B_V_3_24_d1;
reg    in_stream_a_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] and_ln82_reg_3900;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln108_reg_3266;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln149_reg_3226;
reg    out_stream_V_V_blk_n;
reg    ap_enable_reg_pp2_iter6;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln124_2_reg_3566;
reg   [0:0] icmp_ln124_2_reg_3566_pp2_iter5_reg;
reg   [31:0] i3_0_reg_2010;
reg   [9:0] j2_0_reg_2043;
reg   [36:0] indvar_flatten6_reg_2054;
reg   [31:0] ib_0_reg_2065;
reg   [31:0] p_0300_0_reg_2076;
reg   [5:0] ic_0_reg_2088;
reg   [14:0] indvar_flatten_reg_2099;
reg   [5:0] i_0_reg_2110;
reg   [9:0] j_0_reg_2121;
reg   [4:0] reg_2151;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state16_pp1_stage0_iter0;
reg    ap_block_state17_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln105_fu_2263_p2;
wire   [0:0] icmp_ln108_fu_2283_p2;
reg   [4:0] reg_2155;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state28_pp3_stage0_iter0;
reg    ap_block_state29_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln78_fu_2791_p2;
wire   [0:0] and_ln82_fu_2858_p2;
reg   [31:0] tmp_V_reg_3150;
reg    ap_block_state1;
reg   [31:0] tmp_V_82_reg_3156;
reg    ap_block_state2;
reg  signed [31:0] tmp_V_84_reg_3161;
reg    ap_block_state3;
reg  signed [31:0] tmp_V_86_reg_3169;
reg    ap_block_state4;
reg  signed [31:0] tmp_V_90_reg_3175;
reg    ap_block_state6;
reg   [31:0] tmp_V_92_reg_3183;
reg    ap_block_state7;
wire   [0:0] icmp_ln72_fu_2159_p2;
reg    ap_block_state8;
reg   [31:0] B_ROW_1_load_reg_3192;
wire   [0:0] icmp_ln95_fu_2172_p2;
wire  signed [31:0] KER_size_0_fu_2177_p2;
reg  signed [31:0] KER_size_0_reg_3201;
wire   [36:0] tmp_52_fu_2181_p3;
reg   [36:0] tmp_52_reg_3206;
wire  signed [31:0] mul_ln75_fu_2194_p2;
reg  signed [31:0] mul_ln75_reg_3211;
wire  signed [31:0] KER_size_1_fu_2203_p2;
reg  signed [31:0] KER_size_1_reg_3216;
wire    ap_CS_fsm_state9;
wire   [31:0] KER_bound_fu_2207_p2;
reg   [31:0] KER_bound_reg_3221;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln149_fu_2211_p2;
wire    ap_block_state11_pp0_stage0_iter0;
reg    ap_block_state12_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] i_fu_2216_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] num_imag_fu_2227_p2;
reg   [31:0] num_imag_reg_3238;
wire    ap_CS_fsm_state14;
wire   [31:0] A_COL_ITER_fu_2237_p2;
reg   [31:0] A_COL_ITER_reg_3243;
wire   [0:0] icmp_ln96_fu_2222_p2;
wire   [0:0] icmp_ln102_fu_2252_p2;
wire    ap_CS_fsm_state15;
wire   [30:0] add_ln102_fu_2257_p2;
reg   [30:0] add_ln102_reg_3252;
wire   [9:0] j_2_fu_2269_p2;
wire   [4:0] trunc_ln180_6_fu_2289_p1;
reg   [4:0] trunc_ln180_6_reg_3270;
wire   [4:0] trunc_ln180_5_fu_2293_p1;
reg   [4:0] trunc_ln180_5_reg_3275;
wire   [0:0] icmp_ln121_fu_2382_p2;
reg   [0:0] icmp_ln121_reg_3280;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state19_pp2_stage0_iter0;
wire    ap_block_state20_pp2_stage0_iter1;
wire    ap_block_state21_pp2_stage0_iter2;
wire    ap_block_state22_pp2_stage0_iter3;
wire    ap_block_state23_pp2_stage0_iter4;
wire    ap_block_state24_pp2_stage0_iter5;
reg    ap_block_state25_pp2_stage0_iter6;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln121_reg_3280_pp2_iter1_reg;
reg   [0:0] icmp_ln121_reg_3280_pp2_iter2_reg;
reg   [0:0] icmp_ln121_reg_3280_pp2_iter3_reg;
reg   [0:0] icmp_ln121_reg_3280_pp2_iter4_reg;
reg   [0:0] icmp_ln121_reg_3280_pp2_iter5_reg;
wire   [36:0] add_ln121_fu_2387_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln124_fu_2399_p2;
reg   [0:0] icmp_ln124_reg_3289;
reg   [0:0] icmp_ln124_reg_3289_pp2_iter1_reg;
reg   [0:0] icmp_ln124_reg_3289_pp2_iter2_reg;
reg   [0:0] icmp_ln124_reg_3289_pp2_iter3_reg;
reg   [0:0] icmp_ln124_reg_3289_pp2_iter4_reg;
wire   [5:0] select_ln127_3_fu_2405_p3;
reg   [5:0] select_ln127_3_reg_3294;
wire   [31:0] select_ln127_4_fu_2413_p3;
reg   [31:0] select_ln127_4_reg_3299;
wire  signed [63:0] sext_ln215_99_fu_2443_p1;
reg  signed [63:0] sext_ln215_99_reg_3304;
reg  signed [63:0] sext_ln215_99_reg_3304_pp2_iter1_reg;
wire   [5:0] ic_fu_2456_p2;
reg   [5:0] ic_reg_3369;
wire   [63:0] zext_ln215_fu_2462_p1;
reg   [63:0] zext_ln215_reg_3375;
reg  signed [15:0] B_V_3_2_load_reg_3521;
reg    ap_enable_reg_pp2_iter1;
reg  signed [15:0] B_V_3_5_load_reg_3526;
reg  signed [15:0] B_V_3_8_load_reg_3531;
reg  signed [15:0] B_V_3_11_load_reg_3536;
reg  signed [15:0] B_V_3_14_load_reg_3541;
reg  signed [15:0] B_V_3_17_load_reg_3546;
reg  signed [15:0] B_V_3_20_load_reg_3551;
reg  signed [15:0] B_V_3_22_load_reg_3556;
reg  signed [15:0] B_V_3_24_load_reg_3561;
wire   [0:0] icmp_ln124_2_fu_2478_p2;
reg   [0:0] icmp_ln124_2_reg_3566_pp2_iter2_reg;
reg   [0:0] icmp_ln124_2_reg_3566_pp2_iter3_reg;
reg   [0:0] icmp_ln124_2_reg_3566_pp2_iter4_reg;
reg  signed [15:0] B_V_3_0_load_reg_3645;
reg    ap_enable_reg_pp2_iter2;
reg  signed [15:0] A_V_3_1_load_reg_3650;
reg  signed [15:0] B_V_3_1_load_reg_3655;
wire  signed [31:0] mul_ln1352_26_fu_2977_p2;
reg  signed [31:0] mul_ln1352_26_reg_3660;
reg  signed [15:0] B_V_3_3_load_reg_3665;
reg  signed [15:0] A_V_3_4_load_reg_3670;
reg  signed [15:0] B_V_3_4_load_reg_3675;
wire  signed [31:0] mul_ln1352_29_fu_2983_p2;
reg  signed [31:0] mul_ln1352_29_reg_3680;
reg  signed [15:0] B_V_3_7_load_reg_3685;
wire  signed [31:0] mul_ln1352_32_fu_2989_p2;
reg  signed [31:0] mul_ln1352_32_reg_3690;
reg  signed [15:0] B_V_3_10_load_reg_3695;
wire  signed [31:0] mul_ln1352_35_fu_2995_p2;
reg  signed [31:0] mul_ln1352_35_reg_3700;
reg  signed [15:0] B_V_3_12_load_reg_3705;
reg  signed [15:0] A_V_3_13_load_reg_3710;
reg  signed [15:0] B_V_3_13_load_reg_3715;
wire  signed [31:0] mul_ln1352_38_fu_3001_p2;
reg  signed [31:0] mul_ln1352_38_reg_3720;
reg  signed [15:0] B_V_3_15_load_reg_3725;
reg  signed [15:0] A_V_3_16_load_reg_3730;
reg  signed [15:0] B_V_3_16_load_reg_3735;
wire  signed [31:0] mul_ln1352_41_fu_3007_p2;
reg  signed [31:0] mul_ln1352_41_reg_3740;
reg  signed [15:0] B_V_3_19_load_reg_3745;
wire  signed [31:0] mul_ln1352_44_fu_3013_p2;
reg  signed [31:0] mul_ln1352_44_reg_3750;
reg  signed [15:0] B_V_3_21_load_reg_3755;
wire  signed [31:0] mul_ln1352_46_fu_3019_p2;
reg  signed [31:0] mul_ln1352_46_reg_3760;
reg  signed [15:0] B_V_3_23_load_reg_3765;
wire  signed [31:0] mul_ln1352_48_fu_3025_p2;
reg  signed [31:0] mul_ln1352_48_reg_3770;
reg  signed [15:0] A_V_3_6_load_reg_3775;
reg    ap_enable_reg_pp2_iter3;
reg  signed [15:0] B_V_3_6_load_reg_3780;
reg  signed [15:0] A_V_3_9_load_reg_3785;
reg  signed [15:0] B_V_3_9_load_reg_3790;
reg  signed [15:0] A_V_3_18_load_reg_3795;
reg  signed [15:0] B_V_3_18_load_reg_3800;
wire  signed [31:0] grp_fu_3031_p3;
reg  signed [31:0] add_ln700_25_reg_3805;
wire  signed [31:0] grp_fu_3046_p3;
reg  signed [31:0] add_ln700_27_reg_3810;
wire  signed [31:0] grp_fu_3061_p3;
reg  signed [31:0] add_ln700_29_reg_3815;
wire  signed [31:0] grp_fu_3068_p3;
reg  signed [31:0] add_ln700_31_reg_3820;
wire  signed [31:0] grp_fu_3075_p3;
reg  signed [31:0] add_ln700_36_reg_3825;
wire  signed [31:0] grp_fu_3090_p3;
reg  signed [31:0] add_ln700_38_reg_3830;
wire  signed [31:0] grp_fu_3105_p3;
reg  signed [31:0] add_ln700_40_reg_3835;
wire  signed [31:0] grp_fu_3112_p3;
reg  signed [31:0] add_ln700_42_reg_3840;
wire  signed [31:0] grp_fu_3119_p3;
reg  signed [31:0] add_ln700_43_reg_3845;
wire   [31:0] add_ln700_34_fu_2659_p2;
reg   [31:0] add_ln700_34_reg_3850;
wire   [31:0] add_ln700_46_fu_2678_p2;
reg   [31:0] add_ln700_46_reg_3855;
wire   [31:0] add_ln700_48_fu_2695_p2;
reg   [31:0] add_ln700_48_reg_3860;
reg    ap_enable_reg_pp2_iter5;
reg   [16:0] tmp_59_reg_3868;
wire   [31:0] mul_ln75_2_fu_2772_p2;
reg   [31:0] mul_ln75_2_reg_3873;
wire    ap_CS_fsm_state27;
reg   [0:0] icmp_ln78_reg_3878;
wire   [14:0] add_ln78_fu_2797_p2;
wire   [9:0] select_ln78_fu_2815_p3;
reg   [9:0] select_ln78_reg_3887;
wire   [5:0] select_ln78_3_fu_2828_p3;
reg   [5:0] select_ln78_3_reg_3893;
wire   [9:0] j_fu_2864_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state16;
wire    ap_CS_fsm_state18;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state19;
reg    ap_enable_reg_pp2_iter4;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state28;
reg   [31:0] num_imag_0_reg_2021;
reg   [30:0] iter_0_reg_2032;
wire    ap_CS_fsm_state26;
reg   [31:0] ap_phi_mux_ib_0_phi_fu_2069_p4;
reg   [31:0] ap_phi_mux_p_0300_0_phi_fu_2080_p4;
reg   [5:0] ap_phi_mux_ic_0_phi_fu_2092_p4;
reg   [5:0] ap_phi_mux_i_0_phi_fu_2114_p4;
wire   [63:0] zext_ln180_6_fu_2297_p1;
wire   [63:0] zext_ln180_5_fu_2354_p1;
wire   [63:0] zext_ln180_4_fu_2880_p1;
wire   [63:0] zext_ln180_fu_2948_p1;
reg    ap_block_state5;
reg    ap_block_pp0_stage0_01001;
wire  signed [31:0] tmp_V_101_fu_2767_p1;
reg    ap_block_pp2_stage0_01001;
reg    ap_block_pp3_stage0_01001;
wire   [15:0] trunc_ln68_2_fu_2325_p1;
wire   [15:0] trunc_ln68_fu_2909_p1;
wire  signed [31:0] A_COL_ITER_fu_2237_p0;
wire  signed [31:0] A_COL_ITER_fu_2237_p1;
wire   [31:0] zext_ln102_fu_2248_p1;
wire   [31:0] zext_ln105_fu_2275_p1;
wire   [31:0] ib_fu_2393_p2;
wire   [6:0] trunc_ln124_fu_2421_p1;
wire   [11:0] sext_ln215_99_cast_fu_2425_p3;
wire   [11:0] zext_ln215_2_fu_2433_p1;
wire   [11:0] add_ln215_fu_2437_p2;
wire  signed [31:0] grp_fu_3126_p3;
wire  signed [31:0] grp_fu_3134_p3;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_28_fu_2651_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_33_fu_2655_p2;
wire  signed [31:0] grp_fu_3142_p3;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_44_fu_2669_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_39_fu_2665_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_45_fu_2673_p2;
wire   [31:0] add_ln700_47_fu_2691_p2;
wire   [31:0] select_ln127_fu_2684_p3;
wire   [31:0] sub_ln1371_fu_2701_p2;
wire   [17:0] zext_ln1371_fu_2724_p1;
wire   [16:0] tmp_60_fu_2733_p4;
wire   [0:0] tmp_2_fu_2717_p3;
wire   [17:0] sub_ln1371_2_fu_2727_p2;
wire   [17:0] zext_ln1371_2_fu_2742_p1;
wire   [0:0] icmp_ln131_fu_2754_p2;
wire   [17:0] output_data_fu_2746_p3;
wire   [17:0] output_data_4_fu_2759_p3;
wire   [31:0] zext_ln78_fu_2782_p1;
wire   [0:0] icmp_ln79_fu_2809_p2;
wire   [5:0] i_4_fu_2803_p2;
wire   [31:0] zext_ln78_2_fu_2824_p1;
wire   [0:0] icmp_ln82_3_fu_2836_p2;
wire   [0:0] icmp_ln82_2_fu_2786_p2;
wire   [31:0] zext_ln79_fu_2849_p1;
wire   [0:0] icmp_ln82_fu_2853_p2;
wire   [0:0] select_ln78_4_fu_2841_p3;
wire   [4:0] trunc_ln180_4_fu_2870_p1;
wire   [10:0] tmp_56_fu_2873_p3;
wire   [4:0] trunc_ln180_fu_2938_p1;
wire   [10:0] tmp_54_fu_2941_p3;
wire  signed [31:0] grp_fu_3038_p3;
wire  signed [31:0] grp_fu_3053_p3;
wire  signed [31:0] grp_fu_3082_p3;
wire  signed [31:0] grp_fu_3097_p3;
wire    ap_CS_fsm_state13;
reg   [20:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_condition_2591;
reg    ap_condition_2594;
reg    ap_condition_2597;
reg    ap_condition_2600;
reg    ap_condition_2603;
reg    ap_condition_2606;
reg    ap_condition_2609;
reg    ap_condition_2612;
reg    ap_condition_2615;
reg    ap_condition_2618;
reg    ap_condition_2621;
reg    ap_condition_2624;
reg    ap_condition_2627;
reg    ap_condition_2630;
reg    ap_condition_2633;
reg    ap_condition_2636;
reg    ap_condition_1686;
reg    ap_condition_1703;
reg    ap_condition_699;
reg    ap_condition_2645;
reg    ap_condition_2648;
reg    ap_condition_2651;
reg    ap_condition_2654;
reg    ap_condition_2657;
reg    ap_condition_2660;
reg    ap_condition_2663;
reg    ap_condition_2666;
reg    ap_condition_2669;
reg    ap_condition_2672;
reg    ap_condition_2675;
reg    ap_condition_2678;
reg    ap_condition_2681;
reg    ap_condition_2684;
reg    ap_condition_2687;
reg    ap_condition_2690;
reg    ap_condition_2693;
reg    ap_condition_2696;
reg    ap_condition_2699;
reg    ap_condition_2702;
reg    ap_condition_2705;
reg    ap_condition_2708;
reg    ap_condition_2711;
reg    ap_condition_2714;
reg    ap_condition_1794;
reg    ap_condition_1811;
reg    ap_condition_682;
reg    ap_condition_2723;
reg    ap_condition_2726;
reg    ap_condition_2729;
reg    ap_condition_2732;
reg    ap_condition_2735;
reg    ap_condition_2738;
reg    ap_condition_2741;
reg    ap_condition_2744;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 21'd1;
#0 B_COL_1 = 32'd32;
#0 B_ROW_1 = 32'd800;
#0 OFMDim_current_1 = 32'd0;
#0 A_ROW_1 = 32'd800;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
end

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_0_address0),
    .ce0(A_V_3_0_ce0),
    .q0(A_V_3_0_q0),
    .address1(A_V_3_0_address1),
    .ce1(A_V_3_0_ce1),
    .we1(A_V_3_0_we1),
    .d1(A_V_3_0_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_0_address0),
    .ce0(B_V_3_0_ce0),
    .q0(B_V_3_0_q0),
    .address1(B_V_3_0_address1),
    .ce1(B_V_3_0_ce1),
    .we1(B_V_3_0_we1),
    .d1(B_V_3_0_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_1_address0),
    .ce0(A_V_3_1_ce0),
    .q0(A_V_3_1_q0),
    .address1(A_V_3_1_address1),
    .ce1(A_V_3_1_ce1),
    .we1(A_V_3_1_we1),
    .d1(A_V_3_1_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_1_address0),
    .ce0(B_V_3_1_ce0),
    .q0(B_V_3_1_q0),
    .address1(B_V_3_1_address1),
    .ce1(B_V_3_1_ce1),
    .we1(B_V_3_1_we1),
    .d1(B_V_3_1_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_2_address0),
    .ce0(A_V_3_2_ce0),
    .q0(A_V_3_2_q0),
    .address1(A_V_3_2_address1),
    .ce1(A_V_3_2_ce1),
    .we1(A_V_3_2_we1),
    .d1(A_V_3_2_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_2_address0),
    .ce0(B_V_3_2_ce0),
    .q0(B_V_3_2_q0),
    .address1(B_V_3_2_address1),
    .ce1(B_V_3_2_ce1),
    .we1(B_V_3_2_we1),
    .d1(B_V_3_2_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_3_address0),
    .ce0(A_V_3_3_ce0),
    .q0(A_V_3_3_q0),
    .address1(A_V_3_3_address1),
    .ce1(A_V_3_3_ce1),
    .we1(A_V_3_3_we1),
    .d1(A_V_3_3_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_3_address0),
    .ce0(B_V_3_3_ce0),
    .q0(B_V_3_3_q0),
    .address1(B_V_3_3_address1),
    .ce1(B_V_3_3_ce1),
    .we1(B_V_3_3_we1),
    .d1(B_V_3_3_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_4_address0),
    .ce0(A_V_3_4_ce0),
    .q0(A_V_3_4_q0),
    .address1(A_V_3_4_address1),
    .ce1(A_V_3_4_ce1),
    .we1(A_V_3_4_we1),
    .d1(A_V_3_4_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_4_address0),
    .ce0(B_V_3_4_ce0),
    .q0(B_V_3_4_q0),
    .address1(B_V_3_4_address1),
    .ce1(B_V_3_4_ce1),
    .we1(B_V_3_4_we1),
    .d1(B_V_3_4_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_5_address0),
    .ce0(A_V_3_5_ce0),
    .q0(A_V_3_5_q0),
    .address1(A_V_3_5_address1),
    .ce1(A_V_3_5_ce1),
    .we1(A_V_3_5_we1),
    .d1(A_V_3_5_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_5_address0),
    .ce0(B_V_3_5_ce0),
    .q0(B_V_3_5_q0),
    .address1(B_V_3_5_address1),
    .ce1(B_V_3_5_ce1),
    .we1(B_V_3_5_we1),
    .d1(B_V_3_5_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_6_address0),
    .ce0(A_V_3_6_ce0),
    .q0(A_V_3_6_q0),
    .address1(A_V_3_6_address1),
    .ce1(A_V_3_6_ce1),
    .we1(A_V_3_6_we1),
    .d1(A_V_3_6_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_6_address0),
    .ce0(B_V_3_6_ce0),
    .q0(B_V_3_6_q0),
    .address1(B_V_3_6_address1),
    .ce1(B_V_3_6_ce1),
    .we1(B_V_3_6_we1),
    .d1(B_V_3_6_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_7_address0),
    .ce0(A_V_3_7_ce0),
    .q0(A_V_3_7_q0),
    .address1(A_V_3_7_address1),
    .ce1(A_V_3_7_ce1),
    .we1(A_V_3_7_we1),
    .d1(A_V_3_7_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_7_address0),
    .ce0(B_V_3_7_ce0),
    .q0(B_V_3_7_q0),
    .address1(B_V_3_7_address1),
    .ce1(B_V_3_7_ce1),
    .we1(B_V_3_7_we1),
    .d1(B_V_3_7_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_8_address0),
    .ce0(A_V_3_8_ce0),
    .q0(A_V_3_8_q0),
    .address1(A_V_3_8_address1),
    .ce1(A_V_3_8_ce1),
    .we1(A_V_3_8_we1),
    .d1(A_V_3_8_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_8_address0),
    .ce0(B_V_3_8_ce0),
    .q0(B_V_3_8_q0),
    .address1(B_V_3_8_address1),
    .ce1(B_V_3_8_ce1),
    .we1(B_V_3_8_we1),
    .d1(B_V_3_8_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_9_address0),
    .ce0(A_V_3_9_ce0),
    .q0(A_V_3_9_q0),
    .address1(A_V_3_9_address1),
    .ce1(A_V_3_9_ce1),
    .we1(A_V_3_9_we1),
    .d1(A_V_3_9_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_9_address0),
    .ce0(B_V_3_9_ce0),
    .q0(B_V_3_9_q0),
    .address1(B_V_3_9_address1),
    .ce1(B_V_3_9_ce1),
    .we1(B_V_3_9_we1),
    .d1(B_V_3_9_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_10_address0),
    .ce0(A_V_3_10_ce0),
    .q0(A_V_3_10_q0),
    .address1(A_V_3_10_address1),
    .ce1(A_V_3_10_ce1),
    .we1(A_V_3_10_we1),
    .d1(A_V_3_10_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_10_address0),
    .ce0(B_V_3_10_ce0),
    .q0(B_V_3_10_q0),
    .address1(B_V_3_10_address1),
    .ce1(B_V_3_10_ce1),
    .we1(B_V_3_10_we1),
    .d1(B_V_3_10_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_11_address0),
    .ce0(A_V_3_11_ce0),
    .q0(A_V_3_11_q0),
    .address1(A_V_3_11_address1),
    .ce1(A_V_3_11_ce1),
    .we1(A_V_3_11_we1),
    .d1(A_V_3_11_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_11_address0),
    .ce0(B_V_3_11_ce0),
    .q0(B_V_3_11_q0),
    .address1(B_V_3_11_address1),
    .ce1(B_V_3_11_ce1),
    .we1(B_V_3_11_we1),
    .d1(B_V_3_11_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_12_address0),
    .ce0(A_V_3_12_ce0),
    .q0(A_V_3_12_q0),
    .address1(A_V_3_12_address1),
    .ce1(A_V_3_12_ce1),
    .we1(A_V_3_12_we1),
    .d1(A_V_3_12_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_12_address0),
    .ce0(B_V_3_12_ce0),
    .q0(B_V_3_12_q0),
    .address1(B_V_3_12_address1),
    .ce1(B_V_3_12_ce1),
    .we1(B_V_3_12_we1),
    .d1(B_V_3_12_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_13_address0),
    .ce0(A_V_3_13_ce0),
    .q0(A_V_3_13_q0),
    .address1(A_V_3_13_address1),
    .ce1(A_V_3_13_ce1),
    .we1(A_V_3_13_we1),
    .d1(A_V_3_13_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_13_address0),
    .ce0(B_V_3_13_ce0),
    .q0(B_V_3_13_q0),
    .address1(B_V_3_13_address1),
    .ce1(B_V_3_13_ce1),
    .we1(B_V_3_13_we1),
    .d1(B_V_3_13_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_14_address0),
    .ce0(A_V_3_14_ce0),
    .q0(A_V_3_14_q0),
    .address1(A_V_3_14_address1),
    .ce1(A_V_3_14_ce1),
    .we1(A_V_3_14_we1),
    .d1(A_V_3_14_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_14_address0),
    .ce0(B_V_3_14_ce0),
    .q0(B_V_3_14_q0),
    .address1(B_V_3_14_address1),
    .ce1(B_V_3_14_ce1),
    .we1(B_V_3_14_we1),
    .d1(B_V_3_14_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_15_address0),
    .ce0(A_V_3_15_ce0),
    .q0(A_V_3_15_q0),
    .address1(A_V_3_15_address1),
    .ce1(A_V_3_15_ce1),
    .we1(A_V_3_15_we1),
    .d1(A_V_3_15_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_15_address0),
    .ce0(B_V_3_15_ce0),
    .q0(B_V_3_15_q0),
    .address1(B_V_3_15_address1),
    .ce1(B_V_3_15_ce1),
    .we1(B_V_3_15_we1),
    .d1(B_V_3_15_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_16_address0),
    .ce0(A_V_3_16_ce0),
    .q0(A_V_3_16_q0),
    .address1(A_V_3_16_address1),
    .ce1(A_V_3_16_ce1),
    .we1(A_V_3_16_we1),
    .d1(A_V_3_16_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_16_address0),
    .ce0(B_V_3_16_ce0),
    .q0(B_V_3_16_q0),
    .address1(B_V_3_16_address1),
    .ce1(B_V_3_16_ce1),
    .we1(B_V_3_16_we1),
    .d1(B_V_3_16_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_17_address0),
    .ce0(A_V_3_17_ce0),
    .q0(A_V_3_17_q0),
    .address1(A_V_3_17_address1),
    .ce1(A_V_3_17_ce1),
    .we1(A_V_3_17_we1),
    .d1(A_V_3_17_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_17_address0),
    .ce0(B_V_3_17_ce0),
    .q0(B_V_3_17_q0),
    .address1(B_V_3_17_address1),
    .ce1(B_V_3_17_ce1),
    .we1(B_V_3_17_we1),
    .d1(B_V_3_17_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_18_address0),
    .ce0(A_V_3_18_ce0),
    .q0(A_V_3_18_q0),
    .address1(A_V_3_18_address1),
    .ce1(A_V_3_18_ce1),
    .we1(A_V_3_18_we1),
    .d1(A_V_3_18_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_18_address0),
    .ce0(B_V_3_18_ce0),
    .q0(B_V_3_18_q0),
    .address1(B_V_3_18_address1),
    .ce1(B_V_3_18_ce1),
    .we1(B_V_3_18_we1),
    .d1(B_V_3_18_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_19_address0),
    .ce0(A_V_3_19_ce0),
    .q0(A_V_3_19_q0),
    .address1(A_V_3_19_address1),
    .ce1(A_V_3_19_ce1),
    .we1(A_V_3_19_we1),
    .d1(A_V_3_19_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_19_address0),
    .ce0(B_V_3_19_ce0),
    .q0(B_V_3_19_q0),
    .address1(B_V_3_19_address1),
    .ce1(B_V_3_19_ce1),
    .we1(B_V_3_19_we1),
    .d1(B_V_3_19_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_20_address0),
    .ce0(A_V_3_20_ce0),
    .q0(A_V_3_20_q0),
    .address1(A_V_3_20_address1),
    .ce1(A_V_3_20_ce1),
    .we1(A_V_3_20_we1),
    .d1(A_V_3_20_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_20_address0),
    .ce0(B_V_3_20_ce0),
    .q0(B_V_3_20_q0),
    .address1(B_V_3_20_address1),
    .ce1(B_V_3_20_ce1),
    .we1(B_V_3_20_we1),
    .d1(B_V_3_20_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_21_address0),
    .ce0(A_V_3_21_ce0),
    .q0(A_V_3_21_q0),
    .address1(A_V_3_21_address1),
    .ce1(A_V_3_21_ce1),
    .we1(A_V_3_21_we1),
    .d1(A_V_3_21_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_21_address0),
    .ce0(B_V_3_21_ce0),
    .q0(B_V_3_21_q0),
    .address1(B_V_3_21_address1),
    .ce1(B_V_3_21_ce1),
    .we1(B_V_3_21_we1),
    .d1(B_V_3_21_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_22_address0),
    .ce0(A_V_3_22_ce0),
    .q0(A_V_3_22_q0),
    .address1(A_V_3_22_address1),
    .ce1(A_V_3_22_ce1),
    .we1(A_V_3_22_we1),
    .d1(A_V_3_22_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_22_address0),
    .ce0(B_V_3_22_ce0),
    .q0(B_V_3_22_q0),
    .address1(B_V_3_22_address1),
    .ce1(B_V_3_22_ce1),
    .we1(B_V_3_22_we1),
    .d1(B_V_3_22_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_23_address0),
    .ce0(A_V_3_23_ce0),
    .q0(A_V_3_23_q0),
    .address1(A_V_3_23_address1),
    .ce1(A_V_3_23_ce1),
    .we1(A_V_3_23_we1),
    .d1(A_V_3_23_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_23_address0),
    .ce0(B_V_3_23_ce0),
    .q0(B_V_3_23_q0),
    .address1(B_V_3_23_address1),
    .ce1(B_V_3_23_ce1),
    .we1(B_V_3_23_we1),
    .d1(B_V_3_23_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_3_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_24_address0),
    .ce0(A_V_3_24_ce0),
    .q0(A_V_3_24_q0),
    .address1(A_V_3_24_address1),
    .ce1(A_V_3_24_ce1),
    .we1(A_V_3_24_we1),
    .d1(A_V_3_24_d1)
);

SMM_1u_800u_32u_s8jQ #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
B_V_3_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_24_address0),
    .ce0(B_V_3_24_ce0),
    .q0(B_V_3_24_q0),
    .address1(B_V_3_24_address1),
    .ce1(B_V_3_24_ce1),
    .we1(B_V_3_24_we1),
    .d1(B_V_3_24_d1)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U71(
    .din0(tmp_V_90_reg_3175),
    .din1(tmp_V_84_reg_3161),
    .dout(KER_size_0_fu_2177_p2)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U72(
    .din0(tmp_V_84_reg_3161),
    .din1(KER_size_0_reg_3201),
    .dout(KER_size_1_fu_2203_p2)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U73(
    .din0(tmp_V_86_reg_3169),
    .din1(KER_size_1_reg_3216),
    .dout(KER_bound_fu_2207_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U74(
    .din0(A_V_3_2_q0),
    .din1(B_V_3_2_load_reg_3521),
    .dout(mul_ln1352_26_fu_2977_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U75(
    .din0(A_V_3_5_q0),
    .din1(B_V_3_5_load_reg_3526),
    .dout(mul_ln1352_29_fu_2983_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U76(
    .din0(A_V_3_8_q0),
    .din1(B_V_3_8_load_reg_3531),
    .dout(mul_ln1352_32_fu_2989_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U77(
    .din0(A_V_3_11_q0),
    .din1(B_V_3_11_load_reg_3536),
    .dout(mul_ln1352_35_fu_2995_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U78(
    .din0(A_V_3_14_q0),
    .din1(B_V_3_14_load_reg_3541),
    .dout(mul_ln1352_38_fu_3001_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U79(
    .din0(A_V_3_17_q0),
    .din1(B_V_3_17_load_reg_3546),
    .dout(mul_ln1352_41_fu_3007_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U80(
    .din0(A_V_3_20_q0),
    .din1(B_V_3_20_load_reg_3551),
    .dout(mul_ln1352_44_fu_3013_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U81(
    .din0(A_V_3_22_q0),
    .din1(B_V_3_22_load_reg_3556),
    .dout(mul_ln1352_46_fu_3019_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U82(
    .din0(A_V_3_24_q0),
    .din1(B_V_3_24_load_reg_3561),
    .dout(mul_ln1352_48_fu_3025_p2)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U83(
    .din0(A_V_3_0_q0),
    .din1(B_V_3_0_load_reg_3645),
    .din2(grp_fu_3038_p3),
    .dout(grp_fu_3031_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U84(
    .din0(A_V_3_1_load_reg_3650),
    .din1(B_V_3_1_load_reg_3655),
    .din2(mul_ln1352_26_reg_3660),
    .dout(grp_fu_3038_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U85(
    .din0(A_V_3_3_q0),
    .din1(B_V_3_3_load_reg_3665),
    .din2(grp_fu_3053_p3),
    .dout(grp_fu_3046_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U86(
    .din0(A_V_3_4_load_reg_3670),
    .din1(B_V_3_4_load_reg_3675),
    .din2(mul_ln1352_29_reg_3680),
    .dout(grp_fu_3053_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U87(
    .din0(A_V_3_7_q0),
    .din1(B_V_3_7_load_reg_3685),
    .din2(mul_ln1352_32_reg_3690),
    .dout(grp_fu_3061_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U88(
    .din0(A_V_3_10_q0),
    .din1(B_V_3_10_load_reg_3695),
    .din2(mul_ln1352_35_reg_3700),
    .dout(grp_fu_3068_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U89(
    .din0(A_V_3_12_q0),
    .din1(B_V_3_12_load_reg_3705),
    .din2(grp_fu_3082_p3),
    .dout(grp_fu_3075_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U90(
    .din0(A_V_3_13_load_reg_3710),
    .din1(B_V_3_13_load_reg_3715),
    .din2(mul_ln1352_38_reg_3720),
    .dout(grp_fu_3082_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U91(
    .din0(A_V_3_15_q0),
    .din1(B_V_3_15_load_reg_3725),
    .din2(grp_fu_3097_p3),
    .dout(grp_fu_3090_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U92(
    .din0(A_V_3_16_load_reg_3730),
    .din1(B_V_3_16_load_reg_3735),
    .din2(mul_ln1352_41_reg_3740),
    .dout(grp_fu_3097_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U93(
    .din0(A_V_3_19_q0),
    .din1(B_V_3_19_load_reg_3745),
    .din2(mul_ln1352_44_reg_3750),
    .dout(grp_fu_3105_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U94(
    .din0(A_V_3_21_q0),
    .din1(B_V_3_21_load_reg_3755),
    .din2(mul_ln1352_46_reg_3760),
    .dout(grp_fu_3112_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U95(
    .din0(A_V_3_23_q0),
    .din1(B_V_3_23_load_reg_3765),
    .din2(mul_ln1352_48_reg_3770),
    .dout(grp_fu_3119_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U96(
    .din0(A_V_3_6_load_reg_3775),
    .din1(B_V_3_6_load_reg_3780),
    .din2(add_ln700_29_reg_3815),
    .dout(grp_fu_3126_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U97(
    .din0(A_V_3_9_load_reg_3785),
    .din1(B_V_3_9_load_reg_3790),
    .din2(add_ln700_31_reg_3820),
    .dout(grp_fu_3134_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U98(
    .din0(A_V_3_18_load_reg_3795),
    .din1(B_V_3_18_load_reg_3800),
    .din2(add_ln700_40_reg_3835),
    .dout(grp_fu_3142_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state16) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln102_fu_2252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state16) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state16);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln102_fu_2252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state19) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state19)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp2_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state28) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state28) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state28);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_fu_2211_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i3_0_reg_2010 <= i_fu_2216_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i3_0_reg_2010 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_reg_3878 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_0_reg_2110 <= select_ln78_3_reg_3893;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        i_0_reg_2110 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3280 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ib_0_reg_2065 <= select_ln127_4_reg_3299;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        ib_0_reg_2065 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3280 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ic_0_reg_2088 <= ic_reg_3369;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        ic_0_reg_2088 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_fu_2382_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten6_reg_2054 <= add_ln121_fu_2387_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten6_reg_2054 <= 37'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2791_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten_reg_2099 <= add_ln78_fu_2797_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten_reg_2099 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        iter_0_reg_2032 <= add_ln102_reg_3252;
    end else if (((icmp_ln96_fu_2222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        iter_0_reg_2032 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_2252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        j2_0_reg_2043 <= 10'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_2263_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j2_0_reg_2043 <= j_2_fu_2269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2791_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_0_reg_2121 <= j_fu_2864_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        j_0_reg_2121 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_2252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        num_imag_0_reg_2021 <= num_imag_reg_3238;
    end else if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_2159_p2 == 1'd0) & (icmp_ln95_fu_2172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        num_imag_0_reg_2021 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3280_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        p_0300_0_reg_2076 <= add_ln700_48_reg_3860;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        p_0300_0_reg_2076 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_2222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        A_COL_ITER_reg_3243 <= A_COL_ITER_fu_2237_p2;
        A_ROW_1 <= B_ROW_1_load_reg_3192;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3280_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_13_load_reg_3710 <= A_V_3_13_q0;
        A_V_3_16_load_reg_3730 <= A_V_3_16_q0;
        A_V_3_1_load_reg_3650 <= A_V_3_1_q0;
        A_V_3_4_load_reg_3670 <= A_V_3_4_q0;
        B_V_3_0_load_reg_3645 <= B_V_3_0_q0;
        B_V_3_10_load_reg_3695 <= B_V_3_10_q0;
        B_V_3_12_load_reg_3705 <= B_V_3_12_q0;
        B_V_3_13_load_reg_3715 <= B_V_3_13_q0;
        B_V_3_15_load_reg_3725 <= B_V_3_15_q0;
        B_V_3_16_load_reg_3735 <= B_V_3_16_q0;
        B_V_3_19_load_reg_3745 <= B_V_3_19_q0;
        B_V_3_1_load_reg_3655 <= B_V_3_1_q0;
        B_V_3_21_load_reg_3755 <= B_V_3_21_q0;
        B_V_3_23_load_reg_3765 <= B_V_3_23_q0;
        B_V_3_3_load_reg_3665 <= B_V_3_3_q0;
        B_V_3_4_load_reg_3675 <= B_V_3_4_q0;
        B_V_3_7_load_reg_3685 <= B_V_3_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3280_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        A_V_3_18_load_reg_3795 <= A_V_3_18_q0;
        A_V_3_6_load_reg_3775 <= A_V_3_6_q0;
        A_V_3_9_load_reg_3785 <= A_V_3_9_q0;
        B_V_3_18_load_reg_3800 <= B_V_3_18_q0;
        B_V_3_6_load_reg_3780 <= B_V_3_6_q0;
        B_V_3_9_load_reg_3790 <= B_V_3_9_q0;
        add_ln700_25_reg_3805 <= grp_fu_3031_p3;
        add_ln700_27_reg_3810 <= grp_fu_3046_p3;
        add_ln700_29_reg_3815 <= grp_fu_3061_p3;
        add_ln700_31_reg_3820 <= grp_fu_3068_p3;
        add_ln700_36_reg_3825 <= grp_fu_3075_p3;
        add_ln700_38_reg_3830 <= grp_fu_3090_p3;
        add_ln700_40_reg_3835 <= grp_fu_3105_p3;
        add_ln700_42_reg_3840 <= grp_fu_3112_p3;
        add_ln700_43_reg_3845 <= grp_fu_3119_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_2159_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        B_COL_1 <= tmp_V_90_reg_3175;
        OFMDim_current_1 <= tmp_V_92_reg_3183;
        mul_ln75_reg_3211 <= mul_ln75_fu_2194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        B_ROW_1 <= mul_ln75_2_fu_2772_p2;
        mul_ln75_2_reg_3873 <= mul_ln75_2_fu_2772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        B_ROW_1_load_reg_3192 <= B_ROW_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3280 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_11_load_reg_3536 <= B_V_3_11_q0;
        B_V_3_14_load_reg_3541 <= B_V_3_14_q0;
        B_V_3_17_load_reg_3546 <= B_V_3_17_q0;
        B_V_3_20_load_reg_3551 <= B_V_3_20_q0;
        B_V_3_22_load_reg_3556 <= B_V_3_22_q0;
        B_V_3_24_load_reg_3561 <= B_V_3_24_q0;
        B_V_3_2_load_reg_3521 <= B_V_3_2_q0;
        B_V_3_5_load_reg_3526 <= B_V_3_5_q0;
        B_V_3_8_load_reg_3531 <= B_V_3_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        KER_bound_reg_3221 <= KER_bound_fu_2207_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln95_fu_2172_p2 == 1'd0) & (icmp_ln72_fu_2159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        KER_size_0_reg_3201 <= KER_size_0_fu_2177_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        KER_size_1_reg_3216 <= KER_size_1_fu_2203_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln102_reg_3252 <= add_ln102_fu_2257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3280_pp2_iter3_reg == 1'd0))) begin
        add_ln700_34_reg_3850 <= add_ln700_34_fu_2659_p2;
        add_ln700_46_reg_3855 <= add_ln700_46_fu_2678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3280_pp2_iter4_reg == 1'd0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        add_ln700_48_reg_3860 <= add_ln700_48_fu_2695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2791_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        and_ln82_reg_3900 <= and_ln82_fu_2858_p2;
        select_ln78_reg_3887 <= select_ln78_fu_2815_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_fu_2382_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ic_reg_3369 <= ic_fu_2456_p2;
        select_ln127_4_reg_3299 <= select_ln127_4_fu_2413_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_2263_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln108_reg_3266 <= icmp_ln108_fu_2283_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln121_reg_3280 <= icmp_ln121_fu_2382_p2;
        icmp_ln121_reg_3280_pp2_iter1_reg <= icmp_ln121_reg_3280;
        icmp_ln124_reg_3289_pp2_iter1_reg <= icmp_ln124_reg_3289;
        sext_ln215_99_reg_3304_pp2_iter1_reg <= sext_ln215_99_reg_3304;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln121_reg_3280_pp2_iter2_reg <= icmp_ln121_reg_3280_pp2_iter1_reg;
        icmp_ln121_reg_3280_pp2_iter3_reg <= icmp_ln121_reg_3280_pp2_iter2_reg;
        icmp_ln121_reg_3280_pp2_iter4_reg <= icmp_ln121_reg_3280_pp2_iter3_reg;
        icmp_ln121_reg_3280_pp2_iter5_reg <= icmp_ln121_reg_3280_pp2_iter4_reg;
        icmp_ln124_2_reg_3566_pp2_iter2_reg <= icmp_ln124_2_reg_3566;
        icmp_ln124_2_reg_3566_pp2_iter3_reg <= icmp_ln124_2_reg_3566_pp2_iter2_reg;
        icmp_ln124_2_reg_3566_pp2_iter4_reg <= icmp_ln124_2_reg_3566_pp2_iter3_reg;
        icmp_ln124_2_reg_3566_pp2_iter5_reg <= icmp_ln124_2_reg_3566_pp2_iter4_reg;
        icmp_ln124_reg_3289_pp2_iter2_reg <= icmp_ln124_reg_3289_pp2_iter1_reg;
        icmp_ln124_reg_3289_pp2_iter3_reg <= icmp_ln124_reg_3289_pp2_iter2_reg;
        icmp_ln124_reg_3289_pp2_iter4_reg <= icmp_ln124_reg_3289_pp2_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3280 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln124_2_reg_3566 <= icmp_ln124_2_fu_2478_p2;
        zext_ln215_reg_3375[5 : 0] <= zext_ln215_fu_2462_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_fu_2382_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln124_reg_3289 <= icmp_ln124_fu_2399_p2;
        select_ln127_3_reg_3294 <= select_ln127_3_fu_2405_p3;
        sext_ln215_99_reg_3304 <= sext_ln215_99_fu_2443_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln149_reg_3226 <= icmp_ln149_fu_2211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln78_reg_3878 <= icmp_ln78_fu_2791_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3280_pp2_iter1_reg == 1'd0))) begin
        mul_ln1352_26_reg_3660 <= mul_ln1352_26_fu_2977_p2;
        mul_ln1352_29_reg_3680 <= mul_ln1352_29_fu_2983_p2;
        mul_ln1352_32_reg_3690 <= mul_ln1352_32_fu_2989_p2;
        mul_ln1352_35_reg_3700 <= mul_ln1352_35_fu_2995_p2;
        mul_ln1352_38_reg_3720 <= mul_ln1352_38_fu_3001_p2;
        mul_ln1352_41_reg_3740 <= mul_ln1352_41_fu_3007_p2;
        mul_ln1352_44_reg_3750 <= mul_ln1352_44_fu_3013_p2;
        mul_ln1352_46_reg_3760 <= mul_ln1352_46_fu_3019_p2;
        mul_ln1352_48_reg_3770 <= mul_ln1352_48_fu_3025_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        num_imag_reg_3238 <= num_imag_fu_2227_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_2263_p2 == 1'd0) & (icmp_ln108_fu_2283_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_fu_2283_p2 == 1'd0) & (icmp_ln105_fu_2263_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        reg_2151 <= {{j2_0_reg_2043[9:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2791_p2 == 1'd0) & (1'd1 == and_ln82_fu_2858_p2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'd0 == and_ln82_fu_2858_p2) & (icmp_ln78_fu_2791_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        reg_2155 <= {{select_ln78_fu_2815_p3[9:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2791_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln78_3_reg_3893 <= select_ln78_3_fu_2828_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_2159_p2 == 1'd0) & (icmp_ln95_fu_2172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_52_reg_3206[36 : 5] <= tmp_52_fu_2181_p3[36 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln124_2_reg_3566_pp2_iter4_reg == 1'd1))) begin
        tmp_59_reg_3868 <= {{sub_ln1371_fu_2701_p2[31:15]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_82_reg_3156 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_84_reg_3161 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_86_reg_3169 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_90_reg_3175 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_V_92_reg_3183 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_V_reg_3150 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_2263_p2 == 1'd0) & (icmp_ln108_fu_2283_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln180_5_reg_3275 <= trunc_ln180_5_fu_2293_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_fu_2283_p2 == 1'd0) & (icmp_ln105_fu_2263_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln180_6_reg_3270 <= trunc_ln180_6_fu_2289_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2591)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_0_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_0_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_0_address1 = 'bx;
        end
    end else begin
        A_V_3_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_0_ce0 = 1'b1;
    end else begin
        A_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd0) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd0) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_0_ce1 = 1'b1;
    end else begin
        A_V_3_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2591)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_0_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_0_d1 = 16'd0;
        end else begin
            A_V_3_0_d1 = 'bx;
        end
    end else begin
        A_V_3_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd0) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd0) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_0_we1 = 1'b1;
    end else begin
        A_V_3_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2594)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_10_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_10_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_10_address1 = 'bx;
        end
    end else begin
        A_V_3_10_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_10_ce0 = 1'b1;
    end else begin
        A_V_3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd10) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd10) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_10_ce1 = 1'b1;
    end else begin
        A_V_3_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2594)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_10_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_10_d1 = 16'd0;
        end else begin
            A_V_3_10_d1 = 'bx;
        end
    end else begin
        A_V_3_10_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd10) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd10) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_10_we1 = 1'b1;
    end else begin
        A_V_3_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2597)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_11_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_11_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_11_address1 = 'bx;
        end
    end else begin
        A_V_3_11_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_11_ce0 = 1'b1;
    end else begin
        A_V_3_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd11) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd11) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_11_ce1 = 1'b1;
    end else begin
        A_V_3_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2597)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_11_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_11_d1 = 16'd0;
        end else begin
            A_V_3_11_d1 = 'bx;
        end
    end else begin
        A_V_3_11_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd11) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd11) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_11_we1 = 1'b1;
    end else begin
        A_V_3_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2600)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_12_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_12_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_12_address1 = 'bx;
        end
    end else begin
        A_V_3_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_12_ce0 = 1'b1;
    end else begin
        A_V_3_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd12) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd12) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_12_ce1 = 1'b1;
    end else begin
        A_V_3_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2600)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_12_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_12_d1 = 16'd0;
        end else begin
            A_V_3_12_d1 = 'bx;
        end
    end else begin
        A_V_3_12_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd12) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd12) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_12_we1 = 1'b1;
    end else begin
        A_V_3_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2603)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_13_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_13_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_13_address1 = 'bx;
        end
    end else begin
        A_V_3_13_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_13_ce0 = 1'b1;
    end else begin
        A_V_3_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd13) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd13) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_13_ce1 = 1'b1;
    end else begin
        A_V_3_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2603)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_13_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_13_d1 = 16'd0;
        end else begin
            A_V_3_13_d1 = 'bx;
        end
    end else begin
        A_V_3_13_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd13) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd13) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_13_we1 = 1'b1;
    end else begin
        A_V_3_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2606)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_14_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_14_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_14_address1 = 'bx;
        end
    end else begin
        A_V_3_14_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_14_ce0 = 1'b1;
    end else begin
        A_V_3_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd14) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd14) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_14_ce1 = 1'b1;
    end else begin
        A_V_3_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2606)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_14_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_14_d1 = 16'd0;
        end else begin
            A_V_3_14_d1 = 'bx;
        end
    end else begin
        A_V_3_14_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd14) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd14) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_14_we1 = 1'b1;
    end else begin
        A_V_3_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2609)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_15_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_15_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_15_address1 = 'bx;
        end
    end else begin
        A_V_3_15_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_15_ce0 = 1'b1;
    end else begin
        A_V_3_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd15) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd15) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_15_ce1 = 1'b1;
    end else begin
        A_V_3_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2609)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_15_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_15_d1 = 16'd0;
        end else begin
            A_V_3_15_d1 = 'bx;
        end
    end else begin
        A_V_3_15_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd15) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd15) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_15_we1 = 1'b1;
    end else begin
        A_V_3_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2612)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_16_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_16_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_16_address1 = 'bx;
        end
    end else begin
        A_V_3_16_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_16_ce0 = 1'b1;
    end else begin
        A_V_3_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd16) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd16) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_16_ce1 = 1'b1;
    end else begin
        A_V_3_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2612)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_16_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_16_d1 = 16'd0;
        end else begin
            A_V_3_16_d1 = 'bx;
        end
    end else begin
        A_V_3_16_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd16) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd16) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_16_we1 = 1'b1;
    end else begin
        A_V_3_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2615)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_17_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_17_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_17_address1 = 'bx;
        end
    end else begin
        A_V_3_17_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_17_ce0 = 1'b1;
    end else begin
        A_V_3_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd17) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd17) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_17_ce1 = 1'b1;
    end else begin
        A_V_3_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2615)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_17_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_17_d1 = 16'd0;
        end else begin
            A_V_3_17_d1 = 'bx;
        end
    end else begin
        A_V_3_17_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd17) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd17) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_17_we1 = 1'b1;
    end else begin
        A_V_3_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2618)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_18_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_18_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_18_address1 = 'bx;
        end
    end else begin
        A_V_3_18_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_18_ce0 = 1'b1;
    end else begin
        A_V_3_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd18) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd18) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_18_ce1 = 1'b1;
    end else begin
        A_V_3_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2618)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_18_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_18_d1 = 16'd0;
        end else begin
            A_V_3_18_d1 = 'bx;
        end
    end else begin
        A_V_3_18_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd18) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd18) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_18_we1 = 1'b1;
    end else begin
        A_V_3_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2621)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_19_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_19_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_19_address1 = 'bx;
        end
    end else begin
        A_V_3_19_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_19_ce0 = 1'b1;
    end else begin
        A_V_3_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd19) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd19) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_19_ce1 = 1'b1;
    end else begin
        A_V_3_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2621)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_19_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_19_d1 = 16'd0;
        end else begin
            A_V_3_19_d1 = 'bx;
        end
    end else begin
        A_V_3_19_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd19) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd19) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_19_we1 = 1'b1;
    end else begin
        A_V_3_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2624)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_1_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_1_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_1_address1 = 'bx;
        end
    end else begin
        A_V_3_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_1_ce0 = 1'b1;
    end else begin
        A_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd1) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd1) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_1_ce1 = 1'b1;
    end else begin
        A_V_3_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2624)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_1_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_1_d1 = 16'd0;
        end else begin
            A_V_3_1_d1 = 'bx;
        end
    end else begin
        A_V_3_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd1) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd1) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_1_we1 = 1'b1;
    end else begin
        A_V_3_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2627)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_20_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_20_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_20_address1 = 'bx;
        end
    end else begin
        A_V_3_20_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_20_ce0 = 1'b1;
    end else begin
        A_V_3_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd20) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd20) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_20_ce1 = 1'b1;
    end else begin
        A_V_3_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2627)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_20_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_20_d1 = 16'd0;
        end else begin
            A_V_3_20_d1 = 'bx;
        end
    end else begin
        A_V_3_20_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd20) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd20) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_20_we1 = 1'b1;
    end else begin
        A_V_3_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2630)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_21_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_21_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_21_address1 = 'bx;
        end
    end else begin
        A_V_3_21_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_21_ce0 = 1'b1;
    end else begin
        A_V_3_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd21) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd21) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_21_ce1 = 1'b1;
    end else begin
        A_V_3_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2630)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_21_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_21_d1 = 16'd0;
        end else begin
            A_V_3_21_d1 = 'bx;
        end
    end else begin
        A_V_3_21_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd21) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd21) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_21_we1 = 1'b1;
    end else begin
        A_V_3_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2633)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_22_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_22_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_22_address1 = 'bx;
        end
    end else begin
        A_V_3_22_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_22_ce0 = 1'b1;
    end else begin
        A_V_3_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd22) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd22) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_22_ce1 = 1'b1;
    end else begin
        A_V_3_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2633)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_22_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_22_d1 = 16'd0;
        end else begin
            A_V_3_22_d1 = 'bx;
        end
    end else begin
        A_V_3_22_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd22) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd22) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_22_we1 = 1'b1;
    end else begin
        A_V_3_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2636)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_23_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_23_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_23_address1 = 'bx;
        end
    end else begin
        A_V_3_23_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_23_ce0 = 1'b1;
    end else begin
        A_V_3_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd23) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd23) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_23_ce1 = 1'b1;
    end else begin
        A_V_3_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2636)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_23_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_23_d1 = 16'd0;
        end else begin
            A_V_3_23_d1 = 'bx;
        end
    end else begin
        A_V_3_23_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd23) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd23) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_23_we1 = 1'b1;
    end else begin
        A_V_3_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_699)) begin
        if ((1'b1 == ap_condition_1703)) begin
            A_V_3_24_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((1'b1 == ap_condition_1686)) begin
            A_V_3_24_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_24_address1 = 'bx;
        end
    end else begin
        A_V_3_24_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_24_ce0 = 1'b1;
    end else begin
        A_V_3_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (((((((((reg_2151 == 5'd30) & (icmp_ln108_reg_3266 == 1'd1)) | ((reg_2151 == 5'd31) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd29) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd28) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd27) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd26) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd25) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd24) & (icmp_ln108_reg_3266 == 1'd1)))) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (((((((((reg_2151 == 5'd30) & (icmp_ln108_reg_3266 == 1'd0)) | ((reg_2151 == 5'd31) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd29) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd28) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd27) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd26) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd25) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd24) & (icmp_ln108_reg_3266 == 1'd0)))))) begin
        A_V_3_24_ce1 = 1'b1;
    end else begin
        A_V_3_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_699)) begin
        if ((1'b1 == ap_condition_1703)) begin
            A_V_3_24_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((1'b1 == ap_condition_1686)) begin
            A_V_3_24_d1 = 16'd0;
        end else begin
            A_V_3_24_d1 = 'bx;
        end
    end else begin
        A_V_3_24_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (((((((((reg_2151 == 5'd30) & (icmp_ln108_reg_3266 == 1'd1)) | ((reg_2151 == 5'd31) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd29) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd28) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd27) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd26) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd25) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd24) & (icmp_ln108_reg_3266 == 1'd1)))) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (((((((((reg_2151 == 5'd30) & (icmp_ln108_reg_3266 == 1'd0)) | ((reg_2151 == 5'd31) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd29) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd28) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd27) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd26) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd25) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd24) & (icmp_ln108_reg_3266 == 1'd0)))))) begin
        A_V_3_24_we1 = 1'b1;
    end else begin
        A_V_3_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2645)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_2_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_2_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_2_address1 = 'bx;
        end
    end else begin
        A_V_3_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_2_ce0 = 1'b1;
    end else begin
        A_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd2) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd2) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_2_ce1 = 1'b1;
    end else begin
        A_V_3_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2645)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_2_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_2_d1 = 16'd0;
        end else begin
            A_V_3_2_d1 = 'bx;
        end
    end else begin
        A_V_3_2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd2) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd2) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_2_we1 = 1'b1;
    end else begin
        A_V_3_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2648)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_3_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_3_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_3_address1 = 'bx;
        end
    end else begin
        A_V_3_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_3_ce0 = 1'b1;
    end else begin
        A_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd3) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd3) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_3_ce1 = 1'b1;
    end else begin
        A_V_3_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2648)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_3_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_3_d1 = 16'd0;
        end else begin
            A_V_3_3_d1 = 'bx;
        end
    end else begin
        A_V_3_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd3) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd3) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_3_we1 = 1'b1;
    end else begin
        A_V_3_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2651)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_4_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_4_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_4_address1 = 'bx;
        end
    end else begin
        A_V_3_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_4_ce0 = 1'b1;
    end else begin
        A_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd4) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd4) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_4_ce1 = 1'b1;
    end else begin
        A_V_3_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2651)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_4_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_4_d1 = 16'd0;
        end else begin
            A_V_3_4_d1 = 'bx;
        end
    end else begin
        A_V_3_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd4) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd4) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_4_we1 = 1'b1;
    end else begin
        A_V_3_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2654)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_5_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_5_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_5_address1 = 'bx;
        end
    end else begin
        A_V_3_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_5_ce0 = 1'b1;
    end else begin
        A_V_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd5) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd5) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_5_ce1 = 1'b1;
    end else begin
        A_V_3_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2654)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_5_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_5_d1 = 16'd0;
        end else begin
            A_V_3_5_d1 = 'bx;
        end
    end else begin
        A_V_3_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd5) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd5) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_5_we1 = 1'b1;
    end else begin
        A_V_3_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2657)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_6_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_6_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_6_address1 = 'bx;
        end
    end else begin
        A_V_3_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_6_ce0 = 1'b1;
    end else begin
        A_V_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd6) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd6) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_6_ce1 = 1'b1;
    end else begin
        A_V_3_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2657)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_6_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_6_d1 = 16'd0;
        end else begin
            A_V_3_6_d1 = 'bx;
        end
    end else begin
        A_V_3_6_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd6) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd6) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_6_we1 = 1'b1;
    end else begin
        A_V_3_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2660)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_7_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_7_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_7_address1 = 'bx;
        end
    end else begin
        A_V_3_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_7_ce0 = 1'b1;
    end else begin
        A_V_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd7) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd7) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_7_ce1 = 1'b1;
    end else begin
        A_V_3_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2660)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_7_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_7_d1 = 16'd0;
        end else begin
            A_V_3_7_d1 = 'bx;
        end
    end else begin
        A_V_3_7_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd7) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd7) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_7_we1 = 1'b1;
    end else begin
        A_V_3_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2663)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_8_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_8_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_8_address1 = 'bx;
        end
    end else begin
        A_V_3_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_3_8_ce0 = 1'b1;
    end else begin
        A_V_3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd8) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd8) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_8_ce1 = 1'b1;
    end else begin
        A_V_3_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2663)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_8_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_8_d1 = 16'd0;
        end else begin
            A_V_3_8_d1 = 'bx;
        end
    end else begin
        A_V_3_8_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd8) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd8) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_8_we1 = 1'b1;
    end else begin
        A_V_3_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2666)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_9_address1 = zext_ln180_5_fu_2354_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_9_address1 = zext_ln180_6_fu_2297_p1;
        end else begin
            A_V_3_9_address1 = 'bx;
        end
    end else begin
        A_V_3_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_3_9_ce0 = 1'b1;
    end else begin
        A_V_3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd9) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd9) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_9_ce1 = 1'b1;
    end else begin
        A_V_3_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2666)) begin
        if ((icmp_ln108_reg_3266 == 1'd1)) begin
            A_V_3_9_d1 = trunc_ln68_2_fu_2325_p1;
        end else if ((icmp_ln108_reg_3266 == 1'd0)) begin
            A_V_3_9_d1 = 16'd0;
        end else begin
            A_V_3_9_d1 = 'bx;
        end
    end else begin
        A_V_3_9_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd9) & (icmp_ln108_reg_3266 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2151 == 5'd9) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_3_9_we1 = 1'b1;
    end else begin
        A_V_3_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2669)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_0_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_0_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_0_address1 = 'bx;
        end
    end else begin
        B_V_3_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_0_ce0 = 1'b1;
    end else begin
        B_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd0) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd0) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_0_ce1 = 1'b1;
    end else begin
        B_V_3_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2669)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_0_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_0_d1 = 16'd0;
        end else begin
            B_V_3_0_d1 = 'bx;
        end
    end else begin
        B_V_3_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd0) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd0) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_0_we1 = 1'b1;
    end else begin
        B_V_3_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2672)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_10_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_10_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_10_address1 = 'bx;
        end
    end else begin
        B_V_3_10_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_10_ce0 = 1'b1;
    end else begin
        B_V_3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd10) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd10) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_10_ce1 = 1'b1;
    end else begin
        B_V_3_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2672)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_10_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_10_d1 = 16'd0;
        end else begin
            B_V_3_10_d1 = 'bx;
        end
    end else begin
        B_V_3_10_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd10) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd10) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_10_we1 = 1'b1;
    end else begin
        B_V_3_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2675)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_11_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_11_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_11_address1 = 'bx;
        end
    end else begin
        B_V_3_11_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_3_11_ce0 = 1'b1;
    end else begin
        B_V_3_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd11) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd11) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_11_ce1 = 1'b1;
    end else begin
        B_V_3_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2675)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_11_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_11_d1 = 16'd0;
        end else begin
            B_V_3_11_d1 = 'bx;
        end
    end else begin
        B_V_3_11_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd11) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd11) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_11_we1 = 1'b1;
    end else begin
        B_V_3_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2678)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_12_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_12_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_12_address1 = 'bx;
        end
    end else begin
        B_V_3_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_12_ce0 = 1'b1;
    end else begin
        B_V_3_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd12) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd12) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_12_ce1 = 1'b1;
    end else begin
        B_V_3_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2678)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_12_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_12_d1 = 16'd0;
        end else begin
            B_V_3_12_d1 = 'bx;
        end
    end else begin
        B_V_3_12_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd12) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd12) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_12_we1 = 1'b1;
    end else begin
        B_V_3_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2681)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_13_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_13_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_13_address1 = 'bx;
        end
    end else begin
        B_V_3_13_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_13_ce0 = 1'b1;
    end else begin
        B_V_3_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd13) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd13) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_13_ce1 = 1'b1;
    end else begin
        B_V_3_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2681)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_13_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_13_d1 = 16'd0;
        end else begin
            B_V_3_13_d1 = 'bx;
        end
    end else begin
        B_V_3_13_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd13) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd13) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_13_we1 = 1'b1;
    end else begin
        B_V_3_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2684)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_14_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_14_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_14_address1 = 'bx;
        end
    end else begin
        B_V_3_14_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_3_14_ce0 = 1'b1;
    end else begin
        B_V_3_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd14) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd14) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_14_ce1 = 1'b1;
    end else begin
        B_V_3_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2684)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_14_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_14_d1 = 16'd0;
        end else begin
            B_V_3_14_d1 = 'bx;
        end
    end else begin
        B_V_3_14_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd14) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd14) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_14_we1 = 1'b1;
    end else begin
        B_V_3_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2687)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_15_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_15_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_15_address1 = 'bx;
        end
    end else begin
        B_V_3_15_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_15_ce0 = 1'b1;
    end else begin
        B_V_3_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd15) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd15) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_15_ce1 = 1'b1;
    end else begin
        B_V_3_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2687)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_15_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_15_d1 = 16'd0;
        end else begin
            B_V_3_15_d1 = 'bx;
        end
    end else begin
        B_V_3_15_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd15) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd15) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_15_we1 = 1'b1;
    end else begin
        B_V_3_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2690)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_16_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_16_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_16_address1 = 'bx;
        end
    end else begin
        B_V_3_16_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_16_ce0 = 1'b1;
    end else begin
        B_V_3_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd16) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd16) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_16_ce1 = 1'b1;
    end else begin
        B_V_3_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2690)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_16_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_16_d1 = 16'd0;
        end else begin
            B_V_3_16_d1 = 'bx;
        end
    end else begin
        B_V_3_16_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd16) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd16) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_16_we1 = 1'b1;
    end else begin
        B_V_3_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2693)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_17_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_17_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_17_address1 = 'bx;
        end
    end else begin
        B_V_3_17_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_3_17_ce0 = 1'b1;
    end else begin
        B_V_3_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd17) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd17) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_17_ce1 = 1'b1;
    end else begin
        B_V_3_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2693)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_17_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_17_d1 = 16'd0;
        end else begin
            B_V_3_17_d1 = 'bx;
        end
    end else begin
        B_V_3_17_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd17) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd17) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_17_we1 = 1'b1;
    end else begin
        B_V_3_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2696)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_18_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_18_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_18_address1 = 'bx;
        end
    end else begin
        B_V_3_18_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_3_18_ce0 = 1'b1;
    end else begin
        B_V_3_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd18) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd18) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_18_ce1 = 1'b1;
    end else begin
        B_V_3_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2696)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_18_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_18_d1 = 16'd0;
        end else begin
            B_V_3_18_d1 = 'bx;
        end
    end else begin
        B_V_3_18_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd18) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd18) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_18_we1 = 1'b1;
    end else begin
        B_V_3_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2699)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_19_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_19_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_19_address1 = 'bx;
        end
    end else begin
        B_V_3_19_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_19_ce0 = 1'b1;
    end else begin
        B_V_3_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd19) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd19) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_19_ce1 = 1'b1;
    end else begin
        B_V_3_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2699)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_19_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_19_d1 = 16'd0;
        end else begin
            B_V_3_19_d1 = 'bx;
        end
    end else begin
        B_V_3_19_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd19) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd19) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_19_we1 = 1'b1;
    end else begin
        B_V_3_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2702)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_1_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_1_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_1_address1 = 'bx;
        end
    end else begin
        B_V_3_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_1_ce0 = 1'b1;
    end else begin
        B_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd1) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd1) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_1_ce1 = 1'b1;
    end else begin
        B_V_3_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2702)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_1_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_1_d1 = 16'd0;
        end else begin
            B_V_3_1_d1 = 'bx;
        end
    end else begin
        B_V_3_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd1) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd1) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_1_we1 = 1'b1;
    end else begin
        B_V_3_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2705)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_20_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_20_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_20_address1 = 'bx;
        end
    end else begin
        B_V_3_20_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_3_20_ce0 = 1'b1;
    end else begin
        B_V_3_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd20) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd20) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_20_ce1 = 1'b1;
    end else begin
        B_V_3_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2705)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_20_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_20_d1 = 16'd0;
        end else begin
            B_V_3_20_d1 = 'bx;
        end
    end else begin
        B_V_3_20_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd20) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd20) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_20_we1 = 1'b1;
    end else begin
        B_V_3_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2708)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_21_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_21_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_21_address1 = 'bx;
        end
    end else begin
        B_V_3_21_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_21_ce0 = 1'b1;
    end else begin
        B_V_3_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd21) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd21) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_21_ce1 = 1'b1;
    end else begin
        B_V_3_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2708)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_21_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_21_d1 = 16'd0;
        end else begin
            B_V_3_21_d1 = 'bx;
        end
    end else begin
        B_V_3_21_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd21) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd21) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_21_we1 = 1'b1;
    end else begin
        B_V_3_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2711)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_22_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_22_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_22_address1 = 'bx;
        end
    end else begin
        B_V_3_22_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_3_22_ce0 = 1'b1;
    end else begin
        B_V_3_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd22) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd22) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_22_ce1 = 1'b1;
    end else begin
        B_V_3_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2711)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_22_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_22_d1 = 16'd0;
        end else begin
            B_V_3_22_d1 = 'bx;
        end
    end else begin
        B_V_3_22_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd22) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd22) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_22_we1 = 1'b1;
    end else begin
        B_V_3_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2714)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_23_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_23_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_23_address1 = 'bx;
        end
    end else begin
        B_V_3_23_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_23_ce0 = 1'b1;
    end else begin
        B_V_3_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd23) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd23) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_23_ce1 = 1'b1;
    end else begin
        B_V_3_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2714)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_23_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_23_d1 = 16'd0;
        end else begin
            B_V_3_23_d1 = 'bx;
        end
    end else begin
        B_V_3_23_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd23) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd23) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_23_we1 = 1'b1;
    end else begin
        B_V_3_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_682)) begin
        if ((1'b1 == ap_condition_1811)) begin
            B_V_3_24_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'b1 == ap_condition_1794)) begin
            B_V_3_24_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_24_address1 = 'bx;
        end
    end else begin
        B_V_3_24_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_3_24_ce0 = 1'b1;
    end else begin
        B_V_3_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (((((((((reg_2155 == 5'd30) & (1'd1 == and_ln82_reg_3900)) | ((reg_2155 == 5'd31) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd29) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd28) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd27) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd26) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd25) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd24) & (1'd1 == and_ln82_reg_3900)))) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (((((((((reg_2155 == 5'd30) & (1'd0 == and_ln82_reg_3900)) | ((reg_2155 == 5'd31) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd29) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd28) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd27) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd26) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd25) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd24) & (1'd0 == and_ln82_reg_3900)))))) begin
        B_V_3_24_ce1 = 1'b1;
    end else begin
        B_V_3_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_682)) begin
        if ((1'b1 == ap_condition_1811)) begin
            B_V_3_24_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'b1 == ap_condition_1794)) begin
            B_V_3_24_d1 = 16'd0;
        end else begin
            B_V_3_24_d1 = 'bx;
        end
    end else begin
        B_V_3_24_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (((((((((reg_2155 == 5'd30) & (1'd1 == and_ln82_reg_3900)) | ((reg_2155 == 5'd31) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd29) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd28) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd27) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd26) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd25) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd24) & (1'd1 == and_ln82_reg_3900)))) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (((((((((reg_2155 == 5'd30) & (1'd0 == and_ln82_reg_3900)) | ((reg_2155 == 5'd31) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd29) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd28) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd27) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd26) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd25) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd24) & (1'd0 == and_ln82_reg_3900)))))) begin
        B_V_3_24_we1 = 1'b1;
    end else begin
        B_V_3_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2723)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_2_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_2_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_2_address1 = 'bx;
        end
    end else begin
        B_V_3_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_3_2_ce0 = 1'b1;
    end else begin
        B_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd2) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd2) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_2_ce1 = 1'b1;
    end else begin
        B_V_3_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2723)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_2_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_2_d1 = 16'd0;
        end else begin
            B_V_3_2_d1 = 'bx;
        end
    end else begin
        B_V_3_2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd2) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd2) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_2_we1 = 1'b1;
    end else begin
        B_V_3_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2726)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_3_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_3_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_3_address1 = 'bx;
        end
    end else begin
        B_V_3_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_3_ce0 = 1'b1;
    end else begin
        B_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd3) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd3) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_3_ce1 = 1'b1;
    end else begin
        B_V_3_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2726)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_3_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_3_d1 = 16'd0;
        end else begin
            B_V_3_3_d1 = 'bx;
        end
    end else begin
        B_V_3_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd3) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd3) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_3_we1 = 1'b1;
    end else begin
        B_V_3_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2729)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_4_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_4_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_4_address1 = 'bx;
        end
    end else begin
        B_V_3_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_4_ce0 = 1'b1;
    end else begin
        B_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd4) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd4) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_4_ce1 = 1'b1;
    end else begin
        B_V_3_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2729)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_4_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_4_d1 = 16'd0;
        end else begin
            B_V_3_4_d1 = 'bx;
        end
    end else begin
        B_V_3_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd4) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd4) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_4_we1 = 1'b1;
    end else begin
        B_V_3_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2732)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_5_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_5_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_5_address1 = 'bx;
        end
    end else begin
        B_V_3_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_3_5_ce0 = 1'b1;
    end else begin
        B_V_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd5) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd5) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_5_ce1 = 1'b1;
    end else begin
        B_V_3_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2732)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_5_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_5_d1 = 16'd0;
        end else begin
            B_V_3_5_d1 = 'bx;
        end
    end else begin
        B_V_3_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd5) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd5) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_5_we1 = 1'b1;
    end else begin
        B_V_3_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2735)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_6_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_6_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_6_address1 = 'bx;
        end
    end else begin
        B_V_3_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_3_6_ce0 = 1'b1;
    end else begin
        B_V_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd6) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd6) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_6_ce1 = 1'b1;
    end else begin
        B_V_3_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2735)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_6_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_6_d1 = 16'd0;
        end else begin
            B_V_3_6_d1 = 'bx;
        end
    end else begin
        B_V_3_6_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd6) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd6) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_6_we1 = 1'b1;
    end else begin
        B_V_3_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2738)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_7_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_7_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_7_address1 = 'bx;
        end
    end else begin
        B_V_3_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_3_7_ce0 = 1'b1;
    end else begin
        B_V_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd7) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd7) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_7_ce1 = 1'b1;
    end else begin
        B_V_3_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2738)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_7_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_7_d1 = 16'd0;
        end else begin
            B_V_3_7_d1 = 'bx;
        end
    end else begin
        B_V_3_7_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd7) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd7) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_7_we1 = 1'b1;
    end else begin
        B_V_3_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2741)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_8_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_8_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_8_address1 = 'bx;
        end
    end else begin
        B_V_3_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_3_8_ce0 = 1'b1;
    end else begin
        B_V_3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd8) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd8) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_8_ce1 = 1'b1;
    end else begin
        B_V_3_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2741)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_8_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_8_d1 = 16'd0;
        end else begin
            B_V_3_8_d1 = 'bx;
        end
    end else begin
        B_V_3_8_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd8) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd8) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_8_we1 = 1'b1;
    end else begin
        B_V_3_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2744)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_9_address1 = zext_ln180_fu_2948_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_9_address1 = zext_ln180_4_fu_2880_p1;
        end else begin
            B_V_3_9_address1 = 'bx;
        end
    end else begin
        B_V_3_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_3_9_ce0 = 1'b1;
    end else begin
        B_V_3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd9) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd9) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_9_ce1 = 1'b1;
    end else begin
        B_V_3_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2744)) begin
        if ((1'd1 == and_ln82_reg_3900)) begin
            B_V_3_9_d1 = trunc_ln68_fu_2909_p1;
        end else if ((1'd0 == and_ln82_reg_3900)) begin
            B_V_3_9_d1 = 16'd0;
        end else begin
            B_V_3_9_d1 = 'bx;
        end
    end else begin
        B_V_3_9_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd9) & (1'd0 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2155 == 5'd9) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_3_9_we1 = 1'b1;
    end else begin
        B_V_3_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln149_fu_2211_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln105_fu_2263_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln121_fu_2382_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln78_fu_2791_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_3878 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_i_0_phi_fu_2114_p4 = select_ln78_3_reg_3893;
    end else begin
        ap_phi_mux_i_0_phi_fu_2114_p4 = i_0_reg_2110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln121_reg_3280 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_ib_0_phi_fu_2069_p4 = select_ln127_4_reg_3299;
    end else begin
        ap_phi_mux_ib_0_phi_fu_2069_p4 = ib_0_reg_2065;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln121_reg_3280 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_ic_0_phi_fu_2092_p4 = ic_reg_3369;
    end else begin
        ap_phi_mux_ic_0_phi_fu_2092_p4 = ic_0_reg_2088;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln121_reg_3280_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        ap_phi_mux_p_0300_0_phi_fu_2080_p4 = add_ln700_48_reg_3860;
    end else begin
        ap_phi_mux_p_0300_0_phi_fu_2080_p4 = p_0300_0_reg_2076;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln149_reg_3226 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'd1 == and_ln82_reg_3900) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_stream_a_V_V_blk_n = in_stream_a_V_V_empty_n;
    end else begin
        in_stream_a_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_reg_3226 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_reg_3266 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_stream_a_V_V_read = 1'b1;
    end else begin
        in_stream_a_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp2_stage0) & (icmp_ln124_2_reg_3566_pp2_iter5_reg == 1'd1) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((icmp_ln149_reg_3226 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln82_reg_3900) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_stream_V_V_blk_n = out_stream_V_V_full_n;
    end else begin
        out_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln124_2_reg_3566_pp2_iter5_reg == 1'd1) & (ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0_01001))) begin
        out_stream_V_V_din = tmp_V_101_fu_2767_p1;
    end else if ((((icmp_ln149_reg_3226 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_stream_V_V_din = in_stream_a_V_V_dout;
    end else begin
        out_stream_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln124_2_reg_3566_pp2_iter5_reg == 1'd1) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_reg_3226 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'd1 == and_ln82_reg_3900) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_stream_V_V_write = 1'b1;
    end else begin
        out_stream_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_2159_p2 == 1'd0) & (icmp_ln95_fu_2172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln95_fu_2172_p2 == 1'd0) & (icmp_ln72_fu_2159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_2159_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln149_fu_2211_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln149_fu_2211_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln96_fu_2222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln102_fu_2252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln105_fu_2263_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln105_fu_2263_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln121_fu_2382_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0)) & ~((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((icmp_ln121_fu_2382_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0)) | ((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((icmp_ln78_fu_2791_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((icmp_ln78_fu_2791_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_COL_ITER_fu_2237_p0 = OFMDim_current_1;

assign A_COL_ITER_fu_2237_p1 = OFMDim_current_1;

assign A_COL_ITER_fu_2237_p2 = ($signed(A_COL_ITER_fu_2237_p0) * $signed(A_COL_ITER_fu_2237_p1));

assign A_V_3_0_address0 = zext_ln215_reg_3375;

assign A_V_3_10_address0 = zext_ln215_reg_3375;

assign A_V_3_11_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_12_address0 = zext_ln215_reg_3375;

assign A_V_3_13_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_14_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_15_address0 = zext_ln215_reg_3375;

assign A_V_3_16_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_17_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_18_address0 = zext_ln215_reg_3375;

assign A_V_3_19_address0 = zext_ln215_reg_3375;

assign A_V_3_1_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_20_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_21_address0 = zext_ln215_reg_3375;

assign A_V_3_22_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_23_address0 = zext_ln215_reg_3375;

assign A_V_3_24_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_2_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_3_address0 = zext_ln215_reg_3375;

assign A_V_3_4_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_5_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_6_address0 = zext_ln215_reg_3375;

assign A_V_3_7_address0 = zext_ln215_reg_3375;

assign A_V_3_8_address0 = zext_ln215_fu_2462_p1;

assign A_V_3_9_address0 = zext_ln215_reg_3375;

assign B_V_3_0_address0 = sext_ln215_99_reg_3304;

assign B_V_3_10_address0 = sext_ln215_99_reg_3304;

assign B_V_3_11_address0 = sext_ln215_99_fu_2443_p1;

assign B_V_3_12_address0 = sext_ln215_99_reg_3304;

assign B_V_3_13_address0 = sext_ln215_99_reg_3304;

assign B_V_3_14_address0 = sext_ln215_99_fu_2443_p1;

assign B_V_3_15_address0 = sext_ln215_99_reg_3304;

assign B_V_3_16_address0 = sext_ln215_99_reg_3304;

assign B_V_3_17_address0 = sext_ln215_99_fu_2443_p1;

assign B_V_3_18_address0 = sext_ln215_99_reg_3304_pp2_iter1_reg;

assign B_V_3_19_address0 = sext_ln215_99_reg_3304;

assign B_V_3_1_address0 = sext_ln215_99_reg_3304;

assign B_V_3_20_address0 = sext_ln215_99_fu_2443_p1;

assign B_V_3_21_address0 = sext_ln215_99_reg_3304;

assign B_V_3_22_address0 = sext_ln215_99_fu_2443_p1;

assign B_V_3_23_address0 = sext_ln215_99_reg_3304;

assign B_V_3_24_address0 = sext_ln215_99_fu_2443_p1;

assign B_V_3_2_address0 = sext_ln215_99_fu_2443_p1;

assign B_V_3_3_address0 = sext_ln215_99_reg_3304;

assign B_V_3_4_address0 = sext_ln215_99_reg_3304;

assign B_V_3_5_address0 = sext_ln215_99_fu_2443_p1;

assign B_V_3_6_address0 = sext_ln215_99_reg_3304_pp2_iter1_reg;

assign B_V_3_7_address0 = sext_ln215_99_reg_3304;

assign B_V_3_8_address0 = sext_ln215_99_fu_2443_p1;

assign B_V_3_9_address0 = sext_ln215_99_reg_3304_pp2_iter1_reg;

assign add_ln102_fu_2257_p2 = (iter_0_reg_2032 + 31'd1);

assign add_ln121_fu_2387_p2 = (indvar_flatten6_reg_2054 + 37'd1);

assign add_ln215_fu_2437_p2 = (sext_ln215_99_cast_fu_2425_p3 + zext_ln215_2_fu_2433_p1);

assign add_ln700_28_fu_2651_p2 = ($signed(add_ln700_25_reg_3805) + $signed(add_ln700_27_reg_3810));

assign add_ln700_33_fu_2655_p2 = ($signed(grp_fu_3126_p3) + $signed(grp_fu_3134_p3));

assign add_ln700_34_fu_2659_p2 = (add_ln700_28_fu_2651_p2 + add_ln700_33_fu_2655_p2);

assign add_ln700_39_fu_2665_p2 = ($signed(add_ln700_36_reg_3825) + $signed(add_ln700_38_reg_3830));

assign add_ln700_44_fu_2669_p2 = ($signed(add_ln700_42_reg_3840) + $signed(add_ln700_43_reg_3845));

assign add_ln700_45_fu_2673_p2 = ($signed(grp_fu_3142_p3) + $signed(add_ln700_44_fu_2669_p2));

assign add_ln700_46_fu_2678_p2 = (add_ln700_39_fu_2665_p2 + add_ln700_45_fu_2673_p2);

assign add_ln700_47_fu_2691_p2 = (add_ln700_34_reg_3850 + add_ln700_46_reg_3855);

assign add_ln700_48_fu_2695_p2 = (add_ln700_47_fu_2691_p2 + select_ln127_fu_2684_p3);

assign add_ln78_fu_2797_p2 = (indvar_flatten_reg_2099 + 15'd1);

assign and_ln82_fu_2858_p2 = (select_ln78_4_fu_2841_p3 & icmp_ln82_fu_2853_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln149_reg_3226 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_3226 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln149_reg_3226 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_3226 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln149_reg_3226 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_3226 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln108_reg_3266 == 1'd1) & (in_stream_a_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln108_reg_3266 == 1'd1) & (in_stream_a_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((icmp_ln124_2_reg_3566_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((icmp_ln124_2_reg_3566_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((icmp_ln124_2_reg_3566_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'd1 == and_ln82_reg_3900) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_3900) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'd1 == and_ln82_reg_3900) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_3900) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'd1 == and_ln82_reg_3900) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_3900) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter1 = (((icmp_ln149_reg_3226 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_3226 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0)));
end

assign ap_block_state16_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp1_stage0_iter1 = ((icmp_ln108_reg_3266 == 1'd1) & (in_stream_a_V_V_empty_n == 1'b0));
end

assign ap_block_state19_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

assign ap_block_state20_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_pp2_stage0_iter6 = ((icmp_ln124_2_reg_3566_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0));
end

assign ap_block_state28_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp3_stage0_iter1 = (((1'd1 == and_ln82_reg_3900) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_3900) & (in_stream_a_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_1686 = (((((((((reg_2151 == 5'd30) & (icmp_ln108_reg_3266 == 1'd0)) | ((reg_2151 == 5'd31) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd29) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd28) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd27) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd26) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd25) & (icmp_ln108_reg_3266 == 1'd0))) | ((reg_2151 == 5'd24) & (icmp_ln108_reg_3266 == 1'd0)));
end

always @ (*) begin
    ap_condition_1703 = (((((((((reg_2151 == 5'd30) & (icmp_ln108_reg_3266 == 1'd1)) | ((reg_2151 == 5'd31) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd29) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd28) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd27) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd26) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd25) & (icmp_ln108_reg_3266 == 1'd1))) | ((reg_2151 == 5'd24) & (icmp_ln108_reg_3266 == 1'd1)));
end

always @ (*) begin
    ap_condition_1794 = (((((((((reg_2155 == 5'd30) & (1'd0 == and_ln82_reg_3900)) | ((reg_2155 == 5'd31) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd29) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd28) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd27) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd26) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd25) & (1'd0 == and_ln82_reg_3900))) | ((reg_2155 == 5'd24) & (1'd0 == and_ln82_reg_3900)));
end

always @ (*) begin
    ap_condition_1811 = (((((((((reg_2155 == 5'd30) & (1'd1 == and_ln82_reg_3900)) | ((reg_2155 == 5'd31) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd29) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd28) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd27) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd26) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd25) & (1'd1 == and_ln82_reg_3900))) | ((reg_2155 == 5'd24) & (1'd1 == and_ln82_reg_3900)));
end

always @ (*) begin
    ap_condition_2591 = ((reg_2151 == 5'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2594 = ((reg_2151 == 5'd10) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2597 = ((reg_2151 == 5'd11) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2600 = ((reg_2151 == 5'd12) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2603 = ((reg_2151 == 5'd13) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2606 = ((reg_2151 == 5'd14) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2609 = ((reg_2151 == 5'd15) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2612 = ((reg_2151 == 5'd16) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2615 = ((reg_2151 == 5'd17) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2618 = ((reg_2151 == 5'd18) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2621 = ((reg_2151 == 5'd19) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2624 = ((reg_2151 == 5'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2627 = ((reg_2151 == 5'd20) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2630 = ((reg_2151 == 5'd21) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2633 = ((reg_2151 == 5'd22) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2636 = ((reg_2151 == 5'd23) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2645 = ((reg_2151 == 5'd2) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2648 = ((reg_2151 == 5'd3) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2651 = ((reg_2151 == 5'd4) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2654 = ((reg_2151 == 5'd5) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2657 = ((reg_2151 == 5'd6) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2660 = ((reg_2151 == 5'd7) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2663 = ((reg_2151 == 5'd8) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2666 = ((reg_2151 == 5'd9) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2669 = ((reg_2155 == 5'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2672 = ((reg_2155 == 5'd10) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2675 = ((reg_2155 == 5'd11) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2678 = ((reg_2155 == 5'd12) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2681 = ((reg_2155 == 5'd13) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2684 = ((reg_2155 == 5'd14) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2687 = ((reg_2155 == 5'd15) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2690 = ((reg_2155 == 5'd16) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2693 = ((reg_2155 == 5'd17) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2696 = ((reg_2155 == 5'd18) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2699 = ((reg_2155 == 5'd19) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2702 = ((reg_2155 == 5'd1) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2705 = ((reg_2155 == 5'd20) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2708 = ((reg_2155 == 5'd21) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2711 = ((reg_2155 == 5'd22) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2714 = ((reg_2155 == 5'd23) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2723 = ((reg_2155 == 5'd2) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2726 = ((reg_2155 == 5'd3) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2729 = ((reg_2155 == 5'd4) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2732 = ((reg_2155 == 5'd5) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2735 = ((reg_2155 == 5'd6) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2738 = ((reg_2155 == 5'd7) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2741 = ((reg_2155 == 5'd8) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2744 = ((reg_2155 == 5'd9) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_682 = ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_699 = ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign i_4_fu_2803_p2 = (ap_phi_mux_i_0_phi_fu_2114_p4 + 6'd1);

assign i_fu_2216_p2 = (i3_0_reg_2010 + 32'd1);

assign ib_fu_2393_p2 = (32'd1 + ap_phi_mux_ib_0_phi_fu_2069_p4);

assign ic_fu_2456_p2 = (6'd1 + select_ln127_3_fu_2405_p3);

assign icmp_ln102_fu_2252_p2 = (($signed(zext_ln102_fu_2248_p1) < $signed(A_COL_ITER_reg_3243)) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_2263_p2 = ((j2_0_reg_2043 == 10'd800) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_2283_p2 = ((zext_ln105_fu_2275_p1 < A_ROW_1) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_2382_p2 = ((indvar_flatten6_reg_2054 == tmp_52_reg_3206) ? 1'b1 : 1'b0);

assign icmp_ln124_2_fu_2478_p2 = ((ic_reg_3369 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_2399_p2 = ((ap_phi_mux_ic_0_phi_fu_2092_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_2754_p2 = (($signed(add_ln700_48_reg_3860) < $signed(32'd4294934529)) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_2211_p2 = ((i3_0_reg_2010 == KER_bound_reg_3221) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_2159_p2 = ((tmp_V_reg_3150 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_2791_p2 = ((indvar_flatten_reg_2099 == 15'd25600) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_2809_p2 = ((j_0_reg_2121 == 10'd800) ? 1'b1 : 1'b0);

assign icmp_ln82_2_fu_2786_p2 = ((zext_ln78_fu_2782_p1 < tmp_V_90_reg_3175) ? 1'b1 : 1'b0);

assign icmp_ln82_3_fu_2836_p2 = ((zext_ln78_2_fu_2824_p1 < tmp_V_90_reg_3175) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_2853_p2 = ((zext_ln79_fu_2849_p1 < mul_ln75_2_reg_3873) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_2172_p2 = ((tmp_V_reg_3150 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_2222_p2 = ((num_imag_0_reg_2021 == tmp_V_82_reg_3156) ? 1'b1 : 1'b0);

assign j_2_fu_2269_p2 = (j2_0_reg_2043 + 10'd1);

assign j_fu_2864_p2 = (select_ln78_fu_2815_p3 + 10'd1);

assign mul_ln75_2_fu_2772_p2 = ($signed(mul_ln75_reg_3211) * $signed(tmp_V_84_reg_3161));

assign mul_ln75_fu_2194_p2 = ($signed(tmp_V_84_reg_3161) * $signed(tmp_V_86_reg_3169));

assign num_imag_fu_2227_p2 = (num_imag_0_reg_2021 + 32'd1);

assign output_data_4_fu_2759_p3 = ((icmp_ln131_fu_2754_p2[0:0] === 1'b1) ? 18'd0 : output_data_fu_2746_p3);

assign output_data_fu_2746_p3 = ((tmp_2_fu_2717_p3[0:0] === 1'b1) ? sub_ln1371_2_fu_2727_p2 : zext_ln1371_2_fu_2742_p1);

assign select_ln127_3_fu_2405_p3 = ((icmp_ln124_fu_2399_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_ic_0_phi_fu_2092_p4);

assign select_ln127_4_fu_2413_p3 = ((icmp_ln124_fu_2399_p2[0:0] === 1'b1) ? ib_fu_2393_p2 : ap_phi_mux_ib_0_phi_fu_2069_p4);

assign select_ln127_fu_2684_p3 = ((icmp_ln124_reg_3289_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_p_0300_0_phi_fu_2080_p4);

assign select_ln78_3_fu_2828_p3 = ((icmp_ln79_fu_2809_p2[0:0] === 1'b1) ? i_4_fu_2803_p2 : ap_phi_mux_i_0_phi_fu_2114_p4);

assign select_ln78_4_fu_2841_p3 = ((icmp_ln79_fu_2809_p2[0:0] === 1'b1) ? icmp_ln82_3_fu_2836_p2 : icmp_ln82_2_fu_2786_p2);

assign select_ln78_fu_2815_p3 = ((icmp_ln79_fu_2809_p2[0:0] === 1'b1) ? 10'd0 : j_0_reg_2121);

assign sext_ln215_99_cast_fu_2425_p3 = {{trunc_ln124_fu_2421_p1}, {5'd0}};

assign sext_ln215_99_fu_2443_p1 = $signed(add_ln215_fu_2437_p2);

assign start_out = real_start;

assign sub_ln1371_2_fu_2727_p2 = (18'd0 - zext_ln1371_fu_2724_p1);

assign sub_ln1371_fu_2701_p2 = (32'd0 - add_ln700_48_fu_2695_p2);

assign tmp_2_fu_2717_p3 = add_ln700_48_reg_3860[32'd31];

assign tmp_52_fu_2181_p3 = {{B_COL_1}, {5'd0}};

assign tmp_54_fu_2941_p3 = {{select_ln78_3_reg_3893}, {trunc_ln180_fu_2938_p1}};

assign tmp_56_fu_2873_p3 = {{select_ln78_3_reg_3893}, {trunc_ln180_4_fu_2870_p1}};

assign tmp_60_fu_2733_p4 = {{add_ln700_48_reg_3860[31:15]}};

assign tmp_V_101_fu_2767_p1 = $signed(output_data_4_fu_2759_p3);

assign trunc_ln124_fu_2421_p1 = select_ln127_4_fu_2413_p3[6:0];

assign trunc_ln180_4_fu_2870_p1 = select_ln78_reg_3887[4:0];

assign trunc_ln180_5_fu_2293_p1 = j2_0_reg_2043[4:0];

assign trunc_ln180_6_fu_2289_p1 = j2_0_reg_2043[4:0];

assign trunc_ln180_fu_2938_p1 = select_ln78_reg_3887[4:0];

assign trunc_ln68_2_fu_2325_p1 = in_stream_a_V_V_dout[15:0];

assign trunc_ln68_fu_2909_p1 = in_stream_a_V_V_dout[15:0];

assign zext_ln102_fu_2248_p1 = iter_0_reg_2032;

assign zext_ln105_fu_2275_p1 = j2_0_reg_2043;

assign zext_ln1371_2_fu_2742_p1 = tmp_60_fu_2733_p4;

assign zext_ln1371_fu_2724_p1 = tmp_59_reg_3868;

assign zext_ln180_4_fu_2880_p1 = tmp_56_fu_2873_p3;

assign zext_ln180_5_fu_2354_p1 = trunc_ln180_5_reg_3275;

assign zext_ln180_6_fu_2297_p1 = trunc_ln180_6_reg_3270;

assign zext_ln180_fu_2948_p1 = tmp_54_fu_2941_p3;

assign zext_ln215_2_fu_2433_p1 = select_ln127_3_fu_2405_p3;

assign zext_ln215_fu_2462_p1 = select_ln127_3_reg_3294;

assign zext_ln78_2_fu_2824_p1 = i_4_fu_2803_p2;

assign zext_ln78_fu_2782_p1 = ap_phi_mux_i_0_phi_fu_2114_p4;

assign zext_ln79_fu_2849_p1 = select_ln78_fu_2815_p3;

always @ (posedge ap_clk) begin
    tmp_52_reg_3206[4:0] <= 5'b00000;
    zext_ln215_reg_3375[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //SMM_1u_800u_32u_s
