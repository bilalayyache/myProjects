// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SMM_1u_800u_64u_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_stream_a_V_V_dout,
        in_stream_a_V_V_empty_n,
        in_stream_a_V_V_read,
        out_stream_V_V_din,
        out_stream_V_V_full_n,
        out_stream_V_V_write
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_pp0_stage0 = 21'd1024;
parameter    ap_ST_fsm_state13 = 21'd2048;
parameter    ap_ST_fsm_state14 = 21'd4096;
parameter    ap_ST_fsm_state15 = 21'd8192;
parameter    ap_ST_fsm_pp1_stage0 = 21'd16384;
parameter    ap_ST_fsm_state18 = 21'd32768;
parameter    ap_ST_fsm_pp2_stage0 = 21'd65536;
parameter    ap_ST_fsm_state26 = 21'd131072;
parameter    ap_ST_fsm_state27 = 21'd262144;
parameter    ap_ST_fsm_pp3_stage0 = 21'd524288;
parameter    ap_ST_fsm_state30 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] in_stream_a_V_V_dout;
input   in_stream_a_V_V_empty_n;
output   in_stream_a_V_V_read;
output  [31:0] out_stream_V_V_din;
input   out_stream_V_V_full_n;
output   out_stream_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_stream_a_V_V_read;
reg[31:0] out_stream_V_V_din;
reg out_stream_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] B_COL;
reg   [31:0] B_ROW;
reg   [31:0] OFMDim_current;
reg   [31:0] A_ROW;
wire   [4:0] A_V_4_0_address0;
reg    A_V_4_0_ce0;
wire  signed [15:0] A_V_4_0_q0;
reg   [4:0] A_V_4_0_address1;
reg    A_V_4_0_ce1;
reg    A_V_4_0_we1;
reg   [15:0] A_V_4_0_d1;
wire   [10:0] B_V_4_0_address0;
reg    B_V_4_0_ce0;
wire   [15:0] B_V_4_0_q0;
reg   [10:0] B_V_4_0_address1;
reg    B_V_4_0_ce1;
reg    B_V_4_0_we1;
reg   [15:0] B_V_4_0_d1;
wire   [4:0] A_V_4_1_address0;
reg    A_V_4_1_ce0;
wire   [15:0] A_V_4_1_q0;
reg   [4:0] A_V_4_1_address1;
reg    A_V_4_1_ce1;
reg    A_V_4_1_we1;
reg   [15:0] A_V_4_1_d1;
wire   [10:0] B_V_4_1_address0;
reg    B_V_4_1_ce0;
wire   [15:0] B_V_4_1_q0;
reg   [10:0] B_V_4_1_address1;
reg    B_V_4_1_ce1;
reg    B_V_4_1_we1;
reg   [15:0] B_V_4_1_d1;
wire   [4:0] A_V_4_2_address0;
reg    A_V_4_2_ce0;
wire  signed [15:0] A_V_4_2_q0;
reg   [4:0] A_V_4_2_address1;
reg    A_V_4_2_ce1;
reg    A_V_4_2_we1;
reg   [15:0] A_V_4_2_d1;
wire   [10:0] B_V_4_2_address0;
reg    B_V_4_2_ce0;
wire   [15:0] B_V_4_2_q0;
reg   [10:0] B_V_4_2_address1;
reg    B_V_4_2_ce1;
reg    B_V_4_2_we1;
reg   [15:0] B_V_4_2_d1;
wire   [4:0] A_V_4_3_address0;
reg    A_V_4_3_ce0;
wire  signed [15:0] A_V_4_3_q0;
reg   [4:0] A_V_4_3_address1;
reg    A_V_4_3_ce1;
reg    A_V_4_3_we1;
reg   [15:0] A_V_4_3_d1;
wire   [10:0] B_V_4_3_address0;
reg    B_V_4_3_ce0;
wire   [15:0] B_V_4_3_q0;
reg   [10:0] B_V_4_3_address1;
reg    B_V_4_3_ce1;
reg    B_V_4_3_we1;
reg   [15:0] B_V_4_3_d1;
wire   [4:0] A_V_4_4_address0;
reg    A_V_4_4_ce0;
wire   [15:0] A_V_4_4_q0;
reg   [4:0] A_V_4_4_address1;
reg    A_V_4_4_ce1;
reg    A_V_4_4_we1;
reg   [15:0] A_V_4_4_d1;
wire   [10:0] B_V_4_4_address0;
reg    B_V_4_4_ce0;
wire   [15:0] B_V_4_4_q0;
reg   [10:0] B_V_4_4_address1;
reg    B_V_4_4_ce1;
reg    B_V_4_4_we1;
reg   [15:0] B_V_4_4_d1;
wire   [4:0] A_V_4_5_address0;
reg    A_V_4_5_ce0;
wire  signed [15:0] A_V_4_5_q0;
reg   [4:0] A_V_4_5_address1;
reg    A_V_4_5_ce1;
reg    A_V_4_5_we1;
reg   [15:0] A_V_4_5_d1;
wire   [10:0] B_V_4_5_address0;
reg    B_V_4_5_ce0;
wire   [15:0] B_V_4_5_q0;
reg   [10:0] B_V_4_5_address1;
reg    B_V_4_5_ce1;
reg    B_V_4_5_we1;
reg   [15:0] B_V_4_5_d1;
wire   [4:0] A_V_4_6_address0;
reg    A_V_4_6_ce0;
wire   [15:0] A_V_4_6_q0;
reg   [4:0] A_V_4_6_address1;
reg    A_V_4_6_ce1;
reg    A_V_4_6_we1;
reg   [15:0] A_V_4_6_d1;
wire   [10:0] B_V_4_6_address0;
reg    B_V_4_6_ce0;
wire   [15:0] B_V_4_6_q0;
reg   [10:0] B_V_4_6_address1;
reg    B_V_4_6_ce1;
reg    B_V_4_6_we1;
reg   [15:0] B_V_4_6_d1;
wire   [4:0] A_V_4_7_address0;
reg    A_V_4_7_ce0;
wire  signed [15:0] A_V_4_7_q0;
reg   [4:0] A_V_4_7_address1;
reg    A_V_4_7_ce1;
reg    A_V_4_7_we1;
reg   [15:0] A_V_4_7_d1;
wire   [10:0] B_V_4_7_address0;
reg    B_V_4_7_ce0;
wire   [15:0] B_V_4_7_q0;
reg   [10:0] B_V_4_7_address1;
reg    B_V_4_7_ce1;
reg    B_V_4_7_we1;
reg   [15:0] B_V_4_7_d1;
wire   [4:0] A_V_4_8_address0;
reg    A_V_4_8_ce0;
wire  signed [15:0] A_V_4_8_q0;
reg   [4:0] A_V_4_8_address1;
reg    A_V_4_8_ce1;
reg    A_V_4_8_we1;
reg   [15:0] A_V_4_8_d1;
wire   [10:0] B_V_4_8_address0;
reg    B_V_4_8_ce0;
wire   [15:0] B_V_4_8_q0;
reg   [10:0] B_V_4_8_address1;
reg    B_V_4_8_ce1;
reg    B_V_4_8_we1;
reg   [15:0] B_V_4_8_d1;
wire   [4:0] A_V_4_9_address0;
reg    A_V_4_9_ce0;
wire   [15:0] A_V_4_9_q0;
reg   [4:0] A_V_4_9_address1;
reg    A_V_4_9_ce1;
reg    A_V_4_9_we1;
reg   [15:0] A_V_4_9_d1;
wire   [10:0] B_V_4_9_address0;
reg    B_V_4_9_ce0;
wire   [15:0] B_V_4_9_q0;
reg   [10:0] B_V_4_9_address1;
reg    B_V_4_9_ce1;
reg    B_V_4_9_we1;
reg   [15:0] B_V_4_9_d1;
wire   [4:0] A_V_4_10_address0;
reg    A_V_4_10_ce0;
wire  signed [15:0] A_V_4_10_q0;
reg   [4:0] A_V_4_10_address1;
reg    A_V_4_10_ce1;
reg    A_V_4_10_we1;
reg   [15:0] A_V_4_10_d1;
wire   [10:0] B_V_4_10_address0;
reg    B_V_4_10_ce0;
wire   [15:0] B_V_4_10_q0;
reg   [10:0] B_V_4_10_address1;
reg    B_V_4_10_ce1;
reg    B_V_4_10_we1;
reg   [15:0] B_V_4_10_d1;
wire   [4:0] A_V_4_11_address0;
reg    A_V_4_11_ce0;
wire  signed [15:0] A_V_4_11_q0;
reg   [4:0] A_V_4_11_address1;
reg    A_V_4_11_ce1;
reg    A_V_4_11_we1;
reg   [15:0] A_V_4_11_d1;
wire   [10:0] B_V_4_11_address0;
reg    B_V_4_11_ce0;
wire   [15:0] B_V_4_11_q0;
reg   [10:0] B_V_4_11_address1;
reg    B_V_4_11_ce1;
reg    B_V_4_11_we1;
reg   [15:0] B_V_4_11_d1;
wire   [4:0] A_V_4_12_address0;
reg    A_V_4_12_ce0;
wire  signed [15:0] A_V_4_12_q0;
reg   [4:0] A_V_4_12_address1;
reg    A_V_4_12_ce1;
reg    A_V_4_12_we1;
reg   [15:0] A_V_4_12_d1;
wire   [10:0] B_V_4_12_address0;
reg    B_V_4_12_ce0;
wire   [15:0] B_V_4_12_q0;
reg   [10:0] B_V_4_12_address1;
reg    B_V_4_12_ce1;
reg    B_V_4_12_we1;
reg   [15:0] B_V_4_12_d1;
wire   [4:0] A_V_4_13_address0;
reg    A_V_4_13_ce0;
wire   [15:0] A_V_4_13_q0;
reg   [4:0] A_V_4_13_address1;
reg    A_V_4_13_ce1;
reg    A_V_4_13_we1;
reg   [15:0] A_V_4_13_d1;
wire   [10:0] B_V_4_13_address0;
reg    B_V_4_13_ce0;
wire   [15:0] B_V_4_13_q0;
reg   [10:0] B_V_4_13_address1;
reg    B_V_4_13_ce1;
reg    B_V_4_13_we1;
reg   [15:0] B_V_4_13_d1;
wire   [4:0] A_V_4_14_address0;
reg    A_V_4_14_ce0;
wire  signed [15:0] A_V_4_14_q0;
reg   [4:0] A_V_4_14_address1;
reg    A_V_4_14_ce1;
reg    A_V_4_14_we1;
reg   [15:0] A_V_4_14_d1;
wire   [10:0] B_V_4_14_address0;
reg    B_V_4_14_ce0;
wire   [15:0] B_V_4_14_q0;
reg   [10:0] B_V_4_14_address1;
reg    B_V_4_14_ce1;
reg    B_V_4_14_we1;
reg   [15:0] B_V_4_14_d1;
wire   [4:0] A_V_4_15_address0;
reg    A_V_4_15_ce0;
wire  signed [15:0] A_V_4_15_q0;
reg   [4:0] A_V_4_15_address1;
reg    A_V_4_15_ce1;
reg    A_V_4_15_we1;
reg   [15:0] A_V_4_15_d1;
wire   [10:0] B_V_4_15_address0;
reg    B_V_4_15_ce0;
wire   [15:0] B_V_4_15_q0;
reg   [10:0] B_V_4_15_address1;
reg    B_V_4_15_ce1;
reg    B_V_4_15_we1;
reg   [15:0] B_V_4_15_d1;
wire   [4:0] A_V_4_16_address0;
reg    A_V_4_16_ce0;
wire   [15:0] A_V_4_16_q0;
reg   [4:0] A_V_4_16_address1;
reg    A_V_4_16_ce1;
reg    A_V_4_16_we1;
reg   [15:0] A_V_4_16_d1;
wire   [10:0] B_V_4_16_address0;
reg    B_V_4_16_ce0;
wire   [15:0] B_V_4_16_q0;
reg   [10:0] B_V_4_16_address1;
reg    B_V_4_16_ce1;
reg    B_V_4_16_we1;
reg   [15:0] B_V_4_16_d1;
wire   [4:0] A_V_4_17_address0;
reg    A_V_4_17_ce0;
wire  signed [15:0] A_V_4_17_q0;
reg   [4:0] A_V_4_17_address1;
reg    A_V_4_17_ce1;
reg    A_V_4_17_we1;
reg   [15:0] A_V_4_17_d1;
wire   [10:0] B_V_4_17_address0;
reg    B_V_4_17_ce0;
wire   [15:0] B_V_4_17_q0;
reg   [10:0] B_V_4_17_address1;
reg    B_V_4_17_ce1;
reg    B_V_4_17_we1;
reg   [15:0] B_V_4_17_d1;
wire   [4:0] A_V_4_18_address0;
reg    A_V_4_18_ce0;
wire   [15:0] A_V_4_18_q0;
reg   [4:0] A_V_4_18_address1;
reg    A_V_4_18_ce1;
reg    A_V_4_18_we1;
reg   [15:0] A_V_4_18_d1;
wire   [10:0] B_V_4_18_address0;
reg    B_V_4_18_ce0;
wire   [15:0] B_V_4_18_q0;
reg   [10:0] B_V_4_18_address1;
reg    B_V_4_18_ce1;
reg    B_V_4_18_we1;
reg   [15:0] B_V_4_18_d1;
wire   [4:0] A_V_4_19_address0;
reg    A_V_4_19_ce0;
wire  signed [15:0] A_V_4_19_q0;
reg   [4:0] A_V_4_19_address1;
reg    A_V_4_19_ce1;
reg    A_V_4_19_we1;
reg   [15:0] A_V_4_19_d1;
wire   [10:0] B_V_4_19_address0;
reg    B_V_4_19_ce0;
wire   [15:0] B_V_4_19_q0;
reg   [10:0] B_V_4_19_address1;
reg    B_V_4_19_ce1;
reg    B_V_4_19_we1;
reg   [15:0] B_V_4_19_d1;
wire   [4:0] A_V_4_20_address0;
reg    A_V_4_20_ce0;
wire  signed [15:0] A_V_4_20_q0;
reg   [4:0] A_V_4_20_address1;
reg    A_V_4_20_ce1;
reg    A_V_4_20_we1;
reg   [15:0] A_V_4_20_d1;
wire   [10:0] B_V_4_20_address0;
reg    B_V_4_20_ce0;
wire   [15:0] B_V_4_20_q0;
reg   [10:0] B_V_4_20_address1;
reg    B_V_4_20_ce1;
reg    B_V_4_20_we1;
reg   [15:0] B_V_4_20_d1;
wire   [4:0] A_V_4_21_address0;
reg    A_V_4_21_ce0;
wire  signed [15:0] A_V_4_21_q0;
reg   [4:0] A_V_4_21_address1;
reg    A_V_4_21_ce1;
reg    A_V_4_21_we1;
reg   [15:0] A_V_4_21_d1;
wire   [10:0] B_V_4_21_address0;
reg    B_V_4_21_ce0;
wire   [15:0] B_V_4_21_q0;
reg   [10:0] B_V_4_21_address1;
reg    B_V_4_21_ce1;
reg    B_V_4_21_we1;
reg   [15:0] B_V_4_21_d1;
wire   [4:0] A_V_4_22_address0;
reg    A_V_4_22_ce0;
wire  signed [15:0] A_V_4_22_q0;
reg   [4:0] A_V_4_22_address1;
reg    A_V_4_22_ce1;
reg    A_V_4_22_we1;
reg   [15:0] A_V_4_22_d1;
wire   [10:0] B_V_4_22_address0;
reg    B_V_4_22_ce0;
wire   [15:0] B_V_4_22_q0;
reg   [10:0] B_V_4_22_address1;
reg    B_V_4_22_ce1;
reg    B_V_4_22_we1;
reg   [15:0] B_V_4_22_d1;
wire   [4:0] A_V_4_23_address0;
reg    A_V_4_23_ce0;
wire  signed [15:0] A_V_4_23_q0;
reg   [4:0] A_V_4_23_address1;
reg    A_V_4_23_ce1;
reg    A_V_4_23_we1;
reg   [15:0] A_V_4_23_d1;
wire   [10:0] B_V_4_23_address0;
reg    B_V_4_23_ce0;
wire   [15:0] B_V_4_23_q0;
reg   [10:0] B_V_4_23_address1;
reg    B_V_4_23_ce1;
reg    B_V_4_23_we1;
reg   [15:0] B_V_4_23_d1;
wire   [4:0] A_V_4_24_address0;
reg    A_V_4_24_ce0;
wire  signed [15:0] A_V_4_24_q0;
reg   [4:0] A_V_4_24_address1;
reg    A_V_4_24_ce1;
reg    A_V_4_24_we1;
reg   [15:0] A_V_4_24_d1;
wire   [10:0] B_V_4_24_address0;
reg    B_V_4_24_ce0;
wire   [15:0] B_V_4_24_q0;
reg   [10:0] B_V_4_24_address1;
reg    B_V_4_24_ce1;
reg    B_V_4_24_we1;
reg   [15:0] B_V_4_24_d1;
reg    in_stream_a_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] and_ln82_reg_3904;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln108_reg_3270;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln149_reg_3230;
reg    out_stream_V_V_blk_n;
reg    ap_enable_reg_pp2_iter6;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln124_1_reg_3570;
reg   [0:0] icmp_ln124_1_reg_3570_pp2_iter5_reg;
reg   [31:0] i3_0_reg_2014;
reg   [9:0] j2_0_reg_2047;
reg   [36:0] indvar_flatten6_reg_2058;
reg   [31:0] ib_0_reg_2069;
reg   [31:0] p_0300_0_reg_2080;
reg   [5:0] ic_0_reg_2092;
reg   [15:0] indvar_flatten_reg_2103;
reg   [6:0] i_0_reg_2114;
reg   [9:0] j_0_reg_2125;
reg   [4:0] reg_2155;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state16_pp1_stage0_iter0;
reg    ap_block_state17_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln105_fu_2267_p2;
wire   [0:0] icmp_ln108_fu_2287_p2;
reg   [4:0] reg_2159;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state28_pp3_stage0_iter0;
reg    ap_block_state29_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln78_fu_2795_p2;
wire   [0:0] and_ln82_fu_2862_p2;
reg   [31:0] tmp_V_reg_3154;
reg    ap_block_state1;
reg   [31:0] tmp_V_60_reg_3160;
reg    ap_block_state2;
reg  signed [31:0] tmp_V_62_reg_3165;
reg    ap_block_state3;
reg  signed [31:0] tmp_V_64_reg_3173;
reg    ap_block_state4;
reg  signed [31:0] tmp_V_68_reg_3179;
reg    ap_block_state6;
reg   [31:0] tmp_V_70_reg_3187;
reg    ap_block_state7;
wire   [0:0] icmp_ln72_fu_2163_p2;
reg    ap_block_state8;
reg   [31:0] B_ROW_load_reg_3196;
wire   [0:0] icmp_ln95_fu_2176_p2;
wire  signed [31:0] KER_size_0_fu_2181_p2;
reg  signed [31:0] KER_size_0_reg_3205;
wire   [36:0] tmp_43_fu_2185_p3;
reg   [36:0] tmp_43_reg_3210;
wire  signed [31:0] mul_ln75_fu_2198_p2;
reg  signed [31:0] mul_ln75_reg_3215;
wire  signed [31:0] KER_size_1_fu_2207_p2;
reg  signed [31:0] KER_size_1_reg_3220;
wire    ap_CS_fsm_state9;
wire   [31:0] KER_bound_fu_2211_p2;
reg   [31:0] KER_bound_reg_3225;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln149_fu_2215_p2;
wire    ap_block_state11_pp0_stage0_iter0;
reg    ap_block_state12_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] i_fu_2220_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] num_imag_fu_2231_p2;
reg   [31:0] num_imag_reg_3242;
wire    ap_CS_fsm_state14;
wire   [31:0] A_COL_ITER_fu_2241_p2;
reg   [31:0] A_COL_ITER_reg_3247;
wire   [0:0] icmp_ln96_fu_2226_p2;
wire   [0:0] icmp_ln102_fu_2256_p2;
wire    ap_CS_fsm_state15;
wire   [30:0] add_ln102_fu_2261_p2;
reg   [30:0] add_ln102_reg_3256;
wire   [9:0] j_1_fu_2273_p2;
wire   [4:0] trunc_ln180_3_fu_2293_p1;
reg   [4:0] trunc_ln180_3_reg_3274;
wire   [4:0] trunc_ln180_2_fu_2297_p1;
reg   [4:0] trunc_ln180_2_reg_3279;
wire   [0:0] icmp_ln121_fu_2386_p2;
reg   [0:0] icmp_ln121_reg_3284;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state19_pp2_stage0_iter0;
wire    ap_block_state20_pp2_stage0_iter1;
wire    ap_block_state21_pp2_stage0_iter2;
wire    ap_block_state22_pp2_stage0_iter3;
wire    ap_block_state23_pp2_stage0_iter4;
wire    ap_block_state24_pp2_stage0_iter5;
reg    ap_block_state25_pp2_stage0_iter6;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln121_reg_3284_pp2_iter1_reg;
reg   [0:0] icmp_ln121_reg_3284_pp2_iter2_reg;
reg   [0:0] icmp_ln121_reg_3284_pp2_iter3_reg;
reg   [0:0] icmp_ln121_reg_3284_pp2_iter4_reg;
reg   [0:0] icmp_ln121_reg_3284_pp2_iter5_reg;
wire   [36:0] add_ln121_fu_2391_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln124_fu_2403_p2;
reg   [0:0] icmp_ln124_reg_3293;
reg   [0:0] icmp_ln124_reg_3293_pp2_iter1_reg;
reg   [0:0] icmp_ln124_reg_3293_pp2_iter2_reg;
reg   [0:0] icmp_ln124_reg_3293_pp2_iter3_reg;
reg   [0:0] icmp_ln124_reg_3293_pp2_iter4_reg;
wire   [5:0] select_ln127_1_fu_2409_p3;
reg   [5:0] select_ln127_1_reg_3298;
wire   [31:0] select_ln127_2_fu_2417_p3;
reg   [31:0] select_ln127_2_reg_3303;
wire  signed [63:0] sext_ln215_50_fu_2447_p1;
reg  signed [63:0] sext_ln215_50_reg_3308;
reg  signed [63:0] sext_ln215_50_reg_3308_pp2_iter1_reg;
wire   [5:0] ic_fu_2460_p2;
reg   [5:0] ic_reg_3373;
wire   [63:0] zext_ln215_fu_2466_p1;
reg   [63:0] zext_ln215_reg_3379;
reg  signed [15:0] B_V_4_2_load_reg_3525;
reg    ap_enable_reg_pp2_iter1;
reg  signed [15:0] B_V_4_5_load_reg_3530;
reg  signed [15:0] B_V_4_8_load_reg_3535;
reg  signed [15:0] B_V_4_11_load_reg_3540;
reg  signed [15:0] B_V_4_14_load_reg_3545;
reg  signed [15:0] B_V_4_17_load_reg_3550;
reg  signed [15:0] B_V_4_20_load_reg_3555;
reg  signed [15:0] B_V_4_22_load_reg_3560;
reg  signed [15:0] B_V_4_24_load_reg_3565;
wire   [0:0] icmp_ln124_1_fu_2482_p2;
reg   [0:0] icmp_ln124_1_reg_3570_pp2_iter2_reg;
reg   [0:0] icmp_ln124_1_reg_3570_pp2_iter3_reg;
reg   [0:0] icmp_ln124_1_reg_3570_pp2_iter4_reg;
reg  signed [15:0] B_V_4_0_load_reg_3649;
reg    ap_enable_reg_pp2_iter2;
reg  signed [15:0] A_V_4_1_load_reg_3654;
reg  signed [15:0] B_V_4_1_load_reg_3659;
wire  signed [31:0] mul_ln1352_2_fu_2981_p2;
reg  signed [31:0] mul_ln1352_2_reg_3664;
reg  signed [15:0] B_V_4_3_load_reg_3669;
reg  signed [15:0] A_V_4_4_load_reg_3674;
reg  signed [15:0] B_V_4_4_load_reg_3679;
wire  signed [31:0] mul_ln1352_5_fu_2987_p2;
reg  signed [31:0] mul_ln1352_5_reg_3684;
reg  signed [15:0] B_V_4_7_load_reg_3689;
wire  signed [31:0] mul_ln1352_8_fu_2993_p2;
reg  signed [31:0] mul_ln1352_8_reg_3694;
reg  signed [15:0] B_V_4_10_load_reg_3699;
wire  signed [31:0] mul_ln1352_11_fu_2999_p2;
reg  signed [31:0] mul_ln1352_11_reg_3704;
reg  signed [15:0] B_V_4_12_load_reg_3709;
reg  signed [15:0] A_V_4_13_load_reg_3714;
reg  signed [15:0] B_V_4_13_load_reg_3719;
wire  signed [31:0] mul_ln1352_14_fu_3005_p2;
reg  signed [31:0] mul_ln1352_14_reg_3724;
reg  signed [15:0] B_V_4_15_load_reg_3729;
reg  signed [15:0] A_V_4_16_load_reg_3734;
reg  signed [15:0] B_V_4_16_load_reg_3739;
wire  signed [31:0] mul_ln1352_17_fu_3011_p2;
reg  signed [31:0] mul_ln1352_17_reg_3744;
reg  signed [15:0] B_V_4_19_load_reg_3749;
wire  signed [31:0] mul_ln1352_20_fu_3017_p2;
reg  signed [31:0] mul_ln1352_20_reg_3754;
reg  signed [15:0] B_V_4_21_load_reg_3759;
wire  signed [31:0] mul_ln1352_22_fu_3023_p2;
reg  signed [31:0] mul_ln1352_22_reg_3764;
reg  signed [15:0] B_V_4_23_load_reg_3769;
wire  signed [31:0] mul_ln1352_24_fu_3029_p2;
reg  signed [31:0] mul_ln1352_24_reg_3774;
reg  signed [15:0] A_V_4_6_load_reg_3779;
reg    ap_enable_reg_pp2_iter3;
reg  signed [15:0] B_V_4_6_load_reg_3784;
reg  signed [15:0] A_V_4_9_load_reg_3789;
reg  signed [15:0] B_V_4_9_load_reg_3794;
reg  signed [15:0] A_V_4_18_load_reg_3799;
reg  signed [15:0] B_V_4_18_load_reg_3804;
wire  signed [31:0] grp_fu_3035_p3;
reg  signed [31:0] add_ln700_1_reg_3809;
wire  signed [31:0] grp_fu_3050_p3;
reg  signed [31:0] add_ln700_3_reg_3814;
wire  signed [31:0] grp_fu_3065_p3;
reg  signed [31:0] add_ln700_5_reg_3819;
wire  signed [31:0] grp_fu_3072_p3;
reg  signed [31:0] add_ln700_7_reg_3824;
wire  signed [31:0] grp_fu_3079_p3;
reg  signed [31:0] add_ln700_12_reg_3829;
wire  signed [31:0] grp_fu_3094_p3;
reg  signed [31:0] add_ln700_14_reg_3834;
wire  signed [31:0] grp_fu_3109_p3;
reg  signed [31:0] add_ln700_16_reg_3839;
wire  signed [31:0] grp_fu_3116_p3;
reg  signed [31:0] add_ln700_18_reg_3844;
wire  signed [31:0] grp_fu_3123_p3;
reg  signed [31:0] add_ln700_19_reg_3849;
wire   [31:0] add_ln700_10_fu_2663_p2;
reg   [31:0] add_ln700_10_reg_3854;
wire   [31:0] add_ln700_22_fu_2682_p2;
reg   [31:0] add_ln700_22_reg_3859;
wire   [31:0] add_ln700_24_fu_2699_p2;
reg   [31:0] add_ln700_24_reg_3864;
reg    ap_enable_reg_pp2_iter5;
reg   [16:0] tmp_50_reg_3872;
wire   [31:0] mul_ln75_1_fu_2776_p2;
reg   [31:0] mul_ln75_1_reg_3877;
wire    ap_CS_fsm_state27;
reg   [0:0] icmp_ln78_reg_3882;
wire   [15:0] add_ln78_fu_2801_p2;
wire   [9:0] select_ln78_fu_2819_p3;
reg   [9:0] select_ln78_reg_3891;
wire   [6:0] select_ln78_1_fu_2832_p3;
reg   [6:0] select_ln78_1_reg_3897;
wire   [9:0] j_fu_2868_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state16;
wire    ap_CS_fsm_state18;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state19;
reg    ap_enable_reg_pp2_iter4;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state28;
reg   [31:0] num_imag_0_reg_2025;
reg   [30:0] iter_0_reg_2036;
wire    ap_CS_fsm_state26;
reg   [31:0] ap_phi_mux_ib_0_phi_fu_2073_p4;
reg   [31:0] ap_phi_mux_p_0300_0_phi_fu_2084_p4;
reg   [5:0] ap_phi_mux_ic_0_phi_fu_2096_p4;
reg   [6:0] ap_phi_mux_i_0_phi_fu_2118_p4;
wire   [63:0] zext_ln180_3_fu_2301_p1;
wire   [63:0] zext_ln180_2_fu_2358_p1;
wire   [63:0] zext_ln180_1_fu_2884_p1;
wire   [63:0] zext_ln180_fu_2952_p1;
reg    ap_block_state5;
reg    ap_block_pp0_stage0_01001;
wire  signed [31:0] tmp_V_79_fu_2771_p1;
reg    ap_block_pp2_stage0_01001;
reg    ap_block_pp3_stage0_01001;
wire   [15:0] trunc_ln68_1_fu_2329_p1;
wire   [15:0] trunc_ln68_fu_2913_p1;
wire  signed [31:0] A_COL_ITER_fu_2241_p0;
wire  signed [31:0] A_COL_ITER_fu_2241_p1;
wire   [31:0] zext_ln102_fu_2252_p1;
wire   [31:0] zext_ln105_fu_2279_p1;
wire   [31:0] ib_fu_2397_p2;
wire   [7:0] trunc_ln124_fu_2425_p1;
wire   [12:0] sext_ln215_50_cast_fu_2429_p3;
wire   [12:0] zext_ln215_1_fu_2437_p1;
wire   [12:0] add_ln215_fu_2441_p2;
wire  signed [31:0] grp_fu_3130_p3;
wire  signed [31:0] grp_fu_3138_p3;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_4_fu_2655_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_9_fu_2659_p2;
wire  signed [31:0] grp_fu_3146_p3;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_20_fu_2673_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_15_fu_2669_p2;
(* use_dsp48 = "no" *) wire   [31:0] add_ln700_21_fu_2677_p2;
wire   [31:0] add_ln700_23_fu_2695_p2;
wire   [31:0] select_ln127_fu_2688_p3;
wire   [31:0] sub_ln1371_fu_2705_p2;
wire   [17:0] zext_ln1371_fu_2728_p1;
wire   [16:0] tmp_51_fu_2737_p4;
wire   [0:0] tmp_1_fu_2721_p3;
wire   [17:0] sub_ln1371_1_fu_2731_p2;
wire   [17:0] zext_ln1371_1_fu_2746_p1;
wire   [0:0] icmp_ln131_fu_2758_p2;
wire   [17:0] output_data_fu_2750_p3;
wire   [17:0] output_data_2_fu_2763_p3;
wire   [31:0] zext_ln78_fu_2786_p1;
wire   [0:0] icmp_ln79_fu_2813_p2;
wire   [6:0] i_2_fu_2807_p2;
wire   [31:0] zext_ln78_1_fu_2828_p1;
wire   [0:0] icmp_ln82_2_fu_2840_p2;
wire   [0:0] icmp_ln82_1_fu_2790_p2;
wire   [31:0] zext_ln79_fu_2853_p1;
wire   [0:0] icmp_ln82_fu_2857_p2;
wire   [0:0] select_ln78_2_fu_2845_p3;
wire   [4:0] trunc_ln180_1_fu_2874_p1;
wire   [11:0] tmp_47_fu_2877_p3;
wire   [4:0] trunc_ln180_fu_2942_p1;
wire   [11:0] tmp_45_fu_2945_p3;
wire  signed [31:0] grp_fu_3042_p3;
wire  signed [31:0] grp_fu_3057_p3;
wire  signed [31:0] grp_fu_3086_p3;
wire  signed [31:0] grp_fu_3101_p3;
wire    ap_CS_fsm_state13;
reg   [20:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_condition_2592;
reg    ap_condition_2595;
reg    ap_condition_2598;
reg    ap_condition_2601;
reg    ap_condition_2604;
reg    ap_condition_2607;
reg    ap_condition_2610;
reg    ap_condition_2613;
reg    ap_condition_2616;
reg    ap_condition_2619;
reg    ap_condition_2622;
reg    ap_condition_2625;
reg    ap_condition_2628;
reg    ap_condition_2631;
reg    ap_condition_2634;
reg    ap_condition_2637;
reg    ap_condition_1686;
reg    ap_condition_1703;
reg    ap_condition_699;
reg    ap_condition_2646;
reg    ap_condition_2649;
reg    ap_condition_2652;
reg    ap_condition_2655;
reg    ap_condition_2658;
reg    ap_condition_2661;
reg    ap_condition_2664;
reg    ap_condition_2667;
reg    ap_condition_2670;
reg    ap_condition_2673;
reg    ap_condition_2676;
reg    ap_condition_2679;
reg    ap_condition_2682;
reg    ap_condition_2685;
reg    ap_condition_2688;
reg    ap_condition_2691;
reg    ap_condition_2694;
reg    ap_condition_2697;
reg    ap_condition_2700;
reg    ap_condition_2703;
reg    ap_condition_2706;
reg    ap_condition_2709;
reg    ap_condition_2712;
reg    ap_condition_2715;
reg    ap_condition_1794;
reg    ap_condition_1811;
reg    ap_condition_682;
reg    ap_condition_2724;
reg    ap_condition_2727;
reg    ap_condition_2730;
reg    ap_condition_2733;
reg    ap_condition_2736;
reg    ap_condition_2739;
reg    ap_condition_2742;
reg    ap_condition_2745;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 21'd1;
#0 B_COL = 32'd64;
#0 B_ROW = 32'd800;
#0 OFMDim_current = 32'd0;
#0 A_ROW = 32'd800;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
end

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_0_address0),
    .ce0(A_V_4_0_ce0),
    .q0(A_V_4_0_q0),
    .address1(A_V_4_0_address1),
    .ce1(A_V_4_0_ce1),
    .we1(A_V_4_0_we1),
    .d1(A_V_4_0_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_0_address0),
    .ce0(B_V_4_0_ce0),
    .q0(B_V_4_0_q0),
    .address1(B_V_4_0_address1),
    .ce1(B_V_4_0_ce1),
    .we1(B_V_4_0_we1),
    .d1(B_V_4_0_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_1_address0),
    .ce0(A_V_4_1_ce0),
    .q0(A_V_4_1_q0),
    .address1(A_V_4_1_address1),
    .ce1(A_V_4_1_ce1),
    .we1(A_V_4_1_we1),
    .d1(A_V_4_1_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_1_address0),
    .ce0(B_V_4_1_ce0),
    .q0(B_V_4_1_q0),
    .address1(B_V_4_1_address1),
    .ce1(B_V_4_1_ce1),
    .we1(B_V_4_1_we1),
    .d1(B_V_4_1_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_2_address0),
    .ce0(A_V_4_2_ce0),
    .q0(A_V_4_2_q0),
    .address1(A_V_4_2_address1),
    .ce1(A_V_4_2_ce1),
    .we1(A_V_4_2_we1),
    .d1(A_V_4_2_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_2_address0),
    .ce0(B_V_4_2_ce0),
    .q0(B_V_4_2_q0),
    .address1(B_V_4_2_address1),
    .ce1(B_V_4_2_ce1),
    .we1(B_V_4_2_we1),
    .d1(B_V_4_2_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_3_address0),
    .ce0(A_V_4_3_ce0),
    .q0(A_V_4_3_q0),
    .address1(A_V_4_3_address1),
    .ce1(A_V_4_3_ce1),
    .we1(A_V_4_3_we1),
    .d1(A_V_4_3_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_3_address0),
    .ce0(B_V_4_3_ce0),
    .q0(B_V_4_3_q0),
    .address1(B_V_4_3_address1),
    .ce1(B_V_4_3_ce1),
    .we1(B_V_4_3_we1),
    .d1(B_V_4_3_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_4_address0),
    .ce0(A_V_4_4_ce0),
    .q0(A_V_4_4_q0),
    .address1(A_V_4_4_address1),
    .ce1(A_V_4_4_ce1),
    .we1(A_V_4_4_we1),
    .d1(A_V_4_4_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_4_address0),
    .ce0(B_V_4_4_ce0),
    .q0(B_V_4_4_q0),
    .address1(B_V_4_4_address1),
    .ce1(B_V_4_4_ce1),
    .we1(B_V_4_4_we1),
    .d1(B_V_4_4_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_5_address0),
    .ce0(A_V_4_5_ce0),
    .q0(A_V_4_5_q0),
    .address1(A_V_4_5_address1),
    .ce1(A_V_4_5_ce1),
    .we1(A_V_4_5_we1),
    .d1(A_V_4_5_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_5_address0),
    .ce0(B_V_4_5_ce0),
    .q0(B_V_4_5_q0),
    .address1(B_V_4_5_address1),
    .ce1(B_V_4_5_ce1),
    .we1(B_V_4_5_we1),
    .d1(B_V_4_5_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_6_address0),
    .ce0(A_V_4_6_ce0),
    .q0(A_V_4_6_q0),
    .address1(A_V_4_6_address1),
    .ce1(A_V_4_6_ce1),
    .we1(A_V_4_6_we1),
    .d1(A_V_4_6_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_6_address0),
    .ce0(B_V_4_6_ce0),
    .q0(B_V_4_6_q0),
    .address1(B_V_4_6_address1),
    .ce1(B_V_4_6_ce1),
    .we1(B_V_4_6_we1),
    .d1(B_V_4_6_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_7_address0),
    .ce0(A_V_4_7_ce0),
    .q0(A_V_4_7_q0),
    .address1(A_V_4_7_address1),
    .ce1(A_V_4_7_ce1),
    .we1(A_V_4_7_we1),
    .d1(A_V_4_7_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_7_address0),
    .ce0(B_V_4_7_ce0),
    .q0(B_V_4_7_q0),
    .address1(B_V_4_7_address1),
    .ce1(B_V_4_7_ce1),
    .we1(B_V_4_7_we1),
    .d1(B_V_4_7_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_8_address0),
    .ce0(A_V_4_8_ce0),
    .q0(A_V_4_8_q0),
    .address1(A_V_4_8_address1),
    .ce1(A_V_4_8_ce1),
    .we1(A_V_4_8_we1),
    .d1(A_V_4_8_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_8_address0),
    .ce0(B_V_4_8_ce0),
    .q0(B_V_4_8_q0),
    .address1(B_V_4_8_address1),
    .ce1(B_V_4_8_ce1),
    .we1(B_V_4_8_we1),
    .d1(B_V_4_8_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_9_address0),
    .ce0(A_V_4_9_ce0),
    .q0(A_V_4_9_q0),
    .address1(A_V_4_9_address1),
    .ce1(A_V_4_9_ce1),
    .we1(A_V_4_9_we1),
    .d1(A_V_4_9_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_9_address0),
    .ce0(B_V_4_9_ce0),
    .q0(B_V_4_9_q0),
    .address1(B_V_4_9_address1),
    .ce1(B_V_4_9_ce1),
    .we1(B_V_4_9_we1),
    .d1(B_V_4_9_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_10_address0),
    .ce0(A_V_4_10_ce0),
    .q0(A_V_4_10_q0),
    .address1(A_V_4_10_address1),
    .ce1(A_V_4_10_ce1),
    .we1(A_V_4_10_we1),
    .d1(A_V_4_10_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_10_address0),
    .ce0(B_V_4_10_ce0),
    .q0(B_V_4_10_q0),
    .address1(B_V_4_10_address1),
    .ce1(B_V_4_10_ce1),
    .we1(B_V_4_10_we1),
    .d1(B_V_4_10_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_11_address0),
    .ce0(A_V_4_11_ce0),
    .q0(A_V_4_11_q0),
    .address1(A_V_4_11_address1),
    .ce1(A_V_4_11_ce1),
    .we1(A_V_4_11_we1),
    .d1(A_V_4_11_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_11_address0),
    .ce0(B_V_4_11_ce0),
    .q0(B_V_4_11_q0),
    .address1(B_V_4_11_address1),
    .ce1(B_V_4_11_ce1),
    .we1(B_V_4_11_we1),
    .d1(B_V_4_11_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_12_address0),
    .ce0(A_V_4_12_ce0),
    .q0(A_V_4_12_q0),
    .address1(A_V_4_12_address1),
    .ce1(A_V_4_12_ce1),
    .we1(A_V_4_12_we1),
    .d1(A_V_4_12_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_12_address0),
    .ce0(B_V_4_12_ce0),
    .q0(B_V_4_12_q0),
    .address1(B_V_4_12_address1),
    .ce1(B_V_4_12_ce1),
    .we1(B_V_4_12_we1),
    .d1(B_V_4_12_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_13_address0),
    .ce0(A_V_4_13_ce0),
    .q0(A_V_4_13_q0),
    .address1(A_V_4_13_address1),
    .ce1(A_V_4_13_ce1),
    .we1(A_V_4_13_we1),
    .d1(A_V_4_13_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_13_address0),
    .ce0(B_V_4_13_ce0),
    .q0(B_V_4_13_q0),
    .address1(B_V_4_13_address1),
    .ce1(B_V_4_13_ce1),
    .we1(B_V_4_13_we1),
    .d1(B_V_4_13_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_14_address0),
    .ce0(A_V_4_14_ce0),
    .q0(A_V_4_14_q0),
    .address1(A_V_4_14_address1),
    .ce1(A_V_4_14_ce1),
    .we1(A_V_4_14_we1),
    .d1(A_V_4_14_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_14_address0),
    .ce0(B_V_4_14_ce0),
    .q0(B_V_4_14_q0),
    .address1(B_V_4_14_address1),
    .ce1(B_V_4_14_ce1),
    .we1(B_V_4_14_we1),
    .d1(B_V_4_14_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_15_address0),
    .ce0(A_V_4_15_ce0),
    .q0(A_V_4_15_q0),
    .address1(A_V_4_15_address1),
    .ce1(A_V_4_15_ce1),
    .we1(A_V_4_15_we1),
    .d1(A_V_4_15_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_15_address0),
    .ce0(B_V_4_15_ce0),
    .q0(B_V_4_15_q0),
    .address1(B_V_4_15_address1),
    .ce1(B_V_4_15_ce1),
    .we1(B_V_4_15_we1),
    .d1(B_V_4_15_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_16_address0),
    .ce0(A_V_4_16_ce0),
    .q0(A_V_4_16_q0),
    .address1(A_V_4_16_address1),
    .ce1(A_V_4_16_ce1),
    .we1(A_V_4_16_we1),
    .d1(A_V_4_16_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_16_address0),
    .ce0(B_V_4_16_ce0),
    .q0(B_V_4_16_q0),
    .address1(B_V_4_16_address1),
    .ce1(B_V_4_16_ce1),
    .we1(B_V_4_16_we1),
    .d1(B_V_4_16_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_17_address0),
    .ce0(A_V_4_17_ce0),
    .q0(A_V_4_17_q0),
    .address1(A_V_4_17_address1),
    .ce1(A_V_4_17_ce1),
    .we1(A_V_4_17_we1),
    .d1(A_V_4_17_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_17_address0),
    .ce0(B_V_4_17_ce0),
    .q0(B_V_4_17_q0),
    .address1(B_V_4_17_address1),
    .ce1(B_V_4_17_ce1),
    .we1(B_V_4_17_we1),
    .d1(B_V_4_17_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_18_address0),
    .ce0(A_V_4_18_ce0),
    .q0(A_V_4_18_q0),
    .address1(A_V_4_18_address1),
    .ce1(A_V_4_18_ce1),
    .we1(A_V_4_18_we1),
    .d1(A_V_4_18_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_18_address0),
    .ce0(B_V_4_18_ce0),
    .q0(B_V_4_18_q0),
    .address1(B_V_4_18_address1),
    .ce1(B_V_4_18_ce1),
    .we1(B_V_4_18_we1),
    .d1(B_V_4_18_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_19_address0),
    .ce0(A_V_4_19_ce0),
    .q0(A_V_4_19_q0),
    .address1(A_V_4_19_address1),
    .ce1(A_V_4_19_ce1),
    .we1(A_V_4_19_we1),
    .d1(A_V_4_19_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_19_address0),
    .ce0(B_V_4_19_ce0),
    .q0(B_V_4_19_q0),
    .address1(B_V_4_19_address1),
    .ce1(B_V_4_19_ce1),
    .we1(B_V_4_19_we1),
    .d1(B_V_4_19_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_20_address0),
    .ce0(A_V_4_20_ce0),
    .q0(A_V_4_20_q0),
    .address1(A_V_4_20_address1),
    .ce1(A_V_4_20_ce1),
    .we1(A_V_4_20_we1),
    .d1(A_V_4_20_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_20_address0),
    .ce0(B_V_4_20_ce0),
    .q0(B_V_4_20_q0),
    .address1(B_V_4_20_address1),
    .ce1(B_V_4_20_ce1),
    .we1(B_V_4_20_we1),
    .d1(B_V_4_20_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_21_address0),
    .ce0(A_V_4_21_ce0),
    .q0(A_V_4_21_q0),
    .address1(A_V_4_21_address1),
    .ce1(A_V_4_21_ce1),
    .we1(A_V_4_21_we1),
    .d1(A_V_4_21_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_21_address0),
    .ce0(B_V_4_21_ce0),
    .q0(B_V_4_21_q0),
    .address1(B_V_4_21_address1),
    .ce1(B_V_4_21_ce1),
    .we1(B_V_4_21_we1),
    .d1(B_V_4_21_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_22_address0),
    .ce0(A_V_4_22_ce0),
    .q0(A_V_4_22_q0),
    .address1(A_V_4_22_address1),
    .ce1(A_V_4_22_ce1),
    .we1(A_V_4_22_we1),
    .d1(A_V_4_22_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_22_address0),
    .ce0(B_V_4_22_ce0),
    .q0(B_V_4_22_q0),
    .address1(B_V_4_22_address1),
    .ce1(B_V_4_22_ce1),
    .we1(B_V_4_22_we1),
    .d1(B_V_4_22_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_23_address0),
    .ce0(A_V_4_23_ce0),
    .q0(A_V_4_23_q0),
    .address1(A_V_4_23_address1),
    .ce1(A_V_4_23_ce1),
    .we1(A_V_4_23_we1),
    .d1(A_V_4_23_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_23_address0),
    .ce0(B_V_4_23_ce0),
    .q0(B_V_4_23_q0),
    .address1(B_V_4_23_address1),
    .ce1(B_V_4_23_ce1),
    .we1(B_V_4_23_we1),
    .d1(B_V_4_23_d1)
);

SMM_1u_800u_32u_s7jG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
A_V_4_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_4_24_address0),
    .ce0(A_V_4_24_ce0),
    .q0(A_V_4_24_q0),
    .address1(A_V_4_24_address1),
    .ce1(A_V_4_24_ce1),
    .we1(A_V_4_24_we1),
    .d1(A_V_4_24_d1)
);

SMM_1u_800u_64u_sbZs #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
B_V_4_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_4_24_address0),
    .ce0(B_V_4_24_ce0),
    .q0(B_V_4_24_q0),
    .address1(B_V_4_24_address1),
    .ce1(B_V_4_24_ce1),
    .we1(B_V_4_24_we1),
    .d1(B_V_4_24_d1)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U116(
    .din0(tmp_V_68_reg_3179),
    .din1(tmp_V_62_reg_3165),
    .dout(KER_size_0_fu_2181_p2)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U117(
    .din0(tmp_V_62_reg_3165),
    .din1(KER_size_0_reg_3205),
    .dout(KER_size_1_fu_2207_p2)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U118(
    .din0(tmp_V_64_reg_3173),
    .din1(KER_size_1_reg_3220),
    .dout(KER_bound_fu_2211_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U119(
    .din0(A_V_4_2_q0),
    .din1(B_V_4_2_load_reg_3525),
    .dout(mul_ln1352_2_fu_2981_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U120(
    .din0(A_V_4_5_q0),
    .din1(B_V_4_5_load_reg_3530),
    .dout(mul_ln1352_5_fu_2987_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U121(
    .din0(A_V_4_8_q0),
    .din1(B_V_4_8_load_reg_3535),
    .dout(mul_ln1352_8_fu_2993_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U122(
    .din0(A_V_4_11_q0),
    .din1(B_V_4_11_load_reg_3540),
    .dout(mul_ln1352_11_fu_2999_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U123(
    .din0(A_V_4_14_q0),
    .din1(B_V_4_14_load_reg_3545),
    .dout(mul_ln1352_14_fu_3005_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U124(
    .din0(A_V_4_17_q0),
    .din1(B_V_4_17_load_reg_3550),
    .dout(mul_ln1352_17_fu_3011_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U125(
    .din0(A_V_4_20_q0),
    .din1(B_V_4_20_load_reg_3555),
    .dout(mul_ln1352_20_fu_3017_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U126(
    .din0(A_V_4_22_q0),
    .din1(B_V_4_22_load_reg_3560),
    .dout(mul_ln1352_22_fu_3023_p2)
);

cifar_10_mul_mul_2iS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_mul_2iS_U127(
    .din0(A_V_4_24_q0),
    .din1(B_V_4_24_load_reg_3565),
    .dout(mul_ln1352_24_fu_3029_p2)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U128(
    .din0(A_V_4_0_q0),
    .din1(B_V_4_0_load_reg_3649),
    .din2(grp_fu_3042_p3),
    .dout(grp_fu_3035_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U129(
    .din0(A_V_4_1_load_reg_3654),
    .din1(B_V_4_1_load_reg_3659),
    .din2(mul_ln1352_2_reg_3664),
    .dout(grp_fu_3042_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U130(
    .din0(A_V_4_3_q0),
    .din1(B_V_4_3_load_reg_3669),
    .din2(grp_fu_3057_p3),
    .dout(grp_fu_3050_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U131(
    .din0(A_V_4_4_load_reg_3674),
    .din1(B_V_4_4_load_reg_3679),
    .din2(mul_ln1352_5_reg_3684),
    .dout(grp_fu_3057_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U132(
    .din0(A_V_4_7_q0),
    .din1(B_V_4_7_load_reg_3689),
    .din2(mul_ln1352_8_reg_3694),
    .dout(grp_fu_3065_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U133(
    .din0(A_V_4_10_q0),
    .din1(B_V_4_10_load_reg_3699),
    .din2(mul_ln1352_11_reg_3704),
    .dout(grp_fu_3072_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U134(
    .din0(A_V_4_12_q0),
    .din1(B_V_4_12_load_reg_3709),
    .din2(grp_fu_3086_p3),
    .dout(grp_fu_3079_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U135(
    .din0(A_V_4_13_load_reg_3714),
    .din1(B_V_4_13_load_reg_3719),
    .din2(mul_ln1352_14_reg_3724),
    .dout(grp_fu_3086_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U136(
    .din0(A_V_4_15_q0),
    .din1(B_V_4_15_load_reg_3729),
    .din2(grp_fu_3101_p3),
    .dout(grp_fu_3094_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U137(
    .din0(A_V_4_16_load_reg_3734),
    .din1(B_V_4_16_load_reg_3739),
    .din2(mul_ln1352_17_reg_3744),
    .dout(grp_fu_3101_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U138(
    .din0(A_V_4_19_q0),
    .din1(B_V_4_19_load_reg_3749),
    .din2(mul_ln1352_20_reg_3754),
    .dout(grp_fu_3109_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U139(
    .din0(A_V_4_21_q0),
    .din1(B_V_4_21_load_reg_3759),
    .din2(mul_ln1352_22_reg_3764),
    .dout(grp_fu_3116_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U140(
    .din0(A_V_4_23_q0),
    .din1(B_V_4_23_load_reg_3769),
    .din2(mul_ln1352_24_reg_3774),
    .dout(grp_fu_3123_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U141(
    .din0(A_V_4_6_load_reg_3779),
    .din1(B_V_4_6_load_reg_3784),
    .din2(add_ln700_5_reg_3819),
    .dout(grp_fu_3130_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U142(
    .din0(A_V_4_9_load_reg_3789),
    .din1(B_V_4_9_load_reg_3794),
    .din2(add_ln700_7_reg_3824),
    .dout(grp_fu_3138_p3)
);

cifar_10_mac_mula3i2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mac_mula3i2_U143(
    .din0(A_V_4_18_load_reg_3799),
    .din1(B_V_4_18_load_reg_3804),
    .din2(add_ln700_16_reg_3839),
    .dout(grp_fu_3146_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state16) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln102_fu_2256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state16) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state16);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln102_fu_2256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state19) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state19)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp2_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state28) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state28) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state28);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_fu_2215_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i3_0_reg_2014 <= i_fu_2220_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i3_0_reg_2014 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_reg_3882 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_0_reg_2114 <= select_ln78_1_reg_3897;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        i_0_reg_2114 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3284 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ib_0_reg_2069 <= select_ln127_2_reg_3303;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        ib_0_reg_2069 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3284 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ic_0_reg_2092 <= ic_reg_3373;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        ic_0_reg_2092 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_fu_2386_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten6_reg_2058 <= add_ln121_fu_2391_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten6_reg_2058 <= 37'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2795_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten_reg_2103 <= add_ln78_fu_2801_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten_reg_2103 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        iter_0_reg_2036 <= add_ln102_reg_3256;
    end else if (((icmp_ln96_fu_2226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        iter_0_reg_2036 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_2256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        j2_0_reg_2047 <= 10'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_2267_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j2_0_reg_2047 <= j_1_fu_2273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2795_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_0_reg_2125 <= j_fu_2868_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        j_0_reg_2125 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_2256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        num_imag_0_reg_2025 <= num_imag_reg_3242;
    end else if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_2163_p2 == 1'd0) & (icmp_ln95_fu_2176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        num_imag_0_reg_2025 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3284_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        p_0300_0_reg_2080 <= add_ln700_24_reg_3864;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        p_0300_0_reg_2080 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_2226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        A_COL_ITER_reg_3247 <= A_COL_ITER_fu_2241_p2;
        A_ROW <= B_ROW_load_reg_3196;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3284_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_13_load_reg_3714 <= A_V_4_13_q0;
        A_V_4_16_load_reg_3734 <= A_V_4_16_q0;
        A_V_4_1_load_reg_3654 <= A_V_4_1_q0;
        A_V_4_4_load_reg_3674 <= A_V_4_4_q0;
        B_V_4_0_load_reg_3649 <= B_V_4_0_q0;
        B_V_4_10_load_reg_3699 <= B_V_4_10_q0;
        B_V_4_12_load_reg_3709 <= B_V_4_12_q0;
        B_V_4_13_load_reg_3719 <= B_V_4_13_q0;
        B_V_4_15_load_reg_3729 <= B_V_4_15_q0;
        B_V_4_16_load_reg_3739 <= B_V_4_16_q0;
        B_V_4_19_load_reg_3749 <= B_V_4_19_q0;
        B_V_4_1_load_reg_3659 <= B_V_4_1_q0;
        B_V_4_21_load_reg_3759 <= B_V_4_21_q0;
        B_V_4_23_load_reg_3769 <= B_V_4_23_q0;
        B_V_4_3_load_reg_3669 <= B_V_4_3_q0;
        B_V_4_4_load_reg_3679 <= B_V_4_4_q0;
        B_V_4_7_load_reg_3689 <= B_V_4_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3284_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        A_V_4_18_load_reg_3799 <= A_V_4_18_q0;
        A_V_4_6_load_reg_3779 <= A_V_4_6_q0;
        A_V_4_9_load_reg_3789 <= A_V_4_9_q0;
        B_V_4_18_load_reg_3804 <= B_V_4_18_q0;
        B_V_4_6_load_reg_3784 <= B_V_4_6_q0;
        B_V_4_9_load_reg_3794 <= B_V_4_9_q0;
        add_ln700_12_reg_3829 <= grp_fu_3079_p3;
        add_ln700_14_reg_3834 <= grp_fu_3094_p3;
        add_ln700_16_reg_3839 <= grp_fu_3109_p3;
        add_ln700_18_reg_3844 <= grp_fu_3116_p3;
        add_ln700_19_reg_3849 <= grp_fu_3123_p3;
        add_ln700_1_reg_3809 <= grp_fu_3035_p3;
        add_ln700_3_reg_3814 <= grp_fu_3050_p3;
        add_ln700_5_reg_3819 <= grp_fu_3065_p3;
        add_ln700_7_reg_3824 <= grp_fu_3072_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_2163_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        B_COL <= tmp_V_68_reg_3179;
        OFMDim_current <= tmp_V_70_reg_3187;
        mul_ln75_reg_3215 <= mul_ln75_fu_2198_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        B_ROW <= mul_ln75_1_fu_2776_p2;
        mul_ln75_1_reg_3877 <= mul_ln75_1_fu_2776_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        B_ROW_load_reg_3196 <= B_ROW;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3284 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_11_load_reg_3540 <= B_V_4_11_q0;
        B_V_4_14_load_reg_3545 <= B_V_4_14_q0;
        B_V_4_17_load_reg_3550 <= B_V_4_17_q0;
        B_V_4_20_load_reg_3555 <= B_V_4_20_q0;
        B_V_4_22_load_reg_3560 <= B_V_4_22_q0;
        B_V_4_24_load_reg_3565 <= B_V_4_24_q0;
        B_V_4_2_load_reg_3525 <= B_V_4_2_q0;
        B_V_4_5_load_reg_3530 <= B_V_4_5_q0;
        B_V_4_8_load_reg_3535 <= B_V_4_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        KER_bound_reg_3225 <= KER_bound_fu_2211_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln95_fu_2176_p2 == 1'd0) & (icmp_ln72_fu_2163_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        KER_size_0_reg_3205 <= KER_size_0_fu_2181_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        KER_size_1_reg_3220 <= KER_size_1_fu_2207_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln102_reg_3256 <= add_ln102_fu_2261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3284_pp2_iter3_reg == 1'd0))) begin
        add_ln700_10_reg_3854 <= add_ln700_10_fu_2663_p2;
        add_ln700_22_reg_3859 <= add_ln700_22_fu_2682_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3284_pp2_iter4_reg == 1'd0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        add_ln700_24_reg_3864 <= add_ln700_24_fu_2699_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2795_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        and_ln82_reg_3904 <= and_ln82_fu_2862_p2;
        select_ln78_reg_3891 <= select_ln78_fu_2819_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_fu_2386_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ic_reg_3373 <= ic_fu_2460_p2;
        select_ln127_2_reg_3303 <= select_ln127_2_fu_2417_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_2267_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln108_reg_3270 <= icmp_ln108_fu_2287_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln121_reg_3284 <= icmp_ln121_fu_2386_p2;
        icmp_ln121_reg_3284_pp2_iter1_reg <= icmp_ln121_reg_3284;
        icmp_ln124_reg_3293_pp2_iter1_reg <= icmp_ln124_reg_3293;
        sext_ln215_50_reg_3308_pp2_iter1_reg <= sext_ln215_50_reg_3308;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln121_reg_3284_pp2_iter2_reg <= icmp_ln121_reg_3284_pp2_iter1_reg;
        icmp_ln121_reg_3284_pp2_iter3_reg <= icmp_ln121_reg_3284_pp2_iter2_reg;
        icmp_ln121_reg_3284_pp2_iter4_reg <= icmp_ln121_reg_3284_pp2_iter3_reg;
        icmp_ln121_reg_3284_pp2_iter5_reg <= icmp_ln121_reg_3284_pp2_iter4_reg;
        icmp_ln124_1_reg_3570_pp2_iter2_reg <= icmp_ln124_1_reg_3570;
        icmp_ln124_1_reg_3570_pp2_iter3_reg <= icmp_ln124_1_reg_3570_pp2_iter2_reg;
        icmp_ln124_1_reg_3570_pp2_iter4_reg <= icmp_ln124_1_reg_3570_pp2_iter3_reg;
        icmp_ln124_1_reg_3570_pp2_iter5_reg <= icmp_ln124_1_reg_3570_pp2_iter4_reg;
        icmp_ln124_reg_3293_pp2_iter2_reg <= icmp_ln124_reg_3293_pp2_iter1_reg;
        icmp_ln124_reg_3293_pp2_iter3_reg <= icmp_ln124_reg_3293_pp2_iter2_reg;
        icmp_ln124_reg_3293_pp2_iter4_reg <= icmp_ln124_reg_3293_pp2_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3284 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln124_1_reg_3570 <= icmp_ln124_1_fu_2482_p2;
        zext_ln215_reg_3379[5 : 0] <= zext_ln215_fu_2466_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_fu_2386_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln124_reg_3293 <= icmp_ln124_fu_2403_p2;
        select_ln127_1_reg_3298 <= select_ln127_1_fu_2409_p3;
        sext_ln215_50_reg_3308 <= sext_ln215_50_fu_2447_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln149_reg_3230 <= icmp_ln149_fu_2215_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln78_reg_3882 <= icmp_ln78_fu_2795_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln121_reg_3284_pp2_iter1_reg == 1'd0))) begin
        mul_ln1352_11_reg_3704 <= mul_ln1352_11_fu_2999_p2;
        mul_ln1352_14_reg_3724 <= mul_ln1352_14_fu_3005_p2;
        mul_ln1352_17_reg_3744 <= mul_ln1352_17_fu_3011_p2;
        mul_ln1352_20_reg_3754 <= mul_ln1352_20_fu_3017_p2;
        mul_ln1352_22_reg_3764 <= mul_ln1352_22_fu_3023_p2;
        mul_ln1352_24_reg_3774 <= mul_ln1352_24_fu_3029_p2;
        mul_ln1352_2_reg_3664 <= mul_ln1352_2_fu_2981_p2;
        mul_ln1352_5_reg_3684 <= mul_ln1352_5_fu_2987_p2;
        mul_ln1352_8_reg_3694 <= mul_ln1352_8_fu_2993_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        num_imag_reg_3242 <= num_imag_fu_2231_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_2267_p2 == 1'd0) & (icmp_ln108_fu_2287_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_fu_2287_p2 == 1'd0) & (icmp_ln105_fu_2267_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        reg_2155 <= {{j2_0_reg_2047[9:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2795_p2 == 1'd0) & (1'd1 == and_ln82_fu_2862_p2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'd0 == and_ln82_fu_2862_p2) & (icmp_ln78_fu_2795_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        reg_2159 <= {{select_ln78_fu_2819_p3[9:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln78_fu_2795_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln78_1_reg_3897 <= select_ln78_1_fu_2832_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_2163_p2 == 1'd0) & (icmp_ln95_fu_2176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_43_reg_3210[36 : 5] <= tmp_43_fu_2185_p3[36 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln124_1_reg_3570_pp2_iter4_reg == 1'd1))) begin
        tmp_50_reg_3872 <= {{sub_ln1371_fu_2705_p2[31:15]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_60_reg_3160 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_62_reg_3165 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_64_reg_3173 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_68_reg_3179 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_V_70_reg_3187 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_V_reg_3154 <= in_stream_a_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln105_fu_2267_p2 == 1'd0) & (icmp_ln108_fu_2287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln180_2_reg_3279 <= trunc_ln180_2_fu_2297_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_fu_2287_p2 == 1'd0) & (icmp_ln105_fu_2267_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln180_3_reg_3274 <= trunc_ln180_3_fu_2293_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2592)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_0_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_0_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_0_address1 = 'bx;
        end
    end else begin
        A_V_4_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_0_ce0 = 1'b1;
    end else begin
        A_V_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd0) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd0) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_0_ce1 = 1'b1;
    end else begin
        A_V_4_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2592)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_0_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_0_d1 = 16'd0;
        end else begin
            A_V_4_0_d1 = 'bx;
        end
    end else begin
        A_V_4_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd0) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd0) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_0_we1 = 1'b1;
    end else begin
        A_V_4_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2595)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_10_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_10_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_10_address1 = 'bx;
        end
    end else begin
        A_V_4_10_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_10_ce0 = 1'b1;
    end else begin
        A_V_4_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd10) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd10) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_10_ce1 = 1'b1;
    end else begin
        A_V_4_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2595)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_10_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_10_d1 = 16'd0;
        end else begin
            A_V_4_10_d1 = 'bx;
        end
    end else begin
        A_V_4_10_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd10) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd10) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_10_we1 = 1'b1;
    end else begin
        A_V_4_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2598)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_11_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_11_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_11_address1 = 'bx;
        end
    end else begin
        A_V_4_11_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_11_ce0 = 1'b1;
    end else begin
        A_V_4_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd11) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd11) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_11_ce1 = 1'b1;
    end else begin
        A_V_4_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2598)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_11_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_11_d1 = 16'd0;
        end else begin
            A_V_4_11_d1 = 'bx;
        end
    end else begin
        A_V_4_11_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd11) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd11) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_11_we1 = 1'b1;
    end else begin
        A_V_4_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2601)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_12_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_12_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_12_address1 = 'bx;
        end
    end else begin
        A_V_4_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_12_ce0 = 1'b1;
    end else begin
        A_V_4_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd12) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd12) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_12_ce1 = 1'b1;
    end else begin
        A_V_4_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2601)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_12_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_12_d1 = 16'd0;
        end else begin
            A_V_4_12_d1 = 'bx;
        end
    end else begin
        A_V_4_12_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd12) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd12) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_12_we1 = 1'b1;
    end else begin
        A_V_4_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2604)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_13_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_13_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_13_address1 = 'bx;
        end
    end else begin
        A_V_4_13_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_13_ce0 = 1'b1;
    end else begin
        A_V_4_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd13) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd13) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_13_ce1 = 1'b1;
    end else begin
        A_V_4_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2604)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_13_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_13_d1 = 16'd0;
        end else begin
            A_V_4_13_d1 = 'bx;
        end
    end else begin
        A_V_4_13_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd13) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd13) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_13_we1 = 1'b1;
    end else begin
        A_V_4_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2607)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_14_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_14_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_14_address1 = 'bx;
        end
    end else begin
        A_V_4_14_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_14_ce0 = 1'b1;
    end else begin
        A_V_4_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd14) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd14) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_14_ce1 = 1'b1;
    end else begin
        A_V_4_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2607)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_14_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_14_d1 = 16'd0;
        end else begin
            A_V_4_14_d1 = 'bx;
        end
    end else begin
        A_V_4_14_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd14) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd14) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_14_we1 = 1'b1;
    end else begin
        A_V_4_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2610)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_15_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_15_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_15_address1 = 'bx;
        end
    end else begin
        A_V_4_15_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_15_ce0 = 1'b1;
    end else begin
        A_V_4_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd15) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd15) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_15_ce1 = 1'b1;
    end else begin
        A_V_4_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2610)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_15_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_15_d1 = 16'd0;
        end else begin
            A_V_4_15_d1 = 'bx;
        end
    end else begin
        A_V_4_15_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd15) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd15) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_15_we1 = 1'b1;
    end else begin
        A_V_4_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2613)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_16_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_16_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_16_address1 = 'bx;
        end
    end else begin
        A_V_4_16_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_16_ce0 = 1'b1;
    end else begin
        A_V_4_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd16) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd16) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_16_ce1 = 1'b1;
    end else begin
        A_V_4_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2613)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_16_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_16_d1 = 16'd0;
        end else begin
            A_V_4_16_d1 = 'bx;
        end
    end else begin
        A_V_4_16_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd16) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd16) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_16_we1 = 1'b1;
    end else begin
        A_V_4_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2616)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_17_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_17_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_17_address1 = 'bx;
        end
    end else begin
        A_V_4_17_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_17_ce0 = 1'b1;
    end else begin
        A_V_4_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd17) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd17) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_17_ce1 = 1'b1;
    end else begin
        A_V_4_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2616)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_17_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_17_d1 = 16'd0;
        end else begin
            A_V_4_17_d1 = 'bx;
        end
    end else begin
        A_V_4_17_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd17) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd17) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_17_we1 = 1'b1;
    end else begin
        A_V_4_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2619)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_18_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_18_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_18_address1 = 'bx;
        end
    end else begin
        A_V_4_18_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_18_ce0 = 1'b1;
    end else begin
        A_V_4_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd18) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd18) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_18_ce1 = 1'b1;
    end else begin
        A_V_4_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2619)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_18_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_18_d1 = 16'd0;
        end else begin
            A_V_4_18_d1 = 'bx;
        end
    end else begin
        A_V_4_18_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd18) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd18) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_18_we1 = 1'b1;
    end else begin
        A_V_4_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2622)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_19_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_19_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_19_address1 = 'bx;
        end
    end else begin
        A_V_4_19_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_19_ce0 = 1'b1;
    end else begin
        A_V_4_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd19) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd19) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_19_ce1 = 1'b1;
    end else begin
        A_V_4_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2622)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_19_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_19_d1 = 16'd0;
        end else begin
            A_V_4_19_d1 = 'bx;
        end
    end else begin
        A_V_4_19_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd19) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd19) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_19_we1 = 1'b1;
    end else begin
        A_V_4_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2625)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_1_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_1_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_1_address1 = 'bx;
        end
    end else begin
        A_V_4_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_1_ce0 = 1'b1;
    end else begin
        A_V_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd1) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd1) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_1_ce1 = 1'b1;
    end else begin
        A_V_4_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2625)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_1_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_1_d1 = 16'd0;
        end else begin
            A_V_4_1_d1 = 'bx;
        end
    end else begin
        A_V_4_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd1) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd1) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_1_we1 = 1'b1;
    end else begin
        A_V_4_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2628)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_20_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_20_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_20_address1 = 'bx;
        end
    end else begin
        A_V_4_20_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_20_ce0 = 1'b1;
    end else begin
        A_V_4_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd20) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd20) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_20_ce1 = 1'b1;
    end else begin
        A_V_4_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2628)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_20_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_20_d1 = 16'd0;
        end else begin
            A_V_4_20_d1 = 'bx;
        end
    end else begin
        A_V_4_20_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd20) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd20) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_20_we1 = 1'b1;
    end else begin
        A_V_4_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2631)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_21_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_21_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_21_address1 = 'bx;
        end
    end else begin
        A_V_4_21_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_21_ce0 = 1'b1;
    end else begin
        A_V_4_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd21) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd21) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_21_ce1 = 1'b1;
    end else begin
        A_V_4_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2631)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_21_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_21_d1 = 16'd0;
        end else begin
            A_V_4_21_d1 = 'bx;
        end
    end else begin
        A_V_4_21_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd21) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd21) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_21_we1 = 1'b1;
    end else begin
        A_V_4_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2634)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_22_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_22_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_22_address1 = 'bx;
        end
    end else begin
        A_V_4_22_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_22_ce0 = 1'b1;
    end else begin
        A_V_4_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd22) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd22) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_22_ce1 = 1'b1;
    end else begin
        A_V_4_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2634)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_22_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_22_d1 = 16'd0;
        end else begin
            A_V_4_22_d1 = 'bx;
        end
    end else begin
        A_V_4_22_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd22) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd22) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_22_we1 = 1'b1;
    end else begin
        A_V_4_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2637)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_23_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_23_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_23_address1 = 'bx;
        end
    end else begin
        A_V_4_23_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_23_ce0 = 1'b1;
    end else begin
        A_V_4_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd23) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd23) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_23_ce1 = 1'b1;
    end else begin
        A_V_4_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2637)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_23_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_23_d1 = 16'd0;
        end else begin
            A_V_4_23_d1 = 'bx;
        end
    end else begin
        A_V_4_23_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd23) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd23) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_23_we1 = 1'b1;
    end else begin
        A_V_4_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_699)) begin
        if ((1'b1 == ap_condition_1703)) begin
            A_V_4_24_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((1'b1 == ap_condition_1686)) begin
            A_V_4_24_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_24_address1 = 'bx;
        end
    end else begin
        A_V_4_24_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_24_ce0 = 1'b1;
    end else begin
        A_V_4_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (((((((((reg_2155 == 5'd30) & (icmp_ln108_reg_3270 == 1'd1)) | ((reg_2155 == 5'd31) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd29) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd28) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd27) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd26) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd25) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd24) & (icmp_ln108_reg_3270 == 1'd1)))) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (((((((((reg_2155 == 5'd30) & (icmp_ln108_reg_3270 == 1'd0)) | ((reg_2155 == 5'd31) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd29) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd28) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd27) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd26) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd25) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd24) & (icmp_ln108_reg_3270 == 1'd0)))))) begin
        A_V_4_24_ce1 = 1'b1;
    end else begin
        A_V_4_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_699)) begin
        if ((1'b1 == ap_condition_1703)) begin
            A_V_4_24_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((1'b1 == ap_condition_1686)) begin
            A_V_4_24_d1 = 16'd0;
        end else begin
            A_V_4_24_d1 = 'bx;
        end
    end else begin
        A_V_4_24_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (((((((((reg_2155 == 5'd30) & (icmp_ln108_reg_3270 == 1'd1)) | ((reg_2155 == 5'd31) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd29) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd28) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd27) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd26) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd25) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd24) & (icmp_ln108_reg_3270 == 1'd1)))) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (((((((((reg_2155 == 5'd30) & (icmp_ln108_reg_3270 == 1'd0)) | ((reg_2155 == 5'd31) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd29) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd28) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd27) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd26) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd25) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd24) & (icmp_ln108_reg_3270 == 1'd0)))))) begin
        A_V_4_24_we1 = 1'b1;
    end else begin
        A_V_4_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2646)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_2_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_2_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_2_address1 = 'bx;
        end
    end else begin
        A_V_4_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_2_ce0 = 1'b1;
    end else begin
        A_V_4_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd2) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd2) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_2_ce1 = 1'b1;
    end else begin
        A_V_4_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2646)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_2_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_2_d1 = 16'd0;
        end else begin
            A_V_4_2_d1 = 'bx;
        end
    end else begin
        A_V_4_2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd2) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd2) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_2_we1 = 1'b1;
    end else begin
        A_V_4_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2649)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_3_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_3_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_3_address1 = 'bx;
        end
    end else begin
        A_V_4_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_3_ce0 = 1'b1;
    end else begin
        A_V_4_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd3) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd3) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_3_ce1 = 1'b1;
    end else begin
        A_V_4_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2649)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_3_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_3_d1 = 16'd0;
        end else begin
            A_V_4_3_d1 = 'bx;
        end
    end else begin
        A_V_4_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd3) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd3) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_3_we1 = 1'b1;
    end else begin
        A_V_4_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2652)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_4_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_4_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_4_address1 = 'bx;
        end
    end else begin
        A_V_4_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_4_ce0 = 1'b1;
    end else begin
        A_V_4_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd4) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd4) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_4_ce1 = 1'b1;
    end else begin
        A_V_4_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2652)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_4_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_4_d1 = 16'd0;
        end else begin
            A_V_4_4_d1 = 'bx;
        end
    end else begin
        A_V_4_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd4) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd4) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_4_we1 = 1'b1;
    end else begin
        A_V_4_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2655)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_5_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_5_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_5_address1 = 'bx;
        end
    end else begin
        A_V_4_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_5_ce0 = 1'b1;
    end else begin
        A_V_4_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd5) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd5) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_5_ce1 = 1'b1;
    end else begin
        A_V_4_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2655)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_5_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_5_d1 = 16'd0;
        end else begin
            A_V_4_5_d1 = 'bx;
        end
    end else begin
        A_V_4_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd5) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd5) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_5_we1 = 1'b1;
    end else begin
        A_V_4_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2658)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_6_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_6_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_6_address1 = 'bx;
        end
    end else begin
        A_V_4_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_6_ce0 = 1'b1;
    end else begin
        A_V_4_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd6) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd6) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_6_ce1 = 1'b1;
    end else begin
        A_V_4_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2658)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_6_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_6_d1 = 16'd0;
        end else begin
            A_V_4_6_d1 = 'bx;
        end
    end else begin
        A_V_4_6_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd6) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd6) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_6_we1 = 1'b1;
    end else begin
        A_V_4_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2661)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_7_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_7_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_7_address1 = 'bx;
        end
    end else begin
        A_V_4_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_7_ce0 = 1'b1;
    end else begin
        A_V_4_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd7) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd7) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_7_ce1 = 1'b1;
    end else begin
        A_V_4_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2661)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_7_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_7_d1 = 16'd0;
        end else begin
            A_V_4_7_d1 = 'bx;
        end
    end else begin
        A_V_4_7_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd7) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd7) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_7_we1 = 1'b1;
    end else begin
        A_V_4_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2664)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_8_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_8_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_8_address1 = 'bx;
        end
    end else begin
        A_V_4_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        A_V_4_8_ce0 = 1'b1;
    end else begin
        A_V_4_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd8) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd8) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_8_ce1 = 1'b1;
    end else begin
        A_V_4_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2664)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_8_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_8_d1 = 16'd0;
        end else begin
            A_V_4_8_d1 = 'bx;
        end
    end else begin
        A_V_4_8_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd8) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd8) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_8_we1 = 1'b1;
    end else begin
        A_V_4_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2667)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_9_address1 = zext_ln180_2_fu_2358_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_9_address1 = zext_ln180_3_fu_2301_p1;
        end else begin
            A_V_4_9_address1 = 'bx;
        end
    end else begin
        A_V_4_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_4_9_ce0 = 1'b1;
    end else begin
        A_V_4_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd9) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd9) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_9_ce1 = 1'b1;
    end else begin
        A_V_4_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2667)) begin
        if ((icmp_ln108_reg_3270 == 1'd1)) begin
            A_V_4_9_d1 = trunc_ln68_1_fu_2329_p1;
        end else if ((icmp_ln108_reg_3270 == 1'd0)) begin
            A_V_4_9_d1 = 16'd0;
        end else begin
            A_V_4_9_d1 = 'bx;
        end
    end else begin
        A_V_4_9_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd9) & (icmp_ln108_reg_3270 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (reg_2155 == 5'd9) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        A_V_4_9_we1 = 1'b1;
    end else begin
        A_V_4_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2670)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_0_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_0_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_0_address1 = 'bx;
        end
    end else begin
        B_V_4_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_0_ce0 = 1'b1;
    end else begin
        B_V_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd0) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd0) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_0_ce1 = 1'b1;
    end else begin
        B_V_4_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2670)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_0_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_0_d1 = 16'd0;
        end else begin
            B_V_4_0_d1 = 'bx;
        end
    end else begin
        B_V_4_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd0) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd0) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_0_we1 = 1'b1;
    end else begin
        B_V_4_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2673)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_10_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_10_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_10_address1 = 'bx;
        end
    end else begin
        B_V_4_10_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_10_ce0 = 1'b1;
    end else begin
        B_V_4_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd10) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd10) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_10_ce1 = 1'b1;
    end else begin
        B_V_4_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2673)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_10_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_10_d1 = 16'd0;
        end else begin
            B_V_4_10_d1 = 'bx;
        end
    end else begin
        B_V_4_10_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd10) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd10) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_10_we1 = 1'b1;
    end else begin
        B_V_4_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2676)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_11_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_11_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_11_address1 = 'bx;
        end
    end else begin
        B_V_4_11_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_4_11_ce0 = 1'b1;
    end else begin
        B_V_4_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd11) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd11) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_11_ce1 = 1'b1;
    end else begin
        B_V_4_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2676)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_11_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_11_d1 = 16'd0;
        end else begin
            B_V_4_11_d1 = 'bx;
        end
    end else begin
        B_V_4_11_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd11) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd11) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_11_we1 = 1'b1;
    end else begin
        B_V_4_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2679)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_12_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_12_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_12_address1 = 'bx;
        end
    end else begin
        B_V_4_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_12_ce0 = 1'b1;
    end else begin
        B_V_4_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd12) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd12) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_12_ce1 = 1'b1;
    end else begin
        B_V_4_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2679)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_12_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_12_d1 = 16'd0;
        end else begin
            B_V_4_12_d1 = 'bx;
        end
    end else begin
        B_V_4_12_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd12) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd12) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_12_we1 = 1'b1;
    end else begin
        B_V_4_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2682)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_13_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_13_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_13_address1 = 'bx;
        end
    end else begin
        B_V_4_13_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_13_ce0 = 1'b1;
    end else begin
        B_V_4_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd13) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd13) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_13_ce1 = 1'b1;
    end else begin
        B_V_4_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2682)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_13_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_13_d1 = 16'd0;
        end else begin
            B_V_4_13_d1 = 'bx;
        end
    end else begin
        B_V_4_13_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd13) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd13) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_13_we1 = 1'b1;
    end else begin
        B_V_4_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2685)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_14_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_14_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_14_address1 = 'bx;
        end
    end else begin
        B_V_4_14_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_4_14_ce0 = 1'b1;
    end else begin
        B_V_4_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd14) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd14) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_14_ce1 = 1'b1;
    end else begin
        B_V_4_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2685)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_14_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_14_d1 = 16'd0;
        end else begin
            B_V_4_14_d1 = 'bx;
        end
    end else begin
        B_V_4_14_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd14) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd14) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_14_we1 = 1'b1;
    end else begin
        B_V_4_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2688)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_15_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_15_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_15_address1 = 'bx;
        end
    end else begin
        B_V_4_15_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_15_ce0 = 1'b1;
    end else begin
        B_V_4_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd15) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd15) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_15_ce1 = 1'b1;
    end else begin
        B_V_4_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2688)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_15_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_15_d1 = 16'd0;
        end else begin
            B_V_4_15_d1 = 'bx;
        end
    end else begin
        B_V_4_15_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd15) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd15) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_15_we1 = 1'b1;
    end else begin
        B_V_4_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2691)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_16_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_16_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_16_address1 = 'bx;
        end
    end else begin
        B_V_4_16_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_16_ce0 = 1'b1;
    end else begin
        B_V_4_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd16) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd16) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_16_ce1 = 1'b1;
    end else begin
        B_V_4_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2691)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_16_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_16_d1 = 16'd0;
        end else begin
            B_V_4_16_d1 = 'bx;
        end
    end else begin
        B_V_4_16_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd16) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd16) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_16_we1 = 1'b1;
    end else begin
        B_V_4_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2694)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_17_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_17_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_17_address1 = 'bx;
        end
    end else begin
        B_V_4_17_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_4_17_ce0 = 1'b1;
    end else begin
        B_V_4_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd17) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd17) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_17_ce1 = 1'b1;
    end else begin
        B_V_4_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2694)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_17_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_17_d1 = 16'd0;
        end else begin
            B_V_4_17_d1 = 'bx;
        end
    end else begin
        B_V_4_17_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd17) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd17) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_17_we1 = 1'b1;
    end else begin
        B_V_4_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2697)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_18_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_18_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_18_address1 = 'bx;
        end
    end else begin
        B_V_4_18_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_4_18_ce0 = 1'b1;
    end else begin
        B_V_4_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd18) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd18) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_18_ce1 = 1'b1;
    end else begin
        B_V_4_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2697)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_18_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_18_d1 = 16'd0;
        end else begin
            B_V_4_18_d1 = 'bx;
        end
    end else begin
        B_V_4_18_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd18) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd18) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_18_we1 = 1'b1;
    end else begin
        B_V_4_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2700)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_19_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_19_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_19_address1 = 'bx;
        end
    end else begin
        B_V_4_19_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_19_ce0 = 1'b1;
    end else begin
        B_V_4_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd19) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd19) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_19_ce1 = 1'b1;
    end else begin
        B_V_4_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2700)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_19_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_19_d1 = 16'd0;
        end else begin
            B_V_4_19_d1 = 'bx;
        end
    end else begin
        B_V_4_19_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd19) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd19) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_19_we1 = 1'b1;
    end else begin
        B_V_4_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2703)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_1_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_1_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_1_address1 = 'bx;
        end
    end else begin
        B_V_4_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_1_ce0 = 1'b1;
    end else begin
        B_V_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd1) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd1) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_1_ce1 = 1'b1;
    end else begin
        B_V_4_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2703)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_1_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_1_d1 = 16'd0;
        end else begin
            B_V_4_1_d1 = 'bx;
        end
    end else begin
        B_V_4_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd1) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd1) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_1_we1 = 1'b1;
    end else begin
        B_V_4_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2706)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_20_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_20_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_20_address1 = 'bx;
        end
    end else begin
        B_V_4_20_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_4_20_ce0 = 1'b1;
    end else begin
        B_V_4_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd20) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd20) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_20_ce1 = 1'b1;
    end else begin
        B_V_4_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2706)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_20_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_20_d1 = 16'd0;
        end else begin
            B_V_4_20_d1 = 'bx;
        end
    end else begin
        B_V_4_20_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd20) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd20) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_20_we1 = 1'b1;
    end else begin
        B_V_4_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2709)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_21_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_21_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_21_address1 = 'bx;
        end
    end else begin
        B_V_4_21_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_21_ce0 = 1'b1;
    end else begin
        B_V_4_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd21) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd21) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_21_ce1 = 1'b1;
    end else begin
        B_V_4_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2709)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_21_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_21_d1 = 16'd0;
        end else begin
            B_V_4_21_d1 = 'bx;
        end
    end else begin
        B_V_4_21_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd21) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd21) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_21_we1 = 1'b1;
    end else begin
        B_V_4_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2712)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_22_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_22_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_22_address1 = 'bx;
        end
    end else begin
        B_V_4_22_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_4_22_ce0 = 1'b1;
    end else begin
        B_V_4_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd22) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd22) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_22_ce1 = 1'b1;
    end else begin
        B_V_4_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2712)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_22_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_22_d1 = 16'd0;
        end else begin
            B_V_4_22_d1 = 'bx;
        end
    end else begin
        B_V_4_22_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd22) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd22) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_22_we1 = 1'b1;
    end else begin
        B_V_4_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2715)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_23_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_23_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_23_address1 = 'bx;
        end
    end else begin
        B_V_4_23_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_23_ce0 = 1'b1;
    end else begin
        B_V_4_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd23) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd23) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_23_ce1 = 1'b1;
    end else begin
        B_V_4_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2715)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_23_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_23_d1 = 16'd0;
        end else begin
            B_V_4_23_d1 = 'bx;
        end
    end else begin
        B_V_4_23_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd23) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd23) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_23_we1 = 1'b1;
    end else begin
        B_V_4_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_682)) begin
        if ((1'b1 == ap_condition_1811)) begin
            B_V_4_24_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'b1 == ap_condition_1794)) begin
            B_V_4_24_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_24_address1 = 'bx;
        end
    end else begin
        B_V_4_24_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_4_24_ce0 = 1'b1;
    end else begin
        B_V_4_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (((((((((reg_2159 == 5'd30) & (1'd1 == and_ln82_reg_3904)) | ((reg_2159 == 5'd31) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd29) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd28) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd27) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd26) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd25) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd24) & (1'd1 == and_ln82_reg_3904)))) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (((((((((reg_2159 == 5'd30) & (1'd0 == and_ln82_reg_3904)) | ((reg_2159 == 5'd31) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd29) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd28) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd27) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd26) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd25) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd24) & (1'd0 == and_ln82_reg_3904)))))) begin
        B_V_4_24_ce1 = 1'b1;
    end else begin
        B_V_4_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_682)) begin
        if ((1'b1 == ap_condition_1811)) begin
            B_V_4_24_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'b1 == ap_condition_1794)) begin
            B_V_4_24_d1 = 16'd0;
        end else begin
            B_V_4_24_d1 = 'bx;
        end
    end else begin
        B_V_4_24_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (((((((((reg_2159 == 5'd30) & (1'd1 == and_ln82_reg_3904)) | ((reg_2159 == 5'd31) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd29) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd28) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd27) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd26) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd25) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd24) & (1'd1 == and_ln82_reg_3904)))) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (((((((((reg_2159 == 5'd30) & (1'd0 == and_ln82_reg_3904)) | ((reg_2159 == 5'd31) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd29) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd28) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd27) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd26) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd25) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd24) & (1'd0 == and_ln82_reg_3904)))))) begin
        B_V_4_24_we1 = 1'b1;
    end else begin
        B_V_4_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2724)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_2_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_2_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_2_address1 = 'bx;
        end
    end else begin
        B_V_4_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_4_2_ce0 = 1'b1;
    end else begin
        B_V_4_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd2) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd2) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_2_ce1 = 1'b1;
    end else begin
        B_V_4_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2724)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_2_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_2_d1 = 16'd0;
        end else begin
            B_V_4_2_d1 = 'bx;
        end
    end else begin
        B_V_4_2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd2) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd2) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_2_we1 = 1'b1;
    end else begin
        B_V_4_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2727)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_3_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_3_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_3_address1 = 'bx;
        end
    end else begin
        B_V_4_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_3_ce0 = 1'b1;
    end else begin
        B_V_4_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd3) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd3) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_3_ce1 = 1'b1;
    end else begin
        B_V_4_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2727)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_3_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_3_d1 = 16'd0;
        end else begin
            B_V_4_3_d1 = 'bx;
        end
    end else begin
        B_V_4_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd3) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd3) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_3_we1 = 1'b1;
    end else begin
        B_V_4_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2730)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_4_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_4_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_4_address1 = 'bx;
        end
    end else begin
        B_V_4_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_4_ce0 = 1'b1;
    end else begin
        B_V_4_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd4) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd4) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_4_ce1 = 1'b1;
    end else begin
        B_V_4_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2730)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_4_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_4_d1 = 16'd0;
        end else begin
            B_V_4_4_d1 = 'bx;
        end
    end else begin
        B_V_4_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd4) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd4) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_4_we1 = 1'b1;
    end else begin
        B_V_4_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2733)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_5_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_5_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_5_address1 = 'bx;
        end
    end else begin
        B_V_4_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_4_5_ce0 = 1'b1;
    end else begin
        B_V_4_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd5) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd5) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_5_ce1 = 1'b1;
    end else begin
        B_V_4_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2733)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_5_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_5_d1 = 16'd0;
        end else begin
            B_V_4_5_d1 = 'bx;
        end
    end else begin
        B_V_4_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd5) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd5) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_5_we1 = 1'b1;
    end else begin
        B_V_4_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2736)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_6_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_6_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_6_address1 = 'bx;
        end
    end else begin
        B_V_4_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_4_6_ce0 = 1'b1;
    end else begin
        B_V_4_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd6) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd6) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_6_ce1 = 1'b1;
    end else begin
        B_V_4_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2736)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_6_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_6_d1 = 16'd0;
        end else begin
            B_V_4_6_d1 = 'bx;
        end
    end else begin
        B_V_4_6_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd6) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd6) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_6_we1 = 1'b1;
    end else begin
        B_V_4_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2739)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_7_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_7_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_7_address1 = 'bx;
        end
    end else begin
        B_V_4_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        B_V_4_7_ce0 = 1'b1;
    end else begin
        B_V_4_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd7) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd7) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_7_ce1 = 1'b1;
    end else begin
        B_V_4_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2739)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_7_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_7_d1 = 16'd0;
        end else begin
            B_V_4_7_d1 = 'bx;
        end
    end else begin
        B_V_4_7_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd7) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd7) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_7_we1 = 1'b1;
    end else begin
        B_V_4_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2742)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_8_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_8_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_8_address1 = 'bx;
        end
    end else begin
        B_V_4_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_4_8_ce0 = 1'b1;
    end else begin
        B_V_4_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd8) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd8) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_8_ce1 = 1'b1;
    end else begin
        B_V_4_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2742)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_8_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_8_d1 = 16'd0;
        end else begin
            B_V_4_8_d1 = 'bx;
        end
    end else begin
        B_V_4_8_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd8) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd8) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_8_we1 = 1'b1;
    end else begin
        B_V_4_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2745)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_9_address1 = zext_ln180_fu_2952_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_9_address1 = zext_ln180_1_fu_2884_p1;
        end else begin
            B_V_4_9_address1 = 'bx;
        end
    end else begin
        B_V_4_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        B_V_4_9_ce0 = 1'b1;
    end else begin
        B_V_4_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd9) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd9) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_9_ce1 = 1'b1;
    end else begin
        B_V_4_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2745)) begin
        if ((1'd1 == and_ln82_reg_3904)) begin
            B_V_4_9_d1 = trunc_ln68_fu_2913_p1;
        end else if ((1'd0 == and_ln82_reg_3904)) begin
            B_V_4_9_d1 = 16'd0;
        end else begin
            B_V_4_9_d1 = 'bx;
        end
    end else begin
        B_V_4_9_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd9) & (1'd0 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (reg_2159 == 5'd9) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        B_V_4_9_we1 = 1'b1;
    end else begin
        B_V_4_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln149_fu_2215_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln105_fu_2267_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln121_fu_2386_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln78_fu_2795_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_3882 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_i_0_phi_fu_2118_p4 = select_ln78_1_reg_3897;
    end else begin
        ap_phi_mux_i_0_phi_fu_2118_p4 = i_0_reg_2114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln121_reg_3284 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_ib_0_phi_fu_2073_p4 = select_ln127_2_reg_3303;
    end else begin
        ap_phi_mux_ib_0_phi_fu_2073_p4 = ib_0_reg_2069;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln121_reg_3284 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        ap_phi_mux_ic_0_phi_fu_2096_p4 = ic_reg_3373;
    end else begin
        ap_phi_mux_ic_0_phi_fu_2096_p4 = ic_0_reg_2092;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln121_reg_3284_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        ap_phi_mux_p_0300_0_phi_fu_2084_p4 = add_ln700_24_reg_3864;
    end else begin
        ap_phi_mux_p_0300_0_phi_fu_2084_p4 = p_0300_0_reg_2080;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln149_reg_3230 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'd1 == and_ln82_reg_3904) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_stream_a_V_V_blk_n = in_stream_a_V_V_empty_n;
    end else begin
        in_stream_a_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_reg_3230 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln108_reg_3270 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_stream_a_V_V_read = 1'b1;
    end else begin
        in_stream_a_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp2_stage0) & (icmp_ln124_1_reg_3570_pp2_iter5_reg == 1'd1) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((icmp_ln149_reg_3230 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln82_reg_3904) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_stream_V_V_blk_n = out_stream_V_V_full_n;
    end else begin
        out_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln124_1_reg_3570_pp2_iter5_reg == 1'd1) & (ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0_01001))) begin
        out_stream_V_V_din = tmp_V_79_fu_2771_p1;
    end else if ((((icmp_ln149_reg_3230 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_stream_V_V_din = in_stream_a_V_V_dout;
    end else begin
        out_stream_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln124_1_reg_3570_pp2_iter5_reg == 1'd1) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_reg_3230 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'd1 == and_ln82_reg_3904) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_stream_V_V_write = 1'b1;
    end else begin
        out_stream_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_2163_p2 == 1'd0) & (icmp_ln95_fu_2176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln95_fu_2176_p2 == 1'd0) & (icmp_ln72_fu_2163_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0)) & (icmp_ln72_fu_2163_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln149_fu_2215_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln149_fu_2215_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln96_fu_2226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln102_fu_2256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln105_fu_2267_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln105_fu_2267_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln121_fu_2386_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0)) & ~((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((icmp_ln121_fu_2386_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0)) | ((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((icmp_ln78_fu_2795_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((icmp_ln78_fu_2795_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_COL_ITER_fu_2241_p0 = OFMDim_current;

assign A_COL_ITER_fu_2241_p1 = OFMDim_current;

assign A_COL_ITER_fu_2241_p2 = ($signed(A_COL_ITER_fu_2241_p0) * $signed(A_COL_ITER_fu_2241_p1));

assign A_V_4_0_address0 = zext_ln215_reg_3379;

assign A_V_4_10_address0 = zext_ln215_reg_3379;

assign A_V_4_11_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_12_address0 = zext_ln215_reg_3379;

assign A_V_4_13_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_14_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_15_address0 = zext_ln215_reg_3379;

assign A_V_4_16_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_17_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_18_address0 = zext_ln215_reg_3379;

assign A_V_4_19_address0 = zext_ln215_reg_3379;

assign A_V_4_1_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_20_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_21_address0 = zext_ln215_reg_3379;

assign A_V_4_22_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_23_address0 = zext_ln215_reg_3379;

assign A_V_4_24_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_2_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_3_address0 = zext_ln215_reg_3379;

assign A_V_4_4_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_5_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_6_address0 = zext_ln215_reg_3379;

assign A_V_4_7_address0 = zext_ln215_reg_3379;

assign A_V_4_8_address0 = zext_ln215_fu_2466_p1;

assign A_V_4_9_address0 = zext_ln215_reg_3379;

assign B_V_4_0_address0 = sext_ln215_50_reg_3308;

assign B_V_4_10_address0 = sext_ln215_50_reg_3308;

assign B_V_4_11_address0 = sext_ln215_50_fu_2447_p1;

assign B_V_4_12_address0 = sext_ln215_50_reg_3308;

assign B_V_4_13_address0 = sext_ln215_50_reg_3308;

assign B_V_4_14_address0 = sext_ln215_50_fu_2447_p1;

assign B_V_4_15_address0 = sext_ln215_50_reg_3308;

assign B_V_4_16_address0 = sext_ln215_50_reg_3308;

assign B_V_4_17_address0 = sext_ln215_50_fu_2447_p1;

assign B_V_4_18_address0 = sext_ln215_50_reg_3308_pp2_iter1_reg;

assign B_V_4_19_address0 = sext_ln215_50_reg_3308;

assign B_V_4_1_address0 = sext_ln215_50_reg_3308;

assign B_V_4_20_address0 = sext_ln215_50_fu_2447_p1;

assign B_V_4_21_address0 = sext_ln215_50_reg_3308;

assign B_V_4_22_address0 = sext_ln215_50_fu_2447_p1;

assign B_V_4_23_address0 = sext_ln215_50_reg_3308;

assign B_V_4_24_address0 = sext_ln215_50_fu_2447_p1;

assign B_V_4_2_address0 = sext_ln215_50_fu_2447_p1;

assign B_V_4_3_address0 = sext_ln215_50_reg_3308;

assign B_V_4_4_address0 = sext_ln215_50_reg_3308;

assign B_V_4_5_address0 = sext_ln215_50_fu_2447_p1;

assign B_V_4_6_address0 = sext_ln215_50_reg_3308_pp2_iter1_reg;

assign B_V_4_7_address0 = sext_ln215_50_reg_3308;

assign B_V_4_8_address0 = sext_ln215_50_fu_2447_p1;

assign B_V_4_9_address0 = sext_ln215_50_reg_3308_pp2_iter1_reg;

assign add_ln102_fu_2261_p2 = (iter_0_reg_2036 + 31'd1);

assign add_ln121_fu_2391_p2 = (indvar_flatten6_reg_2058 + 37'd1);

assign add_ln215_fu_2441_p2 = (sext_ln215_50_cast_fu_2429_p3 + zext_ln215_1_fu_2437_p1);

assign add_ln700_10_fu_2663_p2 = (add_ln700_4_fu_2655_p2 + add_ln700_9_fu_2659_p2);

assign add_ln700_15_fu_2669_p2 = ($signed(add_ln700_12_reg_3829) + $signed(add_ln700_14_reg_3834));

assign add_ln700_20_fu_2673_p2 = ($signed(add_ln700_18_reg_3844) + $signed(add_ln700_19_reg_3849));

assign add_ln700_21_fu_2677_p2 = ($signed(grp_fu_3146_p3) + $signed(add_ln700_20_fu_2673_p2));

assign add_ln700_22_fu_2682_p2 = (add_ln700_15_fu_2669_p2 + add_ln700_21_fu_2677_p2);

assign add_ln700_23_fu_2695_p2 = (add_ln700_10_reg_3854 + add_ln700_22_reg_3859);

assign add_ln700_24_fu_2699_p2 = (add_ln700_23_fu_2695_p2 + select_ln127_fu_2688_p3);

assign add_ln700_4_fu_2655_p2 = ($signed(add_ln700_1_reg_3809) + $signed(add_ln700_3_reg_3814));

assign add_ln700_9_fu_2659_p2 = ($signed(grp_fu_3130_p3) + $signed(grp_fu_3138_p3));

assign add_ln78_fu_2801_p2 = (indvar_flatten_reg_2103 + 16'd1);

assign and_ln82_fu_2862_p2 = (select_ln78_2_fu_2845_p3 & icmp_ln82_fu_2857_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln149_reg_3230 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_3230 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln149_reg_3230 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_3230 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln149_reg_3230 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_3230 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln108_reg_3270 == 1'd1) & (in_stream_a_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln108_reg_3270 == 1'd1) & (in_stream_a_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((icmp_ln124_1_reg_3570_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((icmp_ln124_1_reg_3570_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((icmp_ln124_1_reg_3570_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'd1 == and_ln82_reg_3904) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_3904) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'd1 == and_ln82_reg_3904) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_3904) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'd1 == and_ln82_reg_3904) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_3904) & (in_stream_a_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0) | (real_start == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter1 = (((icmp_ln149_reg_3230 == 1'd0) & (out_stream_V_V_full_n == 1'b0)) | ((icmp_ln149_reg_3230 == 1'd0) & (in_stream_a_V_V_empty_n == 1'b0)));
end

assign ap_block_state16_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp1_stage0_iter1 = ((icmp_ln108_reg_3270 == 1'd1) & (in_stream_a_V_V_empty_n == 1'b0));
end

assign ap_block_state19_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

assign ap_block_state20_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_pp2_stage0_iter6 = ((icmp_ln124_1_reg_3570_pp2_iter5_reg == 1'd1) & (out_stream_V_V_full_n == 1'b0));
end

assign ap_block_state28_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp3_stage0_iter1 = (((1'd1 == and_ln82_reg_3904) & (out_stream_V_V_full_n == 1'b0)) | ((1'd1 == and_ln82_reg_3904) & (in_stream_a_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((out_stream_V_V_full_n == 1'b0) | (in_stream_a_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_1686 = (((((((((reg_2155 == 5'd30) & (icmp_ln108_reg_3270 == 1'd0)) | ((reg_2155 == 5'd31) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd29) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd28) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd27) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd26) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd25) & (icmp_ln108_reg_3270 == 1'd0))) | ((reg_2155 == 5'd24) & (icmp_ln108_reg_3270 == 1'd0)));
end

always @ (*) begin
    ap_condition_1703 = (((((((((reg_2155 == 5'd30) & (icmp_ln108_reg_3270 == 1'd1)) | ((reg_2155 == 5'd31) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd29) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd28) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd27) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd26) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd25) & (icmp_ln108_reg_3270 == 1'd1))) | ((reg_2155 == 5'd24) & (icmp_ln108_reg_3270 == 1'd1)));
end

always @ (*) begin
    ap_condition_1794 = (((((((((reg_2159 == 5'd30) & (1'd0 == and_ln82_reg_3904)) | ((reg_2159 == 5'd31) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd29) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd28) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd27) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd26) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd25) & (1'd0 == and_ln82_reg_3904))) | ((reg_2159 == 5'd24) & (1'd0 == and_ln82_reg_3904)));
end

always @ (*) begin
    ap_condition_1811 = (((((((((reg_2159 == 5'd30) & (1'd1 == and_ln82_reg_3904)) | ((reg_2159 == 5'd31) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd29) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd28) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd27) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd26) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd25) & (1'd1 == and_ln82_reg_3904))) | ((reg_2159 == 5'd24) & (1'd1 == and_ln82_reg_3904)));
end

always @ (*) begin
    ap_condition_2592 = ((reg_2155 == 5'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2595 = ((reg_2155 == 5'd10) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2598 = ((reg_2155 == 5'd11) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2601 = ((reg_2155 == 5'd12) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2604 = ((reg_2155 == 5'd13) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2607 = ((reg_2155 == 5'd14) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2610 = ((reg_2155 == 5'd15) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2613 = ((reg_2155 == 5'd16) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2616 = ((reg_2155 == 5'd17) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2619 = ((reg_2155 == 5'd18) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2622 = ((reg_2155 == 5'd19) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2625 = ((reg_2155 == 5'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2628 = ((reg_2155 == 5'd20) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2631 = ((reg_2155 == 5'd21) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2634 = ((reg_2155 == 5'd22) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2637 = ((reg_2155 == 5'd23) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2646 = ((reg_2155 == 5'd2) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2649 = ((reg_2155 == 5'd3) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2652 = ((reg_2155 == 5'd4) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2655 = ((reg_2155 == 5'd5) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2658 = ((reg_2155 == 5'd6) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2661 = ((reg_2155 == 5'd7) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2664 = ((reg_2155 == 5'd8) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2667 = ((reg_2155 == 5'd9) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_2670 = ((reg_2159 == 5'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2673 = ((reg_2159 == 5'd10) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2676 = ((reg_2159 == 5'd11) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2679 = ((reg_2159 == 5'd12) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2682 = ((reg_2159 == 5'd13) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2685 = ((reg_2159 == 5'd14) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2688 = ((reg_2159 == 5'd15) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2691 = ((reg_2159 == 5'd16) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2694 = ((reg_2159 == 5'd17) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2697 = ((reg_2159 == 5'd18) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2700 = ((reg_2159 == 5'd19) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2703 = ((reg_2159 == 5'd1) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2706 = ((reg_2159 == 5'd20) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2709 = ((reg_2159 == 5'd21) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2712 = ((reg_2159 == 5'd22) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2715 = ((reg_2159 == 5'd23) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2724 = ((reg_2159 == 5'd2) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2727 = ((reg_2159 == 5'd3) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2730 = ((reg_2159 == 5'd4) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2733 = ((reg_2159 == 5'd5) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2736 = ((reg_2159 == 5'd6) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2739 = ((reg_2159 == 5'd7) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2742 = ((reg_2159 == 5'd8) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_2745 = ((reg_2159 == 5'd9) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_682 = ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_699 = ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign i_2_fu_2807_p2 = (ap_phi_mux_i_0_phi_fu_2118_p4 + 7'd1);

assign i_fu_2220_p2 = (i3_0_reg_2014 + 32'd1);

assign ib_fu_2397_p2 = (32'd1 + ap_phi_mux_ib_0_phi_fu_2073_p4);

assign ic_fu_2460_p2 = (6'd1 + select_ln127_1_fu_2409_p3);

assign icmp_ln102_fu_2256_p2 = (($signed(zext_ln102_fu_2252_p1) < $signed(A_COL_ITER_reg_3247)) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_2267_p2 = ((j2_0_reg_2047 == 10'd800) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_2287_p2 = ((zext_ln105_fu_2279_p1 < A_ROW) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_2386_p2 = ((indvar_flatten6_reg_2058 == tmp_43_reg_3210) ? 1'b1 : 1'b0);

assign icmp_ln124_1_fu_2482_p2 = ((ic_reg_3373 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_2403_p2 = ((ap_phi_mux_ic_0_phi_fu_2096_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_2758_p2 = (($signed(add_ln700_24_reg_3864) < $signed(32'd4294934529)) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_2215_p2 = ((i3_0_reg_2014 == KER_bound_reg_3225) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_2163_p2 = ((tmp_V_reg_3154 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_2795_p2 = ((indvar_flatten_reg_2103 == 16'd51200) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_2813_p2 = ((j_0_reg_2125 == 10'd800) ? 1'b1 : 1'b0);

assign icmp_ln82_1_fu_2790_p2 = ((zext_ln78_fu_2786_p1 < tmp_V_68_reg_3179) ? 1'b1 : 1'b0);

assign icmp_ln82_2_fu_2840_p2 = ((zext_ln78_1_fu_2828_p1 < tmp_V_68_reg_3179) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_2857_p2 = ((zext_ln79_fu_2853_p1 < mul_ln75_1_reg_3877) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_2176_p2 = ((tmp_V_reg_3154 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_2226_p2 = ((num_imag_0_reg_2025 == tmp_V_60_reg_3160) ? 1'b1 : 1'b0);

assign j_1_fu_2273_p2 = (j2_0_reg_2047 + 10'd1);

assign j_fu_2868_p2 = (select_ln78_fu_2819_p3 + 10'd1);

assign mul_ln75_1_fu_2776_p2 = ($signed(mul_ln75_reg_3215) * $signed(tmp_V_62_reg_3165));

assign mul_ln75_fu_2198_p2 = ($signed(tmp_V_62_reg_3165) * $signed(tmp_V_64_reg_3173));

assign num_imag_fu_2231_p2 = (num_imag_0_reg_2025 + 32'd1);

assign output_data_2_fu_2763_p3 = ((icmp_ln131_fu_2758_p2[0:0] === 1'b1) ? 18'd0 : output_data_fu_2750_p3);

assign output_data_fu_2750_p3 = ((tmp_1_fu_2721_p3[0:0] === 1'b1) ? sub_ln1371_1_fu_2731_p2 : zext_ln1371_1_fu_2746_p1);

assign select_ln127_1_fu_2409_p3 = ((icmp_ln124_fu_2403_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_ic_0_phi_fu_2096_p4);

assign select_ln127_2_fu_2417_p3 = ((icmp_ln124_fu_2403_p2[0:0] === 1'b1) ? ib_fu_2397_p2 : ap_phi_mux_ib_0_phi_fu_2073_p4);

assign select_ln127_fu_2688_p3 = ((icmp_ln124_reg_3293_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_p_0300_0_phi_fu_2084_p4);

assign select_ln78_1_fu_2832_p3 = ((icmp_ln79_fu_2813_p2[0:0] === 1'b1) ? i_2_fu_2807_p2 : ap_phi_mux_i_0_phi_fu_2118_p4);

assign select_ln78_2_fu_2845_p3 = ((icmp_ln79_fu_2813_p2[0:0] === 1'b1) ? icmp_ln82_2_fu_2840_p2 : icmp_ln82_1_fu_2790_p2);

assign select_ln78_fu_2819_p3 = ((icmp_ln79_fu_2813_p2[0:0] === 1'b1) ? 10'd0 : j_0_reg_2125);

assign sext_ln215_50_cast_fu_2429_p3 = {{trunc_ln124_fu_2425_p1}, {5'd0}};

assign sext_ln215_50_fu_2447_p1 = $signed(add_ln215_fu_2441_p2);

assign start_out = real_start;

assign sub_ln1371_1_fu_2731_p2 = (18'd0 - zext_ln1371_fu_2728_p1);

assign sub_ln1371_fu_2705_p2 = (32'd0 - add_ln700_24_fu_2699_p2);

assign tmp_1_fu_2721_p3 = add_ln700_24_reg_3864[32'd31];

assign tmp_43_fu_2185_p3 = {{B_COL}, {5'd0}};

assign tmp_45_fu_2945_p3 = {{select_ln78_1_reg_3897}, {trunc_ln180_fu_2942_p1}};

assign tmp_47_fu_2877_p3 = {{select_ln78_1_reg_3897}, {trunc_ln180_1_fu_2874_p1}};

assign tmp_51_fu_2737_p4 = {{add_ln700_24_reg_3864[31:15]}};

assign tmp_V_79_fu_2771_p1 = $signed(output_data_2_fu_2763_p3);

assign trunc_ln124_fu_2425_p1 = select_ln127_2_fu_2417_p3[7:0];

assign trunc_ln180_1_fu_2874_p1 = select_ln78_reg_3891[4:0];

assign trunc_ln180_2_fu_2297_p1 = j2_0_reg_2047[4:0];

assign trunc_ln180_3_fu_2293_p1 = j2_0_reg_2047[4:0];

assign trunc_ln180_fu_2942_p1 = select_ln78_reg_3891[4:0];

assign trunc_ln68_1_fu_2329_p1 = in_stream_a_V_V_dout[15:0];

assign trunc_ln68_fu_2913_p1 = in_stream_a_V_V_dout[15:0];

assign zext_ln102_fu_2252_p1 = iter_0_reg_2036;

assign zext_ln105_fu_2279_p1 = j2_0_reg_2047;

assign zext_ln1371_1_fu_2746_p1 = tmp_51_fu_2737_p4;

assign zext_ln1371_fu_2728_p1 = tmp_50_reg_3872;

assign zext_ln180_1_fu_2884_p1 = tmp_47_fu_2877_p3;

assign zext_ln180_2_fu_2358_p1 = trunc_ln180_2_reg_3279;

assign zext_ln180_3_fu_2301_p1 = trunc_ln180_3_reg_3274;

assign zext_ln180_fu_2952_p1 = tmp_45_fu_2945_p3;

assign zext_ln215_1_fu_2437_p1 = select_ln127_1_fu_2409_p3;

assign zext_ln215_fu_2466_p1 = select_ln127_1_reg_3298;

assign zext_ln78_1_fu_2828_p1 = i_2_fu_2807_p2;

assign zext_ln78_fu_2786_p1 = ap_phi_mux_i_0_phi_fu_2118_p4;

assign zext_ln79_fu_2853_p1 = select_ln78_fu_2819_p3;

always @ (posedge ap_clk) begin
    tmp_43_reg_3210[4:0] <= 5'b00000;
    zext_ln215_reg_3379[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //SMM_1u_800u_64u_s
